export { authentication, memoryStorage, staticToken } from './auth/index.cjs';
export { d as AuthenticationClient, c as AuthenticationConfig, a as AuthenticationData, A as AuthenticationMode, b as AuthenticationStorage, H as HttpMethod, L as LoginOptions, g as RequestOptions, h as RequestTransformer, i as ResponseTransformer, e as RestClient, R as RestCommand, f as RestConfig, S as StaticTokenClient, l as login } from './login-824b07b5.js';
import { C as ClientOptions, D as DirectusClient } from './client-572f0a81.js';
export { a as ClientGlobals, F as FetchInterface, U as UrlInterface, W as WebSocketConstructor, b as WebSocketInterface } from './client-572f0a81.js';
export { GqlResult, GraphqlClient, GraphqlConfig, graphql } from './graphql/index.cjs';
export { EmailAuth, RefreshAuth, TokenAuth, auth, generateUid, messageCallback, pong, realtime, sleep } from './realtime/index.cjs';
export { ap as AllCollections, a2 as ApplyManyToAnyFields, a3 as ApplyNestedQueryFields, a1 as ApplyQueryFields, C as CollectionMetaTranslationType, ah as CollectionType, ao as CompleteSchema, j as CoreSchema, D as DirectusActivity, i as DirectusCollection, k as DirectusDashboard, l as DirectusField, o as DirectusFile, p as DirectusFlow, q as DirectusFolder, r as DirectusNotification, s as DirectusOperation, t as DirectusPanel, u as DirectusPermission, v as DirectusPreset, w as DirectusRelation, x as DirectusRevision, y as DirectusRole, z as DirectusSettings, A as DirectusShare, B as DirectusUser, E as DirectusVersion, G as DirectusWebhook, a9 as ExtractItem, aa as ExtractRelation, m as FieldMetaConditionOptionType, F as FieldMetaConditionType, n as FieldMetaTranslationType, a6 as FieldOutputMap, N as FieldsWildcard, Y as FilterOperators, aq as GetCollection, ar as GetCollectionName, K as HasManyToAnyRelation, L as HasNestedFields, aC as Identity, ay as IfAny, ax as IfNever, az as IsAny, aA as IsNullable, ag as ItemType, T as LiteralFields, $ as LogicalFilterOperators, M as ManyToAnyFields, a5 as MapFlatFields, au as Merge, an as MergeCoreCollection, ac as MergeFields, ae as MergeObjects, av as MergeOptional, ab as MergeRelationalFields, as as Mutable, aB as NestedPartial, V as NestedQueryFilter, X as NestedRelationalFilter, aw as NeverToUnknown, O as PickFlatFields, P as PickRelationalFields, ak as PrimitiveFields, a7 as Query, af as QueryAlias, Q as QueryDeep, H as QueryFields, J as QueryFieldsRelational, U as QueryFilter, a8 as QueryItem, ad as QuerySort, aj as RegularCollections, a4 as RelationNullable, al as RelationalFields, Z as RelationalFilterOperators, R as RemoveEventHandler, am as RemoveRelationships, ai as SingletonCollections, S as SubscribeOptions, f as SubscriptionEvents, e as SubscriptionOptionsEvents, g as SubscriptionOutput, h as SubscriptionPayload, at as UnpackList, W as WebSocketAuthModes, d as WebSocketClient, a as WebSocketConfig, c as WebSocketEventHandler, b as WebSocketEvents, a0 as WrapLogicalFilters, I as WrapQueryFields, _ as WrapRelationalFilters } from './output-ef15f34f.js';
export { dw as AggregateRecord, dy as AggregationOptions, dz as AggregationOutput, dv as AggregationTypes, dA as AssetsQuery, C as CreateActivityOutput, d as CreateCollectionOutput, a2 as CreateContentVersionOutput, f as CreateDashboardOutput, i as CreateFieldOutput, k as CreateFileOutput, n as CreateFlowOutput, s as CreateFolderOutput, w as CreateItemOutput, z as CreateNotificationOutput, D as CreateOperationOutput, G as CreatePanelOutput, J as CreatePermissionOutput, M as CreatePresetOutput, P as CreateRelationOutput, S as CreateRoleOutput, V as CreateShareOutput, Y as CreateTranslationOutput, $ as CreateUserOutput, a5 as CreateWebhookOutput, dt as DirectusTranslation, dC as ExtensionItem, dB as ExtensionTypes, d2 as FileFormat, dx as GroupByFields, du as GroupingFunctions, c1 as OpenApiSpecOutput, aI as ReadActivityOutput, aP as ReadCollectionOutput, bN as ReadContentVersionOutput, aS as ReadDashboardOutput, aW as ReadFieldOutput, a_ as ReadFileOutput, b1 as ReadFlowOutput, b4 as ReadFolderOutput, b7 as ReadItemOutput, ba as ReadNotificationOutput, bd as ReadOperationOutput, bg as ReadPanelOutput, bj as ReadPermissionOutput, bm as ReadPresetOutput, R as ReadProviderOutput, bp as ReadRelationOutput, bt as ReadRevisionOutput, bw as ReadRoleOutput, bz as ReadSettingOutput, bB as ReadShareOutput, bE as ReadSingletonOutput, bG as ReadTranslationOutput, bJ as ReadUserOutput, bQ as ReadWebhookOutput, bU as SchemaDiffOutput, bW as SchemaSnapshotOutput, bZ as ServerHealthOutput, b$ as ServerInfoOutput, c4 as UpdateActivityOutput, c6 as UpdateCollectionOutput, cX as UpdateContentVersionOutput, c8 as UpdateDashboardOutput, cb as UpdateFieldOutput, cd as UpdateFileOutput, cg as UpdateFlowOutput, cj as UpdateFolderOutput, cm as UpdateItemOutput, cp as UpdateNotificationOutput, cs as UpdateOperationOutput, cv as UpdatePanelOutput, cy as UpdatePermissionOutput, cB as UpdatePresetOutput, cE as UpdateRelationOutput, cG as UpdateRoleOutput, cJ as UpdateSettingOutput, cL as UpdateShareOutput, cO as UpdateSingletonOutput, cQ as UpdateTranslationOutput, cT as UpdateUserOutput, c_ as UpdateWebhookOutput, de as acceptUserInvite, aL as aggregate, d9 as authenticateShare, d1 as clearCache, dj as compareContentVersion, e as createCollection, c as createComment, a4 as createContentVersion, a3 as createContentVersions, h as createDashboard, g as createDashboards, j as createField, q as createFlow, o as createFlows, v as createFolder, t as createFolders, y as createItem, x as createItems, B as createNotification, A as createNotifications, F as createOperation, E as createOperations, I as createPanel, H as createPanels, L as createPermission, K as createPermissions, O as createPreset, N as createPresets, Q as createRelation, U as createRole, T as createRoles, X as createShare, W as createShares, _ as createTranslation, Z as createTranslations, a1 as createUser, a0 as createUsers, a7 as createWebhook, a6 as createWebhooks, a9 as deleteCollection, a8 as deleteComment, aF as deleteContentVersion, aE as deleteContentVersions, ab as deleteDashboard, aa as deleteDashboards, ac as deleteField, ae as deleteFile, ad as deleteFiles, ag as deleteFlow, af as deleteFlows, ai as deleteFolder, ah as deleteFolders, ak as deleteItem, aj as deleteItems, am as deleteNotification, al as deleteNotifications, ao as deleteOperation, an as deleteOperations, aq as deletePanel, ap as deletePanels, as as deletePermission, ar as deletePermissions, au as deletePreset, at as deletePresets, av as deleteRelation, ax as deleteRole, aw as deleteRoles, az as deleteShare, ay as deleteShares, aB as deleteTranslation, aA as deleteTranslations, aD as deleteUser, aC as deleteUsers, aH as deleteWebhook, aG as deleteWebhooks, dh as disableTwoFactor, dg as enableTwoFactor, d5 as generateHash, df as generateTwoFactorSecret, m as importFile, da as inviteShare, dd as inviteUser, l as logout, p as passwordRequest, a as passwordReset, dk as promoteContentVersion, dq as queryToParams, aJ as readActivities, aK as readActivity, aO as readAssetArrayBuffer, aN as readAssetBlob, aM as readAssetRaw, aR as readCollection, aQ as readCollections, bP as readContentVersion, bO as readContentVersions, aU as readDashboard, aT as readDashboards, aV as readExtensions, aZ as readField, aX as readFields, aY as readFieldsByCollection, b0 as readFile, a$ as readFiles, b3 as readFlow, b2 as readFlows, b6 as readFolder, b5 as readFolders, bY as readGraphqlSdl, b9 as readItem, b8 as readItems, bM as readMe, bc as readNotification, bb as readNotifications, c2 as readOpenApiSpec, bf as readOperation, be as readOperations, bi as readPanel, bh as readPanels, bl as readPermission, bk as readPermissions, bo as readPreset, bn as readPresets, r as readProviders, bs as readRelation, br as readRelationByCollection, bq as readRelations, bv as readRevision, bu as readRevisions, by as readRole, bx as readRoles, bA as readSettings, bD as readShare, db as readShareInfo, bC as readShares, bF as readSingleton, bI as readTranslation, bH as readTranslations, bL as readUser, bK as readUsers, bS as readWebhook, bR as readWebhooks, b as refresh, dl as rest, di as saveToContentVersion, bT as schemaApply, bV as schemaDiff, bX as schemaSnapshot, b_ as serverHealth, c0 as serverInfo, c3 as serverPing, ds as throwIfCoreCollection, dr as throwIfEmpty, d4 as triggerFlow, d8 as triggerOperation, c7 as updateCollection, c5 as updateComment, cZ as updateContentVersion, cY as updateContentVersions, ca as updateDashboard, c9 as updateDashboards, cc as updateField, cf as updateFile, ce as updateFiles, ci as updateFlow, ch as updateFlows, cl as updateFolder, ck as updateFolders, co as updateItem, cn as updateItems, cW as updateMe, cr as updateNotification, cq as updateNotifications, cu as updateOperation, ct as updateOperations, cx as updatePanel, cw as updatePanels, cA as updatePermission, cz as updatePermissions, cD as updatePreset, cC as updatePresets, cF as updateRelation, cI as updateRole, cH as updateRoles, cK as updateSettings, cN as updateShare, cM as updateShares, cP as updateSingleton, cS as updateTranslation, cR as updateTranslations, cV as updateUser, cU as updateUsers, d0 as updateWebhook, c$ as updateWebhooks, u as uploadFiles, dc as utilitySort, d3 as utilsExport, d7 as utilsImport, d6 as verifyHash, dm as withOptions, dn as withSearch, dp as withToken } from './index-7ec1f729.js';

/**
 * Creates a client to communicate with a Directus app.
 *
 * @param url The URL to the Directus app.
 * @param config The optional configuration.
 *
 * @returns A Directus client.
 */
declare const createDirectus: <Schema extends object = any>(url: string, options?: ClientOptions) => DirectusClient<Schema>;

export { ClientOptions, DirectusClient, createDirectus };
