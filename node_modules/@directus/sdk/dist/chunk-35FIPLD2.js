function g(t){return JSON.stringify({...t,type:"auth"})}var W=()=>JSON.stringify({type:"pong"});var k=(t,u=1e3)=>new Promise((o,b)=>{let h=E=>{try{let p=JSON.parse(E.data);typeof p=="object"&&!Array.isArray(p)&&p!==null?(l(),o(p)):(l(),c())}catch{l(),o(E)}},c=()=>b(),l=()=>{clearTimeout(y),t.removeEventListener("message",h),t.removeEventListener("error",c),t.removeEventListener("close",c)};t.addEventListener("message",h),t.addEventListener("error",c),t.addEventListener("close",c);let y=setTimeout(()=>{l(),o(void 0)},u)});function*w(){let t=1;for(;;)yield String(t),t++}var O={authMode:"handshake",heartbeat:!0,reconnect:{delay:1e3,retries:10}},m={OPEN:1,CLOSED:3};function _(t={}){return u=>{t={...O,...t};let o=null,b=w(),h=0,c=!1,l=e=>"getToken"in e,y=async(e,n)=>{if(t.authMode==="strict"&&l(n)){let r=await n.getToken();r&&e.searchParams.set("access_token",r)}return e},E=async e=>{if("url"in t)return await y(new u.globals.URL(t.url),e);if(["ws:","wss:"].includes(u.url.protocol))return await y(u.url,e);let n=new u.globals.URL(u.url.toString());return n.protocol=u.url.protocol==="https:"?"wss:":"ws:",n.pathname="/websocket",await y(n,e)},p=()=>{o=null,b=w()};function x(){t.reconnect&&!c&&h<t.reconnect.retries?(c=!0,setTimeout(()=>{h+=1,this.connect().then(()=>{h=0,c=!1}).catch(()=>{})},Math.max(1,t.reconnect.delay))):c=!1}let d={open:new Set([]),error:new Set([]),close:new Set([]),message:new Set([])},C=async(e,n)=>{for(;e.readyState!==m.CLOSED;){let r=await k(e).catch(()=>{});if(r){if("type"in r){if(r.type==="auth"&&"status"in r&&r.status==="error"&&"error"in r){if(r.error==="TOKEN_EXPIRED"&&l(n)){let i=await n.getToken();if(i){e.send(g({access_token:i}));continue}}if(r.error==="AUTH_TIMEOUT"){e.close();continue}}if(t.heartbeat&&r.type==="ping"){e.send(W());continue}}d.message.forEach(i=>i.call(e,r))}}};return{async connect(){let e=this,n=await E(e);return new Promise((r,i)=>{let S=!1,a=new u.globals.WebSocket(n);a.addEventListener("open",async s=>{if(t.authMode==="handshake"&&l(e)){let f=await e.getToken();f&&a.send(g({access_token:f}))}S=!0,d.open.forEach(f=>f.call(a,s)),C(a,e),r()}),a.addEventListener("error",s=>{d.error.forEach(f=>f.call(a,s)),a.close(),S||i(s)}),a.addEventListener("close",s=>{d.close.forEach(f=>f.call(a,s)),p(),x.call(this),S||i(s)}),o=a})},disconnect(){o&&o?.readyState===m.OPEN&&o.close(),o=null},onWebSocket(e,n){if(e==="message"){let r=function(i){if(typeof i.data!="string")return n.call(this,i);try{return n.call(this,JSON.parse(i.data))}catch{return n.call(this,i)}};return d[e].add(r),()=>d[e].delete(r)}return d[e].add(n),()=>d[e].delete(n)},sendMessage(e){if(!o||o?.readyState!==m.OPEN)throw new Error("websocket connection not OPEN");if(typeof e=="string"){o.send(e);return}"uid"in e||(e.uid=b.next().value),o?.send(JSON.stringify(e))},async subscribe(e,n={}){(!o||o.readyState!==m.OPEN)&&await this.connect(),"uid"in n||(n.uid=b.next().value);let r=!0,i=o,S=s=>i.send(JSON.stringify(s));S({...n,collection:e,type:"subscribe"});async function*a(){for(;r&&i&&i.readyState===m.OPEN;){let s=await k(i).catch(()=>{});if(s){if("type"in s&&"status"in s&&s.type==="subscribe"&&s.status==="error")throw s;"type"in s&&"uid"in s&&s.type==="subscription"&&s.uid===n.uid&&(yield s)}}if(t.reconnect&&c){for(;c;)await v(10);o&&o.readyState===m.OPEN&&(o.send(JSON.stringify({...n,collection:e,type:"subscribe"})),yield*a())}}return{subscription:a(),unsubscribe(){S({uid:n.uid,type:"unsubscribe"}),r=!1}}}}}}var v=t=>new Promise(u=>setTimeout(()=>u(),t));export{g as a,W as b,k as c,w as d,_ as e,v as f};
//# sourceMappingURL=chunk-35FIPLD2.js.map