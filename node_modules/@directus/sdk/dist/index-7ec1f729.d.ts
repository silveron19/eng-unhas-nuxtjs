import { R as RestCommand, A as AuthenticationMode, a as AuthenticationData, f as RestConfig, e as RestClient, h as RequestTransformer } from './login-824b07b5.js';
import { an as MergeCoreCollection, T as LiteralFields, aD as DateTimeFunctions, al as RelationalFields, aE as ArrayFunctions, ap as AllCollections, at as UnpackList, aq as GetCollection, a7 as Query, aF as MappedFunctionFields, aG as MappedFieldNames, D as DirectusActivity, a1 as ApplyQueryFields, ay as IfAny, au as Merge, i as DirectusCollection, a5 as MapFlatFields, N as FieldsWildcard, as as Mutable, P as PickRelationalFields, ag as ItemType, aA as IsNullable, K as HasManyToAnyRelation, a3 as ApplyNestedQueryFields, a2 as ApplyManyToAnyFields, aB as NestedPartial, k as DirectusDashboard, l as DirectusField, o as DirectusFile, p as DirectusFlow, q as DirectusFolder, ah as CollectionType, r as DirectusNotification, s as DirectusOperation, t as DirectusPanel, u as DirectusPermission, v as DirectusPreset, w as DirectusRelation, y as DirectusRole, A as DirectusShare, B as DirectusUser, E as DirectusVersion, G as DirectusWebhook, aj as RegularCollections, a8 as QueryItem, x as DirectusRevision, z as DirectusSettings, ai as SingletonCollections, W as WebSocketAuthModes } from './output-ef15f34f.js';
import { D as DirectusClient } from './client-572f0a81.js';

type DirectusTranslation<Schema extends object> = MergeCoreCollection<Schema, 'directus_translations', {
    id: string;
    language: string;
    key: string;
    value: string;
}>;

/**
 * Invalidate the refresh token thus destroying the user's session.
 *
 * @param refresh_token The refresh token to invalidate. If you have the refresh token in a cookie through /auth/login, you don't have to submit it here.
 *
 * @returns Empty body.
 */
declare const logout: <Schema extends object>(refresh_token?: string) => RestCommand<void, Schema>;

/**
 * Request a password reset email to be sent to the given user.
 *
 * @param email Email address of the user you're requesting a password reset for.
 * @param reset_url Provide a custom reset url which the link in the email will lead to. The reset token will be passed as a parameter.
 *
 * @returns Empty body.
 */
declare const passwordRequest: <Schema extends object>(email: string, reset_url?: string) => RestCommand<void, Schema>;

/**
 * The request a password reset endpoint sends an email with a link to the admin app (or a custom route) which in turn uses this endpoint to allow the user to reset their password.
 *
 * @param token Password reset token, as provided in the email sent by the request endpoint.
 * @param password New password for the user.
 *
 * @returns Empty body.
 */
declare const passwordReset: <Schema extends object>(token: string, password: string) => RestCommand<void, Schema>;

interface ReadProviderOutput {
    name: string;
    driver: string;
    icon?: string | null;
}
/**
 * List all the configured auth providers.
 *
 * @returns Array of configured auth providers.
 */
declare const readProviders: <Schema extends object>() => RestCommand<ReadProviderOutput[], Schema>;

/**
 * Retrieve a new access token using a refresh token.
 *
 * @param mode Whether to retrieve the refresh token in the JSON response, or in a httpOnly secure cookie. One of json, cookie.
 * @param refresh_token The refresh token to use. If you have the refresh token in a cookie through /auth/login, you don't have to submit it here.
 *
 * @returns The new access and refresh tokens for the session.
 */
declare const refresh: <Schema extends object>(mode?: AuthenticationMode, refresh_token?: string) => RestCommand<AuthenticationData, Schema>;

type GroupingFunctions = {
    date: 'year' | 'month' | 'week' | 'day' | 'weekday' | 'hour' | 'minute' | 'second';
    array: 'count';
};
type AggregationTypes = {
    count: {
        output: string | null;
        wildcard: true;
    };
    countDistinct: {
        output: string | null;
        wildcard: true;
    };
    sum: {
        output: string | null;
        wildcard: never;
    };
    sumDistinct: {
        output: string | null;
        wildcard: never;
    };
    avg: {
        output: string | null;
        wildcard: never;
    };
    avgDistinct: {
        output: string | null;
        wildcard: never;
    };
    min: {
        output: number | null;
        wildcard: never;
    };
    max: {
        output: number | null;
        wildcard: never;
    };
};
/**
 * Aggregation parameters
 */
type AggregateRecord<Fields = string> = {
    [Func in keyof AggregationTypes]?: Fields | Fields[] | (AggregationTypes[Func]['wildcard'] extends never ? never : '*');
};
/**
 * GroupBy parameters
 */
type GroupByFields<Schema extends object, Item> = WrappedFields<LiteralFields<Item, 'datetime'>, DateTimeFunctions> | WrappedFields<RelationalFields<Schema, Item>, ArrayFunctions>;
/**
 * Aggregation input options
 */
type AggregationOptions<Schema extends object, Collection extends AllCollections<Schema>, Fields = Collection extends keyof Schema ? keyof UnpackList<GetCollection<Schema, Collection>> : string, Item = Collection extends keyof Schema ? UnpackList<GetCollection<Schema, Collection>> : object> = {
    aggregate: AggregateRecord<Fields>;
    groupBy?: (Fields | GroupByFields<Schema, Item>)[];
    query?: Omit<Query<Schema, Item>, 'fields' | 'deep' | 'alias'>;
};
/**
 * Output typing for aggregation
 */
type AggregationOutput<Schema extends object, Collection extends AllCollections<Schema>, Options extends AggregationOptions<Schema, Collection>> = ((Options['groupBy'] extends string[] ? UnpackList<GetCollection<Schema, Collection>> extends infer Item ? Item extends object ? MappedFunctionFields<Schema, Item> extends infer FieldMap ? MappedFieldNames<Schema, Item> extends infer NamesMap ? {
    [Field in UnpackList<Options['groupBy']> as TranslateFunctionField<FieldMap, Field>]: TranslateFunctionField<NamesMap, Field> extends keyof Item ? Item[TranslateFunctionField<NamesMap, Field>] : never;
} : never : never : never : never : object) & {
    [Func in keyof Options['aggregate']]: Func extends keyof AggregationTypes ? Options['aggregate'][Func] extends string[] ? {
        [Field in UnpackList<Options['aggregate'][Func]>]: Field extends '*' ? AggregationTypes[Func]['output'] : {
            [SubField in Field]: AggregationTypes[Func]['output'];
        }[Field];
    } : Options['aggregate'][Func] extends string ? Options['aggregate'][Func] extends '*' ? AggregationTypes[Func]['output'] : {
        [SubField in Options['aggregate'][Func]]: AggregationTypes[Func]['output'];
    }[Options['aggregate'][Func]] : never : never;
})[];
/**
 * Wrap fields in functions
 */
type WrappedFields<Fields, Funcs> = Fields extends string ? Funcs extends string ? `${Funcs}(${Fields})` : never : never;
/**
 * Translate function names based on provided map
 */
type TranslateFunctionField<FieldMap, Field> = Field extends keyof FieldMap ? FieldMap[Field] extends string ? FieldMap[Field] : never : Field extends string ? Field : never;

/**
 * The assets endpoint query parameters
 */
type AssetsQuery = {
    key: string;
} | {
    key?: never;
    fit?: 'cover' | 'contain' | 'inside' | 'outside';
    width?: number;
    height?: number;
    quality?: number;
    withoutEnlargement?: boolean;
    format?: 'auto' | 'jpg' | 'png' | 'webp' | 'tiff';
    transforms?: [string, ...any[]][];
};

type ExtensionTypes = 'interface' | 'display' | 'layout' | 'module' | 'panel' | 'hook' | 'endpoint' | 'operation' | 'bundle';
/**
 * The API output structure used when engaging with the /extensions endpoints
 * (Copied from `@directus/extensions`)
 */
interface ExtensionItem {
    name: string;
    bundle: string | null;
    schema: {
        type: ExtensionTypes;
        local: boolean;
    } | null;
    meta: {
        enabled: boolean;
    };
}

type CreateActivityOutput<Schema extends object, TQuery extends Query<Schema, Item>, Item extends object = DirectusActivity<Schema>> = ApplyQueryFields<Schema, Item, TQuery['fields']>;
/**
 * Creates a new comment on a given item.
 *
 * @param items The items to create
 * @param query Optional return data query
 *
 * @returns Returns the activity object of the created comment.
 */
declare const createComment: <Schema extends object, const TQuery extends Query<Schema, DirectusActivity<Schema>>>(item: Partial<DirectusActivity<Schema>>, query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_activity", {
    id: number;
    action: string;
    user: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    timestamp: "datetime";
    ip: string | null; /**
     * Creates a new comment on a given item.
     *
     * @param items The items to create
     * @param query Optional return data query
     *
     * @returns Returns the activity object of the created comment.
     */
    user_agent: string | null;
    collection: string;
    item: string;
    comment: string | null;
    origin: string | null;
    revisions: number[] | MergeCoreCollection<Schema, "directus_revisions", {
        id: number;
        activity: number | MergeCoreCollection<Schema, "directus_activity", any>;
        collection: string;
        item: string;
        data: Record<string, any> | null;
        delta: Record<string, any> | null;
        parent: number | MergeCoreCollection<Schema, "directus_revisions", any> | null;
        version: string | MergeCoreCollection<Schema, "directus_versions", {
            id: string;
            key: string;
            name: string | null;
            collection: string | DirectusCollection<Schema>;
            item: string;
            /**
             * Creates a new comment on a given item.
             *
             * @param items The items to create
             * @param query Optional return data query
             *
             * @returns Returns the activity object of the created comment.
             */
            hash: string;
            date_created: "datetime" | null;
            date_updated: "datetime" | null;
            user_created: string | MergeCoreCollection<Schema, "directus_users", {
                id: string;
                first_name: string | null;
                last_name: string | null;
                email: string | null;
                password: string | null;
                location: string | null;
                title: string | null;
                description: string | null;
                tags: string[] | null;
                avatar: string | MergeCoreCollection<Schema, "directus_files", {
                    id: string;
                    storage: string;
                    filename_disk: string | null;
                    filename_download: string;
                    title: string | null;
                    type: string | null;
                    folder: string | MergeCoreCollection<Schema, "directus_folders", {
                        id: string;
                        name: string;
                        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                    }> | null;
                    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    uploaded_on: "datetime";
                    modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    modified_on: "datetime";
                    charset: string | null;
                    filesize: string | null;
                    width: number | null;
                    height: number | null;
                    duration: number | null;
                    embed: unknown;
                    description: string | null;
                    location: string | null;
                    tags: string[] | null;
                    metadata: Record<string, any> | null;
                }> | null;
                language: string | null;
                theme: string | null;
                tfa_secret: string | null;
                status: string;
                role: string | MergeCoreCollection<Schema, "directus_roles", {
                    id: string;
                    name: string;
                    icon: string;
                    description: string | null;
                    ip_access: string | null;
                    enforce_tfa: boolean;
                    admin_access: boolean;
                    app_access: boolean;
                }> | null;
                token: string | null;
                last_access: "datetime" | null;
                last_page: string | null;
                provider: string;
                external_identifier: string | null;
                auth_data: Record<string, any> | null;
                email_notifications: boolean | null;
            }> | null;
            user_updated: string | MergeCoreCollection<Schema, "directus_users", {
                id: string;
                first_name: string | null;
                last_name: string | null;
                email: string | null;
                password: string | null;
                location: string | null;
                title: string | null;
                description: string | null;
                tags: string[] | null;
                avatar: string | MergeCoreCollection<Schema, "directus_files", {
                    id: string;
                    storage: string;
                    filename_disk: string | null;
                    filename_download: string;
                    title: string | null;
                    type: string | null;
                    folder: string | MergeCoreCollection<Schema, "directus_folders", {
                        id: string;
                        name: string;
                        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                    }> | null;
                    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    uploaded_on: "datetime";
                    modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    modified_on: "datetime";
                    charset: string | null;
                    filesize: string | null;
                    width: number | null;
                    height: number | null;
                    duration: number | null;
                    embed: unknown;
                    description: string | null;
                    location: string | null;
                    tags: string[] | null;
                    metadata: Record<string, any> | null;
                }> | null;
                language: string | null;
                theme: string | null;
                tfa_secret: string | null;
                status: string;
                role: string | MergeCoreCollection<Schema, "directus_roles", {
                    id: string;
                    name: string;
                    icon: string;
                    description: string | null;
                    ip_access: string | null;
                    enforce_tfa: boolean;
                    admin_access: boolean;
                    app_access: boolean;
                }> | null;
                token: string | null;
                last_access: "datetime" | null;
                last_page: string | null;
                provider: string;
                external_identifier: string | null;
                auth_data: Record<string, any> | null;
                email_notifications: boolean | null;
            }> | null;
        }> | null;
    }>[] | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_activity", {
    id: number;
    action: string;
    user: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    timestamp: "datetime";
    ip: string | null; /**
     * Creates a new comment on a given item.
     *
     * @param items The items to create
     * @param query Optional return data query
     *
     * @returns Returns the activity object of the created comment.
     */
    user_agent: string | null;
    collection: string;
    item: string;
    comment: string | null;
    origin: string | null;
    revisions: number[] | MergeCoreCollection<Schema, "directus_revisions", {
        id: number;
        activity: number | MergeCoreCollection<Schema, "directus_activity", any>;
        collection: string;
        item: string;
        data: Record<string, any> | null;
        delta: Record<string, any> | null;
        parent: number | MergeCoreCollection<Schema, "directus_revisions", any> | null;
        version: string | MergeCoreCollection<Schema, "directus_versions", {
            id: string;
            key: string;
            name: string | null;
            collection: string | DirectusCollection<Schema>;
            item: string;
            /**
             * Creates a new comment on a given item.
             *
             * @param items The items to create
             * @param query Optional return data query
             *
             * @returns Returns the activity object of the created comment.
             */
            hash: string;
            date_created: "datetime" | null;
            date_updated: "datetime" | null;
            user_created: string | MergeCoreCollection<Schema, "directus_users", {
                id: string;
                first_name: string | null;
                last_name: string | null;
                email: string | null;
                password: string | null;
                location: string | null;
                title: string | null;
                description: string | null;
                tags: string[] | null;
                avatar: string | MergeCoreCollection<Schema, "directus_files", {
                    id: string;
                    storage: string;
                    filename_disk: string | null;
                    filename_download: string;
                    title: string | null;
                    type: string | null;
                    folder: string | MergeCoreCollection<Schema, "directus_folders", {
                        id: string;
                        name: string;
                        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                    }> | null;
                    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    uploaded_on: "datetime";
                    modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    modified_on: "datetime";
                    charset: string | null;
                    filesize: string | null;
                    width: number | null;
                    height: number | null;
                    duration: number | null;
                    embed: unknown;
                    description: string | null;
                    location: string | null;
                    tags: string[] | null;
                    metadata: Record<string, any> | null;
                }> | null;
                language: string | null;
                theme: string | null;
                tfa_secret: string | null;
                status: string;
                role: string | MergeCoreCollection<Schema, "directus_roles", {
                    id: string;
                    name: string;
                    icon: string;
                    description: string | null;
                    ip_access: string | null;
                    enforce_tfa: boolean;
                    admin_access: boolean;
                    app_access: boolean;
                }> | null;
                token: string | null;
                last_access: "datetime" | null;
                last_page: string | null;
                provider: string;
                external_identifier: string | null;
                auth_data: Record<string, any> | null;
                email_notifications: boolean | null;
            }> | null;
            user_updated: string | MergeCoreCollection<Schema, "directus_users", {
                id: string;
                first_name: string | null;
                last_name: string | null;
                email: string | null;
                password: string | null;
                location: string | null;
                title: string | null;
                description: string | null;
                tags: string[] | null;
                avatar: string | MergeCoreCollection<Schema, "directus_files", {
                    id: string;
                    storage: string;
                    filename_disk: string | null;
                    filename_download: string;
                    title: string | null;
                    type: string | null;
                    folder: string | MergeCoreCollection<Schema, "directus_folders", {
                        id: string;
                        name: string;
                        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                    }> | null;
                    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    uploaded_on: "datetime";
                    modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    modified_on: "datetime";
                    charset: string | null;
                    filesize: string | null;
                    width: number | null;
                    height: number | null;
                    duration: number | null;
                    embed: unknown;
                    description: string | null;
                    location: string | null;
                    tags: string[] | null;
                    metadata: Record<string, any> | null;
                }> | null;
                language: string | null;
                theme: string | null;
                tfa_secret: string | null;
                status: string;
                role: string | MergeCoreCollection<Schema, "directus_roles", {
                    id: string;
                    name: string;
                    icon: string;
                    description: string | null;
                    ip_access: string | null;
                    enforce_tfa: boolean;
                    admin_access: boolean;
                    app_access: boolean;
                }> | null;
                token: string | null;
                last_access: "datetime" | null;
                last_page: string | null;
                provider: string;
                external_identifier: string | null;
                auth_data: Record<string, any> | null;
                email_notifications: boolean | null;
            }> | null;
        }> | null;
    }>[] | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_activity", {
    id: number;
    action: string;
    user: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    timestamp: "datetime";
    ip: string | null; /**
     * Creates a new comment on a given item.
     *
     * @param items The items to create
     * @param query Optional return data query
     *
     * @returns Returns the activity object of the created comment.
     */
    user_agent: string | null;
    collection: string;
    item: string;
    comment: string | null;
    origin: string | null;
    revisions: number[] | MergeCoreCollection<Schema, "directus_revisions", {
        id: number;
        activity: number | MergeCoreCollection<Schema, "directus_activity", any>;
        collection: string;
        item: string;
        data: Record<string, any> | null;
        delta: Record<string, any> | null;
        parent: number | MergeCoreCollection<Schema, "directus_revisions", any> | null;
        version: string | MergeCoreCollection<Schema, "directus_versions", {
            id: string;
            key: string;
            name: string | null;
            collection: string | DirectusCollection<Schema>;
            item: string;
            /**
             * Creates a new comment on a given item.
             *
             * @param items The items to create
             * @param query Optional return data query
             *
             * @returns Returns the activity object of the created comment.
             */
            hash: string;
            date_created: "datetime" | null;
            date_updated: "datetime" | null;
            user_created: string | MergeCoreCollection<Schema, "directus_users", {
                id: string;
                first_name: string | null;
                last_name: string | null;
                email: string | null;
                password: string | null;
                location: string | null;
                title: string | null;
                description: string | null;
                tags: string[] | null;
                avatar: string | MergeCoreCollection<Schema, "directus_files", {
                    id: string;
                    storage: string;
                    filename_disk: string | null;
                    filename_download: string;
                    title: string | null;
                    type: string | null;
                    folder: string | MergeCoreCollection<Schema, "directus_folders", {
                        id: string;
                        name: string;
                        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                    }> | null;
                    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    uploaded_on: "datetime";
                    modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    modified_on: "datetime";
                    charset: string | null;
                    filesize: string | null;
                    width: number | null;
                    height: number | null;
                    duration: number | null;
                    embed: unknown;
                    description: string | null;
                    location: string | null;
                    tags: string[] | null;
                    metadata: Record<string, any> | null;
                }> | null;
                language: string | null;
                theme: string | null;
                tfa_secret: string | null;
                status: string;
                role: string | MergeCoreCollection<Schema, "directus_roles", {
                    id: string;
                    name: string;
                    icon: string;
                    description: string | null;
                    ip_access: string | null;
                    enforce_tfa: boolean;
                    admin_access: boolean;
                    app_access: boolean;
                }> | null;
                token: string | null;
                last_access: "datetime" | null;
                last_page: string | null;
                provider: string;
                external_identifier: string | null;
                auth_data: Record<string, any> | null;
                email_notifications: boolean | null;
            }> | null;
            user_updated: string | MergeCoreCollection<Schema, "directus_users", {
                id: string;
                first_name: string | null;
                last_name: string | null;
                email: string | null;
                password: string | null;
                location: string | null;
                title: string | null;
                description: string | null;
                tags: string[] | null;
                avatar: string | MergeCoreCollection<Schema, "directus_files", {
                    id: string;
                    storage: string;
                    filename_disk: string | null;
                    filename_download: string;
                    title: string | null;
                    type: string | null;
                    folder: string | MergeCoreCollection<Schema, "directus_folders", {
                        id: string;
                        name: string;
                        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                    }> | null;
                    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    uploaded_on: "datetime";
                    modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    modified_on: "datetime";
                    charset: string | null;
                    filesize: string | null;
                    width: number | null;
                    height: number | null;
                    duration: number | null;
                    embed: unknown;
                    description: string | null;
                    location: string | null;
                    tags: string[] | null;
                    metadata: Record<string, any> | null;
                }> | null;
                language: string | null;
                theme: string | null;
                tfa_secret: string | null;
                status: string;
                role: string | MergeCoreCollection<Schema, "directus_roles", {
                    id: string;
                    name: string;
                    icon: string;
                    description: string | null;
                    ip_access: string | null;
                    enforce_tfa: boolean;
                    admin_access: boolean;
                    app_access: boolean;
                }> | null;
                token: string | null;
                last_access: "datetime" | null;
                last_page: string | null;
                provider: string;
                external_identifier: string | null;
                auth_data: Record<string, any> | null;
                email_notifications: boolean | null;
            }> | null;
        }> | null;
    }>[] | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_activity", {
    id: number;
    action: string;
    user: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    timestamp: "datetime";
    ip: string | null; /**
     * Creates a new comment on a given item.
     *
     * @param items The items to create
     * @param query Optional return data query
     *
     * @returns Returns the activity object of the created comment.
     */
    user_agent: string | null;
    collection: string;
    item: string;
    comment: string | null;
    origin: string | null;
    revisions: number[] | MergeCoreCollection<Schema, "directus_revisions", {
        id: number;
        activity: number | MergeCoreCollection<Schema, "directus_activity", any>;
        collection: string;
        item: string;
        data: Record<string, any> | null;
        delta: Record<string, any> | null;
        parent: number | MergeCoreCollection<Schema, "directus_revisions", any> | null;
        version: string | MergeCoreCollection<Schema, "directus_versions", {
            id: string;
            key: string;
            name: string | null;
            collection: string | DirectusCollection<Schema>;
            item: string;
            /**
             * Creates a new comment on a given item.
             *
             * @param items The items to create
             * @param query Optional return data query
             *
             * @returns Returns the activity object of the created comment.
             */
            hash: string;
            date_created: "datetime" | null;
            date_updated: "datetime" | null;
            user_created: string | MergeCoreCollection<Schema, "directus_users", {
                id: string;
                first_name: string | null;
                last_name: string | null;
                email: string | null;
                password: string | null;
                location: string | null;
                title: string | null;
                description: string | null;
                tags: string[] | null;
                avatar: string | MergeCoreCollection<Schema, "directus_files", {
                    id: string;
                    storage: string;
                    filename_disk: string | null;
                    filename_download: string;
                    title: string | null;
                    type: string | null;
                    folder: string | MergeCoreCollection<Schema, "directus_folders", {
                        id: string;
                        name: string;
                        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                    }> | null;
                    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    uploaded_on: "datetime";
                    modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    modified_on: "datetime";
                    charset: string | null;
                    filesize: string | null;
                    width: number | null;
                    height: number | null;
                    duration: number | null;
                    embed: unknown;
                    description: string | null;
                    location: string | null;
                    tags: string[] | null;
                    metadata: Record<string, any> | null;
                }> | null;
                language: string | null;
                theme: string | null;
                tfa_secret: string | null;
                status: string;
                role: string | MergeCoreCollection<Schema, "directus_roles", {
                    id: string;
                    name: string;
                    icon: string;
                    description: string | null;
                    ip_access: string | null;
                    enforce_tfa: boolean;
                    admin_access: boolean;
                    app_access: boolean;
                }> | null;
                token: string | null;
                last_access: "datetime" | null;
                last_page: string | null;
                provider: string;
                external_identifier: string | null;
                auth_data: Record<string, any> | null;
                email_notifications: boolean | null;
            }> | null;
            user_updated: string | MergeCoreCollection<Schema, "directus_users", {
                id: string;
                first_name: string | null;
                last_name: string | null;
                email: string | null;
                password: string | null;
                location: string | null;
                title: string | null;
                description: string | null;
                tags: string[] | null;
                avatar: string | MergeCoreCollection<Schema, "directus_files", {
                    id: string;
                    storage: string;
                    filename_disk: string | null;
                    filename_download: string;
                    title: string | null;
                    type: string | null;
                    folder: string | MergeCoreCollection<Schema, "directus_folders", {
                        id: string;
                        name: string;
                        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                    }> | null;
                    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    uploaded_on: "datetime";
                    modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    modified_on: "datetime";
                    charset: string | null;
                    filesize: string | null;
                    width: number | null;
                    height: number | null;
                    duration: number | null;
                    embed: unknown;
                    description: string | null;
                    location: string | null;
                    tags: string[] | null;
                    metadata: Record<string, any> | null;
                }> | null;
                language: string | null;
                theme: string | null;
                tfa_secret: string | null;
                status: string;
                role: string | MergeCoreCollection<Schema, "directus_roles", {
                    id: string;
                    name: string;
                    icon: string;
                    description: string | null;
                    ip_access: string | null;
                    enforce_tfa: boolean;
                    admin_access: boolean;
                    app_access: boolean;
                }> | null;
                token: string | null;
                last_access: "datetime" | null;
                last_page: string | null;
                provider: string;
                external_identifier: string | null;
                auth_data: Record<string, any> | null;
                email_notifications: boolean | null;
            }> | null;
        }> | null;
    }>[] | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_activity", {
    id: number;
    action: string;
    user: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    timestamp: "datetime";
    ip: string | null; /**
     * Creates a new comment on a given item.
     *
     * @param items The items to create
     * @param query Optional return data query
     *
     * @returns Returns the activity object of the created comment.
     */
    user_agent: string | null;
    collection: string;
    item: string;
    comment: string | null;
    origin: string | null;
    revisions: number[] | MergeCoreCollection<Schema, "directus_revisions", {
        id: number;
        activity: number | MergeCoreCollection<Schema, "directus_activity", any>;
        collection: string;
        item: string;
        data: Record<string, any> | null;
        delta: Record<string, any> | null;
        parent: number | MergeCoreCollection<Schema, "directus_revisions", any> | null;
        version: string | MergeCoreCollection<Schema, "directus_versions", {
            id: string;
            key: string;
            name: string | null;
            collection: string | DirectusCollection<Schema>;
            item: string;
            /**
             * Creates a new comment on a given item.
             *
             * @param items The items to create
             * @param query Optional return data query
             *
             * @returns Returns the activity object of the created comment.
             */
            hash: string;
            date_created: "datetime" | null;
            date_updated: "datetime" | null;
            user_created: string | MergeCoreCollection<Schema, "directus_users", {
                id: string;
                first_name: string | null;
                last_name: string | null;
                email: string | null;
                password: string | null;
                location: string | null;
                title: string | null;
                description: string | null;
                tags: string[] | null;
                avatar: string | MergeCoreCollection<Schema, "directus_files", {
                    id: string;
                    storage: string;
                    filename_disk: string | null;
                    filename_download: string;
                    title: string | null;
                    type: string | null;
                    folder: string | MergeCoreCollection<Schema, "directus_folders", {
                        id: string;
                        name: string;
                        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                    }> | null;
                    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    uploaded_on: "datetime";
                    modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    modified_on: "datetime";
                    charset: string | null;
                    filesize: string | null;
                    width: number | null;
                    height: number | null;
                    duration: number | null;
                    embed: unknown;
                    description: string | null;
                    location: string | null;
                    tags: string[] | null;
                    metadata: Record<string, any> | null;
                }> | null;
                language: string | null;
                theme: string | null;
                tfa_secret: string | null;
                status: string;
                role: string | MergeCoreCollection<Schema, "directus_roles", {
                    id: string;
                    name: string;
                    icon: string;
                    description: string | null;
                    ip_access: string | null;
                    enforce_tfa: boolean;
                    admin_access: boolean;
                    app_access: boolean;
                }> | null;
                token: string | null;
                last_access: "datetime" | null;
                last_page: string | null;
                provider: string;
                external_identifier: string | null;
                auth_data: Record<string, any> | null;
                email_notifications: boolean | null;
            }> | null;
            user_updated: string | MergeCoreCollection<Schema, "directus_users", {
                id: string;
                first_name: string | null;
                last_name: string | null;
                email: string | null;
                password: string | null;
                location: string | null;
                title: string | null;
                description: string | null;
                tags: string[] | null;
                avatar: string | MergeCoreCollection<Schema, "directus_files", {
                    id: string;
                    storage: string;
                    filename_disk: string | null;
                    filename_download: string;
                    title: string | null;
                    type: string | null;
                    folder: string | MergeCoreCollection<Schema, "directus_folders", {
                        id: string;
                        name: string;
                        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                    }> | null;
                    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    uploaded_on: "datetime";
                    modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    modified_on: "datetime";
                    charset: string | null;
                    filesize: string | null;
                    width: number | null;
                    height: number | null;
                    duration: number | null;
                    embed: unknown;
                    description: string | null;
                    location: string | null;
                    tags: string[] | null;
                    metadata: Record<string, any> | null;
                }> | null;
                language: string | null;
                theme: string | null;
                tfa_secret: string | null;
                status: string;
                role: string | MergeCoreCollection<Schema, "directus_roles", {
                    id: string;
                    name: string;
                    icon: string;
                    description: string | null;
                    ip_access: string | null;
                    enforce_tfa: boolean;
                    admin_access: boolean;
                    app_access: boolean;
                }> | null;
                token: string | null;
                last_access: "datetime" | null;
                last_page: string | null;
                provider: string;
                external_identifier: string | null;
                auth_data: Record<string, any> | null;
                email_notifications: boolean | null;
            }> | null;
        }> | null;
    }>[] | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_activity", {
    id: number;
    action: string;
    user: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    timestamp: "datetime";
    ip: string | null; /**
     * Creates a new comment on a given item.
     *
     * @param items The items to create
     * @param query Optional return data query
     *
     * @returns Returns the activity object of the created comment.
     */
    user_agent: string | null;
    collection: string;
    item: string;
    comment: string | null;
    origin: string | null;
    revisions: number[] | MergeCoreCollection<Schema, "directus_revisions", {
        id: number;
        activity: number | MergeCoreCollection<Schema, "directus_activity", any>;
        collection: string;
        item: string;
        data: Record<string, any> | null;
        delta: Record<string, any> | null;
        parent: number | MergeCoreCollection<Schema, "directus_revisions", any> | null;
        version: string | MergeCoreCollection<Schema, "directus_versions", {
            id: string;
            key: string;
            name: string | null;
            collection: string | DirectusCollection<Schema>;
            item: string;
            /**
             * Creates a new comment on a given item.
             *
             * @param items The items to create
             * @param query Optional return data query
             *
             * @returns Returns the activity object of the created comment.
             */
            hash: string;
            date_created: "datetime" | null;
            date_updated: "datetime" | null;
            user_created: string | MergeCoreCollection<Schema, "directus_users", {
                id: string;
                first_name: string | null;
                last_name: string | null;
                email: string | null;
                password: string | null;
                location: string | null;
                title: string | null;
                description: string | null;
                tags: string[] | null;
                avatar: string | MergeCoreCollection<Schema, "directus_files", {
                    id: string;
                    storage: string;
                    filename_disk: string | null;
                    filename_download: string;
                    title: string | null;
                    type: string | null;
                    folder: string | MergeCoreCollection<Schema, "directus_folders", {
                        id: string;
                        name: string;
                        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                    }> | null;
                    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    uploaded_on: "datetime";
                    modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    modified_on: "datetime";
                    charset: string | null;
                    filesize: string | null;
                    width: number | null;
                    height: number | null;
                    duration: number | null;
                    embed: unknown;
                    description: string | null;
                    location: string | null;
                    tags: string[] | null;
                    metadata: Record<string, any> | null;
                }> | null;
                language: string | null;
                theme: string | null;
                tfa_secret: string | null;
                status: string;
                role: string | MergeCoreCollection<Schema, "directus_roles", {
                    id: string;
                    name: string;
                    icon: string;
                    description: string | null;
                    ip_access: string | null;
                    enforce_tfa: boolean;
                    admin_access: boolean;
                    app_access: boolean;
                }> | null;
                token: string | null;
                last_access: "datetime" | null;
                last_page: string | null;
                provider: string;
                external_identifier: string | null;
                auth_data: Record<string, any> | null;
                email_notifications: boolean | null;
            }> | null;
            user_updated: string | MergeCoreCollection<Schema, "directus_users", {
                id: string;
                first_name: string | null;
                last_name: string | null;
                email: string | null;
                password: string | null;
                location: string | null;
                title: string | null;
                description: string | null;
                tags: string[] | null;
                avatar: string | MergeCoreCollection<Schema, "directus_files", {
                    id: string;
                    storage: string;
                    filename_disk: string | null;
                    filename_download: string;
                    title: string | null;
                    type: string | null;
                    folder: string | MergeCoreCollection<Schema, "directus_folders", {
                        id: string;
                        name: string;
                        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                    }> | null;
                    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    uploaded_on: "datetime";
                    modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    modified_on: "datetime";
                    charset: string | null;
                    filesize: string | null;
                    width: number | null;
                    height: number | null;
                    duration: number | null;
                    embed: unknown;
                    description: string | null;
                    location: string | null;
                    tags: string[] | null;
                    metadata: Record<string, any> | null;
                }> | null;
                language: string | null;
                theme: string | null;
                tfa_secret: string | null;
                status: string;
                role: string | MergeCoreCollection<Schema, "directus_roles", {
                    id: string;
                    name: string;
                    icon: string;
                    description: string | null;
                    ip_access: string | null;
                    enforce_tfa: boolean;
                    admin_access: boolean;
                    app_access: boolean;
                }> | null;
                token: string | null;
                last_access: "datetime" | null;
                last_page: string | null;
                provider: string;
                external_identifier: string | null;
                auth_data: Record<string, any> | null;
                email_notifications: boolean | null;
            }> | null;
        }> | null;
    }>[] | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>, Schema>;

type CreateCollectionOutput<Schema extends object, TQuery extends Query<Schema, Item>, Item extends object = DirectusCollection<Schema>> = ApplyQueryFields<Schema, Item, TQuery['fields']>;
/**
 * Create a new Collection. This will create a new table in the database as well.
 *
 * @param item This endpoint doesn't currently support any query parameters.
 * @param query Optional return data query
 *
 * @returns The collection object for the collection created in this request.
 */
declare const createCollection: <Schema extends object, const TQuery extends Query<Schema, DirectusCollection<Schema>>>(item: NestedPartial<DirectusCollection<Schema>>, query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, DirectusCollection<Schema>> extends infer FF ? MapFlatFields<DirectusCollection<Schema>, FieldsWildcard<DirectusCollection<Schema>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof DirectusCollection<Schema> ? Extract<DirectusCollection<Schema>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<DirectusCollection<Schema>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>, Schema>;

type CreateDashboardOutput<Schema extends object, TQuery extends Query<Schema, Item>, Item extends object = DirectusDashboard<Schema>> = ApplyQueryFields<Schema, Item, TQuery['fields']>;
/**
 * Create multiple new dashboards.
 *
 * @param items The items to create
 * @param query Optional return data query
 *
 * @returns Returns the dashboard object for the created dashboards.
 */
declare const createDashboards: <Schema extends object, const TQuery extends Query<Schema, DirectusDashboard<Schema>>>(items: Partial<DirectusDashboard<Schema>>[], query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_dashboards", {
    id: string;
    name: string;
    icon: string;
    note: string | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    color: string | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_dashboards", {
    id: string;
    name: string;
    icon: string;
    note: string | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    color: string | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_dashboards", {
    id: string;
    name: string;
    icon: string;
    note: string | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    color: string | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_dashboards", {
    id: string;
    name: string;
    icon: string;
    note: string | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    color: string | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_dashboards", {
    id: string;
    name: string;
    icon: string;
    note: string | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    color: string | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_dashboards", {
    id: string;
    name: string;
    icon: string;
    note: string | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    color: string | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>[], Schema>;
/**
 * Create a new dashboard.
 *
 * @param item The dashboard to create
 * @param query Optional return data query
 *
 * @returns Returns the dashboard object for the created dashboard.
 */
declare const createDashboard: <Schema extends object, const TQuery extends Query<Schema, DirectusDashboard<Schema>>>(item: Partial<DirectusDashboard<Schema>>, query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_dashboards", {
    id: string;
    name: string;
    icon: string;
    note: string | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    color: string | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_dashboards", {
    id: string;
    name: string;
    icon: string;
    note: string | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    color: string | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_dashboards", {
    id: string;
    name: string;
    icon: string;
    note: string | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    color: string | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_dashboards", {
    id: string;
    name: string;
    icon: string;
    note: string | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    color: string | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_dashboards", {
    id: string;
    name: string;
    icon: string;
    note: string | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    color: string | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_dashboards", {
    id: string;
    name: string;
    icon: string;
    note: string | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    color: string | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>, Schema>;

type CreateFieldOutput<Schema extends object, TQuery extends Query<Schema, Item>, Item extends object = DirectusField<Schema>> = ApplyQueryFields<Schema, Item, TQuery['fields']>;
/**
 * Create a new field in the given collection.
 *
 * @param collection The collection to create a field for
 * @param item The field to create
 * @param query Optional return data query
 *
 * @returns The field object for the created field.
 */
declare const createField: <Schema extends object, const TQuery extends Query<Schema, DirectusField<Schema>>>(collection: keyof Schema, item: NestedPartial<DirectusField<Schema>>, query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, DirectusField<Schema>> extends infer FF ? MapFlatFields<DirectusField<Schema>, FieldsWildcard<DirectusField<Schema>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof DirectusField<Schema> ? Extract<DirectusField<Schema>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<DirectusField<Schema>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>, Schema>;

type CreateFileOutput<Schema extends object, TQuery extends Query<Schema, Item>, Item extends object = DirectusFile<Schema>> = ApplyQueryFields<Schema, Item, TQuery['fields']>;
/**
 * Upload/create a new file.
 *
 * @param data Formdata object
 * @param query The query parameters
 *
 * @returns Returns the file object for the uploaded file, or an array of file objects if multiple files were uploaded at once.
 */
declare const uploadFiles: <Schema extends object, const TQuery extends Query<Schema, DirectusFile<Schema>>>(data: FormData, query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_files", {
    id: string;
    storage: string;
    filename_disk: string | null;
    filename_download: string;
    title: string | null;
    type: string | null;
    folder: string | MergeCoreCollection<Schema, "directus_folders", {
        id: string;
        name: string;
        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
    }> | null;
    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", any> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    uploaded_on: "datetime";
    modified_by: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", any> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    modified_on: "datetime";
    charset: string | null;
    filesize: string | null;
    width: number | null;
    height: number | null;
    duration: number | null;
    embed: unknown;
    description: string | null;
    location: string | null;
    tags: string[] | null;
    metadata: Record<string, any> | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_files", {
    id: string;
    storage: string;
    filename_disk: string | null;
    filename_download: string;
    title: string | null;
    type: string | null;
    folder: string | MergeCoreCollection<Schema, "directus_folders", {
        id: string;
        name: string;
        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
    }> | null;
    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", any> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    uploaded_on: "datetime";
    modified_by: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", any> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    modified_on: "datetime";
    charset: string | null;
    filesize: string | null;
    width: number | null;
    height: number | null;
    duration: number | null;
    embed: unknown;
    description: string | null;
    location: string | null;
    tags: string[] | null;
    metadata: Record<string, any> | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_files", {
    id: string;
    storage: string;
    filename_disk: string | null;
    filename_download: string;
    title: string | null;
    type: string | null;
    folder: string | MergeCoreCollection<Schema, "directus_folders", {
        id: string;
        name: string;
        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
    }> | null;
    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", any> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    uploaded_on: "datetime";
    modified_by: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", any> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    modified_on: "datetime";
    charset: string | null;
    filesize: string | null;
    width: number | null;
    height: number | null;
    duration: number | null;
    embed: unknown;
    description: string | null;
    location: string | null;
    tags: string[] | null;
    metadata: Record<string, any> | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_files", {
    id: string;
    storage: string;
    filename_disk: string | null;
    filename_download: string;
    title: string | null;
    type: string | null;
    folder: string | MergeCoreCollection<Schema, "directus_folders", {
        id: string;
        name: string;
        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
    }> | null;
    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", any> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    uploaded_on: "datetime";
    modified_by: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", any> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    modified_on: "datetime";
    charset: string | null;
    filesize: string | null;
    width: number | null;
    height: number | null;
    duration: number | null;
    embed: unknown;
    description: string | null;
    location: string | null;
    tags: string[] | null;
    metadata: Record<string, any> | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_files", {
    id: string;
    storage: string;
    filename_disk: string | null;
    filename_download: string;
    title: string | null;
    type: string | null;
    folder: string | MergeCoreCollection<Schema, "directus_folders", {
        id: string;
        name: string;
        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
    }> | null;
    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", any> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    uploaded_on: "datetime";
    modified_by: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", any> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    modified_on: "datetime";
    charset: string | null;
    filesize: string | null;
    width: number | null;
    height: number | null;
    duration: number | null;
    embed: unknown;
    description: string | null;
    location: string | null;
    tags: string[] | null;
    metadata: Record<string, any> | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_files", {
    id: string;
    storage: string;
    filename_disk: string | null;
    filename_download: string;
    title: string | null;
    type: string | null;
    folder: string | MergeCoreCollection<Schema, "directus_folders", {
        id: string;
        name: string;
        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
    }> | null;
    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", any> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    uploaded_on: "datetime";
    modified_by: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", any> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    modified_on: "datetime";
    charset: string | null;
    filesize: string | null;
    width: number | null;
    height: number | null;
    duration: number | null;
    embed: unknown;
    description: string | null;
    location: string | null;
    tags: string[] | null;
    metadata: Record<string, any> | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>, Schema>;
/**
 * Import a file from the web
 *
 * @param url The url to import the file from
 * @param data Formdata object
 * @param query The query parameters
 *
 * @returns Returns the file object for the imported file.
 */
declare const importFile: <Schema extends object, TQuery extends Query<Schema, DirectusFile<Schema>>>(url: string, data?: Partial<DirectusFile<Schema>>, query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_files", {
    id: string;
    storage: string;
    filename_disk: string | null;
    filename_download: string;
    title: string | null;
    type: string | null;
    folder: string | MergeCoreCollection<Schema, "directus_folders", {
        id: string;
        name: string;
        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
    }> | null;
    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", any> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    uploaded_on: "datetime";
    modified_by: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", any> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    modified_on: "datetime";
    charset: string | null;
    filesize: string | null;
    width: number | null;
    height: number | null;
    duration: number | null;
    embed: unknown;
    description: string | null;
    location: string | null;
    tags: string[] | null;
    metadata: Record<string, any> | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_files", {
    id: string;
    storage: string;
    filename_disk: string | null;
    filename_download: string;
    title: string | null;
    type: string | null;
    folder: string | MergeCoreCollection<Schema, "directus_folders", {
        id: string;
        name: string;
        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
    }> | null;
    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", any> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    uploaded_on: "datetime";
    modified_by: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", any> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    modified_on: "datetime";
    charset: string | null;
    filesize: string | null;
    width: number | null;
    height: number | null;
    duration: number | null;
    embed: unknown;
    description: string | null;
    location: string | null;
    tags: string[] | null;
    metadata: Record<string, any> | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_files", {
    id: string;
    storage: string;
    filename_disk: string | null;
    filename_download: string;
    title: string | null;
    type: string | null;
    folder: string | MergeCoreCollection<Schema, "directus_folders", {
        id: string;
        name: string;
        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
    }> | null;
    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", any> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    uploaded_on: "datetime";
    modified_by: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", any> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    modified_on: "datetime";
    charset: string | null;
    filesize: string | null;
    width: number | null;
    height: number | null;
    duration: number | null;
    embed: unknown;
    description: string | null;
    location: string | null;
    tags: string[] | null;
    metadata: Record<string, any> | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_files", {
    id: string;
    storage: string;
    filename_disk: string | null;
    filename_download: string;
    title: string | null;
    type: string | null;
    folder: string | MergeCoreCollection<Schema, "directus_folders", {
        id: string;
        name: string;
        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
    }> | null;
    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", any> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    uploaded_on: "datetime";
    modified_by: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", any> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    modified_on: "datetime";
    charset: string | null;
    filesize: string | null;
    width: number | null;
    height: number | null;
    duration: number | null;
    embed: unknown;
    description: string | null;
    location: string | null;
    tags: string[] | null;
    metadata: Record<string, any> | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_files", {
    id: string;
    storage: string;
    filename_disk: string | null;
    filename_download: string;
    title: string | null;
    type: string | null;
    folder: string | MergeCoreCollection<Schema, "directus_folders", {
        id: string;
        name: string;
        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
    }> | null;
    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", any> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    uploaded_on: "datetime";
    modified_by: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", any> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    modified_on: "datetime";
    charset: string | null;
    filesize: string | null;
    width: number | null;
    height: number | null;
    duration: number | null;
    embed: unknown;
    description: string | null;
    location: string | null;
    tags: string[] | null;
    metadata: Record<string, any> | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_files", {
    id: string;
    storage: string;
    filename_disk: string | null;
    filename_download: string;
    title: string | null;
    type: string | null;
    folder: string | MergeCoreCollection<Schema, "directus_folders", {
        id: string;
        name: string;
        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
    }> | null;
    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", any> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    uploaded_on: "datetime";
    modified_by: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", any> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    modified_on: "datetime";
    charset: string | null;
    filesize: string | null;
    width: number | null;
    height: number | null;
    duration: number | null;
    embed: unknown;
    description: string | null;
    location: string | null;
    tags: string[] | null;
    metadata: Record<string, any> | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>, Schema>;

type CreateFlowOutput<Schema extends object, TQuery extends Query<Schema, Item>, Item extends object = DirectusFlow<Schema>> = ApplyQueryFields<Schema, Item, TQuery['fields']>;
/**
 * Create multiple new flows.
 *
 * @param items The flows to create
 * @param query Optional return data query
 *
 * @returns Returns the flow object for the created flow.
 */
declare const createFlows: <Schema extends object, const TQuery extends Query<Schema, DirectusFlow<Schema>>>(items: Partial<DirectusFlow<Schema>>[], query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_flows", {
    id: string;
    name: string;
    icon: string | null;
    color: string | null;
    description: string | null;
    status: string;
    trigger: string | null;
    accountability: string | null;
    options: Record<string, any> | null;
    operation: string | MergeCoreCollection<Schema, "directus_operations", {
        id: string;
        name: string | null;
        key: string;
        type: string;
        position_x: number;
        position_y: number;
        /**
         * Create multiple new flows.
         *
         * @param items The flows to create
         * @param query Optional return data query
         *
         * @returns Returns the flow object for the created flow.
         */
        timestamp: string;
        options: Record<string, any> | null;
        resolve: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        reject: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        flow: string | MergeCoreCollection<Schema, "directus_flows", any>;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }> | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_flows", {
    id: string;
    name: string;
    icon: string | null;
    color: string | null;
    description: string | null;
    status: string;
    trigger: string | null;
    accountability: string | null;
    options: Record<string, any> | null;
    operation: string | MergeCoreCollection<Schema, "directus_operations", {
        id: string;
        name: string | null;
        key: string;
        type: string;
        position_x: number;
        position_y: number;
        /**
         * Create multiple new flows.
         *
         * @param items The flows to create
         * @param query Optional return data query
         *
         * @returns Returns the flow object for the created flow.
         */
        timestamp: string;
        options: Record<string, any> | null;
        resolve: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        reject: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        flow: string | MergeCoreCollection<Schema, "directus_flows", any>;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }> | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_flows", {
    id: string;
    name: string;
    icon: string | null;
    color: string | null;
    description: string | null;
    status: string;
    trigger: string | null;
    accountability: string | null;
    options: Record<string, any> | null;
    operation: string | MergeCoreCollection<Schema, "directus_operations", {
        id: string;
        name: string | null;
        key: string;
        type: string;
        position_x: number;
        position_y: number;
        /**
         * Create multiple new flows.
         *
         * @param items The flows to create
         * @param query Optional return data query
         *
         * @returns Returns the flow object for the created flow.
         */
        timestamp: string;
        options: Record<string, any> | null;
        resolve: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        reject: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        flow: string | MergeCoreCollection<Schema, "directus_flows", any>;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }> | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_flows", {
    id: string;
    name: string;
    icon: string | null;
    color: string | null;
    description: string | null;
    status: string;
    trigger: string | null;
    accountability: string | null;
    options: Record<string, any> | null;
    operation: string | MergeCoreCollection<Schema, "directus_operations", {
        id: string;
        name: string | null;
        key: string;
        type: string;
        position_x: number;
        position_y: number;
        /**
         * Create multiple new flows.
         *
         * @param items The flows to create
         * @param query Optional return data query
         *
         * @returns Returns the flow object for the created flow.
         */
        timestamp: string;
        options: Record<string, any> | null;
        resolve: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        reject: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        flow: string | MergeCoreCollection<Schema, "directus_flows", any>;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }> | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_flows", {
    id: string;
    name: string;
    icon: string | null;
    color: string | null;
    description: string | null;
    status: string;
    trigger: string | null;
    accountability: string | null;
    options: Record<string, any> | null;
    operation: string | MergeCoreCollection<Schema, "directus_operations", {
        id: string;
        name: string | null;
        key: string;
        type: string;
        position_x: number;
        position_y: number;
        /**
         * Create multiple new flows.
         *
         * @param items The flows to create
         * @param query Optional return data query
         *
         * @returns Returns the flow object for the created flow.
         */
        timestamp: string;
        options: Record<string, any> | null;
        resolve: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        reject: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        flow: string | MergeCoreCollection<Schema, "directus_flows", any>;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }> | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_flows", {
    id: string;
    name: string;
    icon: string | null;
    color: string | null;
    description: string | null;
    status: string;
    trigger: string | null;
    accountability: string | null;
    options: Record<string, any> | null;
    operation: string | MergeCoreCollection<Schema, "directus_operations", {
        id: string;
        name: string | null;
        key: string;
        type: string;
        position_x: number;
        position_y: number;
        /**
         * Create multiple new flows.
         *
         * @param items The flows to create
         * @param query Optional return data query
         *
         * @returns Returns the flow object for the created flow.
         */
        timestamp: string;
        options: Record<string, any> | null;
        resolve: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        reject: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        flow: string | MergeCoreCollection<Schema, "directus_flows", any>;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }> | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>[], Schema>;
/**
 * Create a new flow.
 *
 * @param item The flow to create
 * @param query Optional return data query
 *
 * @returns Returns the flow object for the created flow.
 */
declare const createFlow: <Schema extends object, TQuery extends Query<Schema, DirectusFlow<Schema>>>(item: Partial<DirectusFlow<Schema>>, query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_flows", {
    id: string;
    name: string;
    icon: string | null;
    color: string | null;
    description: string | null;
    status: string;
    trigger: string | null;
    accountability: string | null;
    options: Record<string, any> | null;
    operation: string | MergeCoreCollection<Schema, "directus_operations", {
        id: string;
        name: string | null;
        key: string;
        type: string;
        position_x: number;
        position_y: number;
        /**
         * Create multiple new flows.
         *
         * @param items The flows to create
         * @param query Optional return data query
         *
         * @returns Returns the flow object for the created flow.
         */
        timestamp: string;
        options: Record<string, any> | null;
        resolve: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        reject: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        flow: string | MergeCoreCollection<Schema, "directus_flows", any>;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }> | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_flows", {
    id: string;
    name: string;
    icon: string | null;
    color: string | null;
    description: string | null;
    status: string;
    trigger: string | null;
    accountability: string | null;
    options: Record<string, any> | null;
    operation: string | MergeCoreCollection<Schema, "directus_operations", {
        id: string;
        name: string | null;
        key: string;
        type: string;
        position_x: number;
        position_y: number;
        /**
         * Create multiple new flows.
         *
         * @param items The flows to create
         * @param query Optional return data query
         *
         * @returns Returns the flow object for the created flow.
         */
        timestamp: string;
        options: Record<string, any> | null;
        resolve: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        reject: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        flow: string | MergeCoreCollection<Schema, "directus_flows", any>;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }> | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_flows", {
    id: string;
    name: string;
    icon: string | null;
    color: string | null;
    description: string | null;
    status: string;
    trigger: string | null;
    accountability: string | null;
    options: Record<string, any> | null;
    operation: string | MergeCoreCollection<Schema, "directus_operations", {
        id: string;
        name: string | null;
        key: string;
        type: string;
        position_x: number;
        position_y: number;
        /**
         * Create multiple new flows.
         *
         * @param items The flows to create
         * @param query Optional return data query
         *
         * @returns Returns the flow object for the created flow.
         */
        timestamp: string;
        options: Record<string, any> | null;
        resolve: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        reject: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        flow: string | MergeCoreCollection<Schema, "directus_flows", any>;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }> | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_flows", {
    id: string;
    name: string;
    icon: string | null;
    color: string | null;
    description: string | null;
    status: string;
    trigger: string | null;
    accountability: string | null;
    options: Record<string, any> | null;
    operation: string | MergeCoreCollection<Schema, "directus_operations", {
        id: string;
        name: string | null;
        key: string;
        type: string;
        position_x: number;
        position_y: number;
        /**
         * Create multiple new flows.
         *
         * @param items The flows to create
         * @param query Optional return data query
         *
         * @returns Returns the flow object for the created flow.
         */
        timestamp: string;
        options: Record<string, any> | null;
        resolve: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        reject: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        flow: string | MergeCoreCollection<Schema, "directus_flows", any>;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }> | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_flows", {
    id: string;
    name: string;
    icon: string | null;
    color: string | null;
    description: string | null;
    status: string;
    trigger: string | null;
    accountability: string | null;
    options: Record<string, any> | null;
    operation: string | MergeCoreCollection<Schema, "directus_operations", {
        id: string;
        name: string | null;
        key: string;
        type: string;
        position_x: number;
        position_y: number;
        /**
         * Create multiple new flows.
         *
         * @param items The flows to create
         * @param query Optional return data query
         *
         * @returns Returns the flow object for the created flow.
         */
        timestamp: string;
        options: Record<string, any> | null;
        resolve: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        reject: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        flow: string | MergeCoreCollection<Schema, "directus_flows", any>;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }> | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_flows", {
    id: string;
    name: string;
    icon: string | null;
    color: string | null;
    description: string | null;
    status: string;
    trigger: string | null;
    accountability: string | null;
    options: Record<string, any> | null;
    operation: string | MergeCoreCollection<Schema, "directus_operations", {
        id: string;
        name: string | null;
        key: string;
        type: string;
        position_x: number;
        position_y: number;
        /**
         * Create multiple new flows.
         *
         * @param items The flows to create
         * @param query Optional return data query
         *
         * @returns Returns the flow object for the created flow.
         */
        timestamp: string;
        options: Record<string, any> | null;
        resolve: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        reject: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        flow: string | MergeCoreCollection<Schema, "directus_flows", any>;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }> | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>, Schema>;

type CreateFolderOutput<Schema extends object, TQuery extends Query<Schema, Item>, Item extends object = DirectusFolder<Schema>> = ApplyQueryFields<Schema, Item, TQuery['fields']>;
/**
 * Create multiple new (virtual) folders.
 *
 * @param item The folder to create
 * @param query Optional return data query
 *
 * @returns Returns the folder object of the folder that was created.
 */
declare const createFolders: <Schema extends object, const TQuery extends Query<Schema, DirectusFolder<Schema>>>(items: Partial<DirectusFolder<Schema>>[], query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_folders", {
    id: string;
    name: string;
    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_folders", {
    id: string;
    name: string;
    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_folders", {
    id: string;
    name: string;
    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_folders", {
    id: string;
    name: string;
    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_folders", {
    id: string;
    name: string;
    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_folders", {
    id: string;
    name: string;
    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>[], Schema>;
/**
 * Create a new (virtual) folder.
 *
 * @param item The folder to create
 * @param query Optional return data query
 *
 * @returns Returns the folder object of the folder that was created.
 */
declare const createFolder: <Schema extends object, const TQuery extends Query<Schema, DirectusFolder<Schema>>>(item: Partial<DirectusFolder<Schema>>, query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_folders", {
    id: string;
    name: string;
    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_folders", {
    id: string;
    name: string;
    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_folders", {
    id: string;
    name: string;
    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_folders", {
    id: string;
    name: string;
    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_folders", {
    id: string;
    name: string;
    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_folders", {
    id: string;
    name: string;
    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>, Schema>;

type CreateItemOutput<Schema extends object, Collection extends keyof Schema, TQuery extends Query<Schema, Schema[Collection]>> = ApplyQueryFields<Schema, CollectionType<Schema, Collection>, TQuery['fields']>;
/**
 * Create new items in the given collection.
 *
 * @param collection The collection of the item
 * @param items The items to create
 * @param query Optional return data query
 *
 * @returns Returns the item objects of the item that were created.
 */
declare const createItems: <Schema extends object, Collection extends keyof Schema, const TQuery extends Query<Schema, Schema[Collection]>>(collection: Collection, items: Partial<UnpackList<Schema[Collection]>>[], query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<IfAny<Schema, any, Collection extends keyof Schema ? UnpackList<Schema[Collection]> extends object ? object & UnpackList<Schema[Collection]> : never : never>>> extends infer FF ? MapFlatFields<UnpackList<IfAny<Schema, any, Collection extends keyof Schema ? UnpackList<Schema[Collection]> extends object ? object & UnpackList<Schema[Collection]> : never : never>>, FieldsWildcard<UnpackList<IfAny<Schema, any, Collection extends keyof Schema ? UnpackList<Schema[Collection]> extends object ? object & UnpackList<Schema[Collection]> : never : never>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<IfAny<Schema, any, Collection extends keyof Schema ? UnpackList<Schema[Collection]> extends object ? object & UnpackList<Schema[Collection]> : never : never>> ? Extract<UnpackList<IfAny<Schema, any, Collection extends keyof Schema ? UnpackList<Schema[Collection]> extends object ? object & UnpackList<Schema[Collection]> : never : never>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<IfAny<Schema, any, Collection extends keyof Schema ? UnpackList<Schema[Collection]> extends object ? object & UnpackList<Schema[Collection]> : never : never>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>[], Schema>;
/**
 * Create a new item in the given collection.
 *
 * @param collection The collection of the item
 * @param item The item to create
 * @param query Optional return data query
 *
 * @returns Returns the item objects of the item that were created.
 */
declare const createItem: <Schema extends object, Collection extends keyof Schema, const TQuery extends Query<Schema, Schema[Collection]>>(collection: Collection, item: Partial<UnpackList<Schema[Collection]>>, query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<IfAny<Schema, any, Collection extends keyof Schema ? UnpackList<Schema[Collection]> extends object ? object & UnpackList<Schema[Collection]> : never : never>>> extends infer FF ? MapFlatFields<UnpackList<IfAny<Schema, any, Collection extends keyof Schema ? UnpackList<Schema[Collection]> extends object ? object & UnpackList<Schema[Collection]> : never : never>>, FieldsWildcard<UnpackList<IfAny<Schema, any, Collection extends keyof Schema ? UnpackList<Schema[Collection]> extends object ? object & UnpackList<Schema[Collection]> : never : never>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<IfAny<Schema, any, Collection extends keyof Schema ? UnpackList<Schema[Collection]> extends object ? object & UnpackList<Schema[Collection]> : never : never>> ? Extract<UnpackList<IfAny<Schema, any, Collection extends keyof Schema ? UnpackList<Schema[Collection]> extends object ? object & UnpackList<Schema[Collection]> : never : never>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<IfAny<Schema, any, Collection extends keyof Schema ? UnpackList<Schema[Collection]> extends object ? object & UnpackList<Schema[Collection]> : never : never>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>, Schema>;

type CreateNotificationOutput<Schema extends object, TQuery extends Query<Schema, Item>, Item extends object = DirectusNotification<Schema>> = ApplyQueryFields<Schema, Item, TQuery['fields']>;
/**
 * Create multiple new notifications.
 *
 * @param items The notifications to create
 * @param query Optional return data query
 *
 * @returns Returns the notification object for the created notification.
 */
declare const createNotifications: <Schema extends object, const TQuery extends Query<Schema, DirectusNotification<Schema>>>(items: Partial<DirectusNotification<Schema>>[], query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_notifications", {
    id: string;
    timestamp: "datetime" | null;
    status: string | null;
    recipient: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            /**
             * Create multiple new notifications.
             *
             * @param items The notifications to create
             * @param query Optional return data query
             *
             * @returns Returns the notification object for the created notification.
             */
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }>;
    sender: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            /**
             * Create multiple new notifications.
             *
             * @param items The notifications to create
             * @param query Optional return data query
             *
             * @returns Returns the notification object for the created notification.
             */
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    subject: string;
    message: string | null;
    collection: string | null;
    item: string | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_notifications", {
    id: string;
    timestamp: "datetime" | null;
    status: string | null;
    recipient: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            /**
             * Create multiple new notifications.
             *
             * @param items The notifications to create
             * @param query Optional return data query
             *
             * @returns Returns the notification object for the created notification.
             */
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }>;
    sender: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            /**
             * Create multiple new notifications.
             *
             * @param items The notifications to create
             * @param query Optional return data query
             *
             * @returns Returns the notification object for the created notification.
             */
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    subject: string;
    message: string | null;
    collection: string | null;
    item: string | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_notifications", {
    id: string;
    timestamp: "datetime" | null;
    status: string | null;
    recipient: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            /**
             * Create multiple new notifications.
             *
             * @param items The notifications to create
             * @param query Optional return data query
             *
             * @returns Returns the notification object for the created notification.
             */
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }>;
    sender: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            /**
             * Create multiple new notifications.
             *
             * @param items The notifications to create
             * @param query Optional return data query
             *
             * @returns Returns the notification object for the created notification.
             */
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    subject: string;
    message: string | null;
    collection: string | null;
    item: string | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_notifications", {
    id: string;
    timestamp: "datetime" | null;
    status: string | null;
    recipient: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            /**
             * Create multiple new notifications.
             *
             * @param items The notifications to create
             * @param query Optional return data query
             *
             * @returns Returns the notification object for the created notification.
             */
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }>;
    sender: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            /**
             * Create multiple new notifications.
             *
             * @param items The notifications to create
             * @param query Optional return data query
             *
             * @returns Returns the notification object for the created notification.
             */
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    subject: string;
    message: string | null;
    collection: string | null;
    item: string | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_notifications", {
    id: string;
    timestamp: "datetime" | null;
    status: string | null;
    recipient: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            /**
             * Create multiple new notifications.
             *
             * @param items The notifications to create
             * @param query Optional return data query
             *
             * @returns Returns the notification object for the created notification.
             */
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }>;
    sender: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            /**
             * Create multiple new notifications.
             *
             * @param items The notifications to create
             * @param query Optional return data query
             *
             * @returns Returns the notification object for the created notification.
             */
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    subject: string;
    message: string | null;
    collection: string | null;
    item: string | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_notifications", {
    id: string;
    timestamp: "datetime" | null;
    status: string | null;
    recipient: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            /**
             * Create multiple new notifications.
             *
             * @param items The notifications to create
             * @param query Optional return data query
             *
             * @returns Returns the notification object for the created notification.
             */
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }>;
    sender: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            /**
             * Create multiple new notifications.
             *
             * @param items The notifications to create
             * @param query Optional return data query
             *
             * @returns Returns the notification object for the created notification.
             */
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    subject: string;
    message: string | null;
    collection: string | null;
    item: string | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>[], Schema>;
/**
 * Create a new notification.
 *
 * @param item The notification to create
 * @param query Optional return data query
 *
 * @returns Returns the notification object for the created notification.
 */
declare const createNotification: <Schema extends object, const TQuery extends Query<Schema, DirectusNotification<Schema>>>(item: Partial<DirectusNotification<Schema>>, query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_notifications", {
    id: string;
    timestamp: "datetime" | null;
    status: string | null;
    recipient: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            /**
             * Create multiple new notifications.
             *
             * @param items The notifications to create
             * @param query Optional return data query
             *
             * @returns Returns the notification object for the created notification.
             */
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }>;
    sender: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            /**
             * Create multiple new notifications.
             *
             * @param items The notifications to create
             * @param query Optional return data query
             *
             * @returns Returns the notification object for the created notification.
             */
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    subject: string;
    message: string | null;
    collection: string | null;
    item: string | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_notifications", {
    id: string;
    timestamp: "datetime" | null;
    status: string | null;
    recipient: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            /**
             * Create multiple new notifications.
             *
             * @param items The notifications to create
             * @param query Optional return data query
             *
             * @returns Returns the notification object for the created notification.
             */
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }>;
    sender: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            /**
             * Create multiple new notifications.
             *
             * @param items The notifications to create
             * @param query Optional return data query
             *
             * @returns Returns the notification object for the created notification.
             */
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    subject: string;
    message: string | null;
    collection: string | null;
    item: string | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_notifications", {
    id: string;
    timestamp: "datetime" | null;
    status: string | null;
    recipient: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            /**
             * Create multiple new notifications.
             *
             * @param items The notifications to create
             * @param query Optional return data query
             *
             * @returns Returns the notification object for the created notification.
             */
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }>;
    sender: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            /**
             * Create multiple new notifications.
             *
             * @param items The notifications to create
             * @param query Optional return data query
             *
             * @returns Returns the notification object for the created notification.
             */
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    subject: string;
    message: string | null;
    collection: string | null;
    item: string | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_notifications", {
    id: string;
    timestamp: "datetime" | null;
    status: string | null;
    recipient: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            /**
             * Create multiple new notifications.
             *
             * @param items The notifications to create
             * @param query Optional return data query
             *
             * @returns Returns the notification object for the created notification.
             */
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }>;
    sender: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            /**
             * Create multiple new notifications.
             *
             * @param items The notifications to create
             * @param query Optional return data query
             *
             * @returns Returns the notification object for the created notification.
             */
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    subject: string;
    message: string | null;
    collection: string | null;
    item: string | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_notifications", {
    id: string;
    timestamp: "datetime" | null;
    status: string | null;
    recipient: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            /**
             * Create multiple new notifications.
             *
             * @param items The notifications to create
             * @param query Optional return data query
             *
             * @returns Returns the notification object for the created notification.
             */
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }>;
    sender: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            /**
             * Create multiple new notifications.
             *
             * @param items The notifications to create
             * @param query Optional return data query
             *
             * @returns Returns the notification object for the created notification.
             */
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    subject: string;
    message: string | null;
    collection: string | null;
    item: string | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_notifications", {
    id: string;
    timestamp: "datetime" | null;
    status: string | null;
    recipient: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            /**
             * Create multiple new notifications.
             *
             * @param items The notifications to create
             * @param query Optional return data query
             *
             * @returns Returns the notification object for the created notification.
             */
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }>;
    sender: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            /**
             * Create multiple new notifications.
             *
             * @param items The notifications to create
             * @param query Optional return data query
             *
             * @returns Returns the notification object for the created notification.
             */
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    subject: string;
    message: string | null;
    collection: string | null;
    item: string | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>, Schema>;

type CreateOperationOutput<Schema extends object, TQuery extends Query<Schema, Item>, Item extends object = DirectusOperation<Schema>> = ApplyQueryFields<Schema, Item, TQuery['fields']>;
/**
 * Create multiple new operations.
 *
 * @param items The operation to create
 * @param query Optional return data query
 *
 * @returns Returns the operation object for the created operation.
 */
declare const createOperations: <Schema extends object, const TQuery extends Query<Schema, DirectusOperation<Schema>>>(items: Partial<DirectusOperation<Schema>>[], query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_operations", {
    id: string;
    name: string | null;
    key: string;
    type: string;
    position_x: number;
    position_y: number;
    timestamp: string; /**
     * Create multiple new operations.
     *
     * @param items The operation to create
     * @param query Optional return data query
     *
     * @returns Returns the operation object for the created operation.
     */
    options: Record<string, any> | null;
    resolve: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
    reject: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
    flow: string | MergeCoreCollection<Schema, "directus_flows", {
        id: string;
        name: string;
        icon: string | null;
        color: string | null;
        description: string | null;
        status: string;
        trigger: string | null;
        accountability: string | null;
        options: Record<string, any> | null;
        operation: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }>;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_operations", {
    id: string;
    name: string | null;
    key: string;
    type: string;
    position_x: number;
    position_y: number;
    timestamp: string; /**
     * Create multiple new operations.
     *
     * @param items The operation to create
     * @param query Optional return data query
     *
     * @returns Returns the operation object for the created operation.
     */
    options: Record<string, any> | null;
    resolve: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
    reject: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
    flow: string | MergeCoreCollection<Schema, "directus_flows", {
        id: string;
        name: string;
        icon: string | null;
        color: string | null;
        description: string | null;
        status: string;
        trigger: string | null;
        accountability: string | null;
        options: Record<string, any> | null;
        operation: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }>;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_operations", {
    id: string;
    name: string | null;
    key: string;
    type: string;
    position_x: number;
    position_y: number;
    timestamp: string; /**
     * Create multiple new operations.
     *
     * @param items The operation to create
     * @param query Optional return data query
     *
     * @returns Returns the operation object for the created operation.
     */
    options: Record<string, any> | null;
    resolve: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
    reject: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
    flow: string | MergeCoreCollection<Schema, "directus_flows", {
        id: string;
        name: string;
        icon: string | null;
        color: string | null;
        description: string | null;
        status: string;
        trigger: string | null;
        accountability: string | null;
        options: Record<string, any> | null;
        operation: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }>;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_operations", {
    id: string;
    name: string | null;
    key: string;
    type: string;
    position_x: number;
    position_y: number;
    timestamp: string; /**
     * Create multiple new operations.
     *
     * @param items The operation to create
     * @param query Optional return data query
     *
     * @returns Returns the operation object for the created operation.
     */
    options: Record<string, any> | null;
    resolve: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
    reject: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
    flow: string | MergeCoreCollection<Schema, "directus_flows", {
        id: string;
        name: string;
        icon: string | null;
        color: string | null;
        description: string | null;
        status: string;
        trigger: string | null;
        accountability: string | null;
        options: Record<string, any> | null;
        operation: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }>;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_operations", {
    id: string;
    name: string | null;
    key: string;
    type: string;
    position_x: number;
    position_y: number;
    timestamp: string; /**
     * Create multiple new operations.
     *
     * @param items The operation to create
     * @param query Optional return data query
     *
     * @returns Returns the operation object for the created operation.
     */
    options: Record<string, any> | null;
    resolve: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
    reject: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
    flow: string | MergeCoreCollection<Schema, "directus_flows", {
        id: string;
        name: string;
        icon: string | null;
        color: string | null;
        description: string | null;
        status: string;
        trigger: string | null;
        accountability: string | null;
        options: Record<string, any> | null;
        operation: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }>;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_operations", {
    id: string;
    name: string | null;
    key: string;
    type: string;
    position_x: number;
    position_y: number;
    timestamp: string; /**
     * Create multiple new operations.
     *
     * @param items The operation to create
     * @param query Optional return data query
     *
     * @returns Returns the operation object for the created operation.
     */
    options: Record<string, any> | null;
    resolve: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
    reject: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
    flow: string | MergeCoreCollection<Schema, "directus_flows", {
        id: string;
        name: string;
        icon: string | null;
        color: string | null;
        description: string | null;
        status: string;
        trigger: string | null;
        accountability: string | null;
        options: Record<string, any> | null;
        operation: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }>;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>[], Schema>;
/**
 * Create a new operation.
 *
 * @param item The operation to create
 * @param query Optional return data query
 *
 * @returns Returns the operation object for the created operation.
 */
declare const createOperation: <Schema extends object, const TQuery extends Query<Schema, DirectusOperation<Schema>>>(item: Partial<DirectusOperation<Schema>>, query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_operations", {
    id: string;
    name: string | null;
    key: string;
    type: string;
    position_x: number;
    position_y: number;
    timestamp: string; /**
     * Create multiple new operations.
     *
     * @param items The operation to create
     * @param query Optional return data query
     *
     * @returns Returns the operation object for the created operation.
     */
    options: Record<string, any> | null;
    resolve: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
    reject: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
    flow: string | MergeCoreCollection<Schema, "directus_flows", {
        id: string;
        name: string;
        icon: string | null;
        color: string | null;
        description: string | null;
        status: string;
        trigger: string | null;
        accountability: string | null;
        options: Record<string, any> | null;
        operation: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }>;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_operations", {
    id: string;
    name: string | null;
    key: string;
    type: string;
    position_x: number;
    position_y: number;
    timestamp: string; /**
     * Create multiple new operations.
     *
     * @param items The operation to create
     * @param query Optional return data query
     *
     * @returns Returns the operation object for the created operation.
     */
    options: Record<string, any> | null;
    resolve: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
    reject: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
    flow: string | MergeCoreCollection<Schema, "directus_flows", {
        id: string;
        name: string;
        icon: string | null;
        color: string | null;
        description: string | null;
        status: string;
        trigger: string | null;
        accountability: string | null;
        options: Record<string, any> | null;
        operation: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }>;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_operations", {
    id: string;
    name: string | null;
    key: string;
    type: string;
    position_x: number;
    position_y: number;
    timestamp: string; /**
     * Create multiple new operations.
     *
     * @param items The operation to create
     * @param query Optional return data query
     *
     * @returns Returns the operation object for the created operation.
     */
    options: Record<string, any> | null;
    resolve: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
    reject: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
    flow: string | MergeCoreCollection<Schema, "directus_flows", {
        id: string;
        name: string;
        icon: string | null;
        color: string | null;
        description: string | null;
        status: string;
        trigger: string | null;
        accountability: string | null;
        options: Record<string, any> | null;
        operation: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }>;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_operations", {
    id: string;
    name: string | null;
    key: string;
    type: string;
    position_x: number;
    position_y: number;
    timestamp: string; /**
     * Create multiple new operations.
     *
     * @param items The operation to create
     * @param query Optional return data query
     *
     * @returns Returns the operation object for the created operation.
     */
    options: Record<string, any> | null;
    resolve: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
    reject: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
    flow: string | MergeCoreCollection<Schema, "directus_flows", {
        id: string;
        name: string;
        icon: string | null;
        color: string | null;
        description: string | null;
        status: string;
        trigger: string | null;
        accountability: string | null;
        options: Record<string, any> | null;
        operation: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }>;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_operations", {
    id: string;
    name: string | null;
    key: string;
    type: string;
    position_x: number;
    position_y: number;
    timestamp: string; /**
     * Create multiple new operations.
     *
     * @param items The operation to create
     * @param query Optional return data query
     *
     * @returns Returns the operation object for the created operation.
     */
    options: Record<string, any> | null;
    resolve: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
    reject: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
    flow: string | MergeCoreCollection<Schema, "directus_flows", {
        id: string;
        name: string;
        icon: string | null;
        color: string | null;
        description: string | null;
        status: string;
        trigger: string | null;
        accountability: string | null;
        options: Record<string, any> | null;
        operation: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }>;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_operations", {
    id: string;
    name: string | null;
    key: string;
    type: string;
    position_x: number;
    position_y: number;
    timestamp: string; /**
     * Create multiple new operations.
     *
     * @param items The operation to create
     * @param query Optional return data query
     *
     * @returns Returns the operation object for the created operation.
     */
    options: Record<string, any> | null;
    resolve: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
    reject: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
    flow: string | MergeCoreCollection<Schema, "directus_flows", {
        id: string;
        name: string;
        icon: string | null;
        color: string | null;
        description: string | null;
        status: string;
        trigger: string | null;
        accountability: string | null;
        options: Record<string, any> | null;
        operation: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }>;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>, Schema>;

type CreatePanelOutput<Schema extends object, TQuery extends Query<Schema, Item>, Item extends object = DirectusPanel<Schema>> = ApplyQueryFields<Schema, Item, TQuery['fields']>;
/**
 * Create multiple new panels.
 *
 * @param items The panel to create
 * @param query Optional return data query
 *
 * @returns Returns the panel object for the created panel.
 */
declare const createPanels: <Schema extends object, const TQuery extends Query<Schema, DirectusPanel<Schema>>>(items: Partial<DirectusPanel<Schema>>[], query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_panels", {
    id: string;
    dashboard: string | MergeCoreCollection<Schema, "directus_dashboards", {
        id: string;
        name: string;
        icon: string;
        note: string | null;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
        color: string | null;
    }>;
    name: string | null;
    icon: string | null;
    color: string | null;
    show_header: boolean;
    note: string | null;
    type: string;
    position_x: number;
    position_y: number;
    width: number;
    height: number;
    options: Record<string, any> | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_panels", {
    id: string;
    dashboard: string | MergeCoreCollection<Schema, "directus_dashboards", {
        id: string;
        name: string;
        icon: string;
        note: string | null;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
        color: string | null;
    }>;
    name: string | null;
    icon: string | null;
    color: string | null;
    show_header: boolean;
    note: string | null;
    type: string;
    position_x: number;
    position_y: number;
    width: number;
    height: number;
    options: Record<string, any> | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_panels", {
    id: string;
    dashboard: string | MergeCoreCollection<Schema, "directus_dashboards", {
        id: string;
        name: string;
        icon: string;
        note: string | null;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
        color: string | null;
    }>;
    name: string | null;
    icon: string | null;
    color: string | null;
    show_header: boolean;
    note: string | null;
    type: string;
    position_x: number;
    position_y: number;
    width: number;
    height: number;
    options: Record<string, any> | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_panels", {
    id: string;
    dashboard: string | MergeCoreCollection<Schema, "directus_dashboards", {
        id: string;
        name: string;
        icon: string;
        note: string | null;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
        color: string | null;
    }>;
    name: string | null;
    icon: string | null;
    color: string | null;
    show_header: boolean;
    note: string | null;
    type: string;
    position_x: number;
    position_y: number;
    width: number;
    height: number;
    options: Record<string, any> | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_panels", {
    id: string;
    dashboard: string | MergeCoreCollection<Schema, "directus_dashboards", {
        id: string;
        name: string;
        icon: string;
        note: string | null;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
        color: string | null;
    }>;
    name: string | null;
    icon: string | null;
    color: string | null;
    show_header: boolean;
    note: string | null;
    type: string;
    position_x: number;
    position_y: number;
    width: number;
    height: number;
    options: Record<string, any> | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_panels", {
    id: string;
    dashboard: string | MergeCoreCollection<Schema, "directus_dashboards", {
        id: string;
        name: string;
        icon: string;
        note: string | null;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
        color: string | null;
    }>;
    name: string | null;
    icon: string | null;
    color: string | null;
    show_header: boolean;
    note: string | null;
    type: string;
    position_x: number;
    position_y: number;
    width: number;
    height: number;
    options: Record<string, any> | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>[], Schema>;
/**
 * Create a new panel.
 *
 * @param item The panel to create
 * @param query Optional return data query
 *
 * @returns Returns the panel object for the created panel.
 */
declare const createPanel: <Schema extends object, const TQuery extends Query<Schema, DirectusPanel<Schema>>>(item: Partial<DirectusPanel<Schema>>, query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_panels", {
    id: string;
    dashboard: string | MergeCoreCollection<Schema, "directus_dashboards", {
        id: string;
        name: string;
        icon: string;
        note: string | null;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
        color: string | null;
    }>;
    name: string | null;
    icon: string | null;
    color: string | null;
    show_header: boolean;
    note: string | null;
    type: string;
    position_x: number;
    position_y: number;
    width: number;
    height: number;
    options: Record<string, any> | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_panels", {
    id: string;
    dashboard: string | MergeCoreCollection<Schema, "directus_dashboards", {
        id: string;
        name: string;
        icon: string;
        note: string | null;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
        color: string | null;
    }>;
    name: string | null;
    icon: string | null;
    color: string | null;
    show_header: boolean;
    note: string | null;
    type: string;
    position_x: number;
    position_y: number;
    width: number;
    height: number;
    options: Record<string, any> | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_panels", {
    id: string;
    dashboard: string | MergeCoreCollection<Schema, "directus_dashboards", {
        id: string;
        name: string;
        icon: string;
        note: string | null;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
        color: string | null;
    }>;
    name: string | null;
    icon: string | null;
    color: string | null;
    show_header: boolean;
    note: string | null;
    type: string;
    position_x: number;
    position_y: number;
    width: number;
    height: number;
    options: Record<string, any> | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_panels", {
    id: string;
    dashboard: string | MergeCoreCollection<Schema, "directus_dashboards", {
        id: string;
        name: string;
        icon: string;
        note: string | null;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
        color: string | null;
    }>;
    name: string | null;
    icon: string | null;
    color: string | null;
    show_header: boolean;
    note: string | null;
    type: string;
    position_x: number;
    position_y: number;
    width: number;
    height: number;
    options: Record<string, any> | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_panels", {
    id: string;
    dashboard: string | MergeCoreCollection<Schema, "directus_dashboards", {
        id: string;
        name: string;
        icon: string;
        note: string | null;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
        color: string | null;
    }>;
    name: string | null;
    icon: string | null;
    color: string | null;
    show_header: boolean;
    note: string | null;
    type: string;
    position_x: number;
    position_y: number;
    width: number;
    height: number;
    options: Record<string, any> | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_panels", {
    id: string;
    dashboard: string | MergeCoreCollection<Schema, "directus_dashboards", {
        id: string;
        name: string;
        icon: string;
        note: string | null;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
        color: string | null;
    }>;
    name: string | null;
    icon: string | null;
    color: string | null;
    show_header: boolean;
    note: string | null;
    type: string;
    position_x: number;
    position_y: number;
    width: number;
    height: number;
    options: Record<string, any> | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>, Schema>;

type CreatePermissionOutput<Schema extends object, TQuery extends Query<Schema, Item>, Item extends object = DirectusPermission<Schema>> = ApplyQueryFields<Schema, Item, TQuery['fields']>;
/**
 * Create multiple new permission rules
 *
 * @param items The permission rules to create
 * @param query Optional return data query
 *
 * @returns Returns the permission objects for the created permissions.
 */
declare const createPermissions: <Schema extends object, const TQuery extends Query<Schema, DirectusPermission<Schema>>>(items: Partial<DirectusPermission<Schema>>[], query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_permissions", {
    id: number;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    collection: string;
    action: string;
    permissions: Record<string, any> | null;
    validation: Record<string, any> | null;
    presets: Record<string, any> | null;
    fields: string[] | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_permissions", {
    id: number;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    collection: string;
    action: string;
    permissions: Record<string, any> | null;
    validation: Record<string, any> | null;
    presets: Record<string, any> | null;
    fields: string[] | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_permissions", {
    id: number;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    collection: string;
    action: string;
    permissions: Record<string, any> | null;
    validation: Record<string, any> | null;
    presets: Record<string, any> | null;
    fields: string[] | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_permissions", {
    id: number;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    collection: string;
    action: string;
    permissions: Record<string, any> | null;
    validation: Record<string, any> | null;
    presets: Record<string, any> | null;
    fields: string[] | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_permissions", {
    id: number;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    collection: string;
    action: string;
    permissions: Record<string, any> | null;
    validation: Record<string, any> | null;
    presets: Record<string, any> | null;
    fields: string[] | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_permissions", {
    id: number;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    collection: string;
    action: string;
    permissions: Record<string, any> | null;
    validation: Record<string, any> | null;
    presets: Record<string, any> | null;
    fields: string[] | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>[], Schema>;
/**
 * Create a new permission rule
 *
 * @param item The permission rule to create
 * @param query Optional return data query
 *
 * @returns Returns the permission object for the created permission.
 */
declare const createPermission: <Schema extends object, const TQuery extends Query<Schema, DirectusPermission<Schema>>>(item: Partial<DirectusPermission<Schema>>, query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_permissions", {
    id: number;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    collection: string;
    action: string;
    permissions: Record<string, any> | null;
    validation: Record<string, any> | null;
    presets: Record<string, any> | null;
    fields: string[] | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_permissions", {
    id: number;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    collection: string;
    action: string;
    permissions: Record<string, any> | null;
    validation: Record<string, any> | null;
    presets: Record<string, any> | null;
    fields: string[] | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_permissions", {
    id: number;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    collection: string;
    action: string;
    permissions: Record<string, any> | null;
    validation: Record<string, any> | null;
    presets: Record<string, any> | null;
    fields: string[] | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_permissions", {
    id: number;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    collection: string;
    action: string;
    permissions: Record<string, any> | null;
    validation: Record<string, any> | null;
    presets: Record<string, any> | null;
    fields: string[] | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_permissions", {
    id: number;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    collection: string;
    action: string;
    permissions: Record<string, any> | null;
    validation: Record<string, any> | null;
    presets: Record<string, any> | null;
    fields: string[] | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_permissions", {
    id: number;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    collection: string;
    action: string;
    permissions: Record<string, any> | null;
    validation: Record<string, any> | null;
    presets: Record<string, any> | null;
    fields: string[] | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>, Schema>;

type CreatePresetOutput<Schema extends object, TQuery extends Query<Schema, Item>, Item extends object = DirectusPreset<Schema>> = ApplyQueryFields<Schema, Item, TQuery['fields']>;
/**
 * Create multiple new presets.
 *
 * @param items The presets to create
 * @param query Optional return data query
 *
 * @returns Returns the preset object for the created preset.
 */
declare const createPresets: <Schema extends object, const TQuery extends Query<Schema, DirectusPreset<Schema>>>(items: Partial<DirectusPreset<Schema>>[], query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_presets", {
    id: number;
    bookmark: string | null;
    user: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            /**
             * Create multiple new presets.
             *
             * @param items The presets to create
             * @param query Optional return data query
             *
             * @returns Returns the preset object for the created preset.
             */
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null; /**
         * Create a new preset.
         *
         * @param item The preset to create
         * @param query Optional return data query
         *
         * @returns Returns the preset object for the created preset.
         */
    }> | null;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    collection: string | null;
    search: string | null;
    layout: string | null;
    layout_query: Record<string, any> | null;
    layout_options: Record<string, any> | null;
    refresh_interval: number | null;
    filter: Record<string, any> | null;
    icon: string | null;
    color: string | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_presets", {
    id: number;
    bookmark: string | null;
    user: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            /**
             * Create multiple new presets.
             *
             * @param items The presets to create
             * @param query Optional return data query
             *
             * @returns Returns the preset object for the created preset.
             */
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null; /**
         * Create a new preset.
         *
         * @param item The preset to create
         * @param query Optional return data query
         *
         * @returns Returns the preset object for the created preset.
         */
    }> | null;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    collection: string | null;
    search: string | null;
    layout: string | null;
    layout_query: Record<string, any> | null;
    layout_options: Record<string, any> | null;
    refresh_interval: number | null;
    filter: Record<string, any> | null;
    icon: string | null;
    color: string | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_presets", {
    id: number;
    bookmark: string | null;
    user: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            /**
             * Create multiple new presets.
             *
             * @param items The presets to create
             * @param query Optional return data query
             *
             * @returns Returns the preset object for the created preset.
             */
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null; /**
         * Create a new preset.
         *
         * @param item The preset to create
         * @param query Optional return data query
         *
         * @returns Returns the preset object for the created preset.
         */
    }> | null;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    collection: string | null;
    search: string | null;
    layout: string | null;
    layout_query: Record<string, any> | null;
    layout_options: Record<string, any> | null;
    refresh_interval: number | null;
    filter: Record<string, any> | null;
    icon: string | null;
    color: string | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_presets", {
    id: number;
    bookmark: string | null;
    user: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            /**
             * Create multiple new presets.
             *
             * @param items The presets to create
             * @param query Optional return data query
             *
             * @returns Returns the preset object for the created preset.
             */
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null; /**
         * Create a new preset.
         *
         * @param item The preset to create
         * @param query Optional return data query
         *
         * @returns Returns the preset object for the created preset.
         */
    }> | null;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    collection: string | null;
    search: string | null;
    layout: string | null;
    layout_query: Record<string, any> | null;
    layout_options: Record<string, any> | null;
    refresh_interval: number | null;
    filter: Record<string, any> | null;
    icon: string | null;
    color: string | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_presets", {
    id: number;
    bookmark: string | null;
    user: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            /**
             * Create multiple new presets.
             *
             * @param items The presets to create
             * @param query Optional return data query
             *
             * @returns Returns the preset object for the created preset.
             */
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null; /**
         * Create a new preset.
         *
         * @param item The preset to create
         * @param query Optional return data query
         *
         * @returns Returns the preset object for the created preset.
         */
    }> | null;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    collection: string | null;
    search: string | null;
    layout: string | null;
    layout_query: Record<string, any> | null;
    layout_options: Record<string, any> | null;
    refresh_interval: number | null;
    filter: Record<string, any> | null;
    icon: string | null;
    color: string | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_presets", {
    id: number;
    bookmark: string | null;
    user: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            /**
             * Create multiple new presets.
             *
             * @param items The presets to create
             * @param query Optional return data query
             *
             * @returns Returns the preset object for the created preset.
             */
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null; /**
         * Create a new preset.
         *
         * @param item The preset to create
         * @param query Optional return data query
         *
         * @returns Returns the preset object for the created preset.
         */
    }> | null;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    collection: string | null;
    search: string | null;
    layout: string | null;
    layout_query: Record<string, any> | null;
    layout_options: Record<string, any> | null;
    refresh_interval: number | null;
    filter: Record<string, any> | null;
    icon: string | null;
    color: string | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>[], Schema>;
/**
 * Create a new preset.
 *
 * @param item The preset to create
 * @param query Optional return data query
 *
 * @returns Returns the preset object for the created preset.
 */
declare const createPreset: <Schema extends object, const TQuery extends Query<Schema, DirectusPreset<Schema>>>(item: Partial<DirectusPreset<Schema>>, query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_presets", {
    id: number;
    bookmark: string | null;
    user: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            /**
             * Create multiple new presets.
             *
             * @param items The presets to create
             * @param query Optional return data query
             *
             * @returns Returns the preset object for the created preset.
             */
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null; /**
         * Create a new preset.
         *
         * @param item The preset to create
         * @param query Optional return data query
         *
         * @returns Returns the preset object for the created preset.
         */
    }> | null;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    collection: string | null;
    search: string | null;
    layout: string | null;
    layout_query: Record<string, any> | null;
    layout_options: Record<string, any> | null;
    refresh_interval: number | null;
    filter: Record<string, any> | null;
    icon: string | null;
    color: string | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_presets", {
    id: number;
    bookmark: string | null;
    user: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            /**
             * Create multiple new presets.
             *
             * @param items The presets to create
             * @param query Optional return data query
             *
             * @returns Returns the preset object for the created preset.
             */
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null; /**
         * Create a new preset.
         *
         * @param item The preset to create
         * @param query Optional return data query
         *
         * @returns Returns the preset object for the created preset.
         */
    }> | null;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    collection: string | null;
    search: string | null;
    layout: string | null;
    layout_query: Record<string, any> | null;
    layout_options: Record<string, any> | null;
    refresh_interval: number | null;
    filter: Record<string, any> | null;
    icon: string | null;
    color: string | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_presets", {
    id: number;
    bookmark: string | null;
    user: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            /**
             * Create multiple new presets.
             *
             * @param items The presets to create
             * @param query Optional return data query
             *
             * @returns Returns the preset object for the created preset.
             */
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null; /**
         * Create a new preset.
         *
         * @param item The preset to create
         * @param query Optional return data query
         *
         * @returns Returns the preset object for the created preset.
         */
    }> | null;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    collection: string | null;
    search: string | null;
    layout: string | null;
    layout_query: Record<string, any> | null;
    layout_options: Record<string, any> | null;
    refresh_interval: number | null;
    filter: Record<string, any> | null;
    icon: string | null;
    color: string | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_presets", {
    id: number;
    bookmark: string | null;
    user: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            /**
             * Create multiple new presets.
             *
             * @param items The presets to create
             * @param query Optional return data query
             *
             * @returns Returns the preset object for the created preset.
             */
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null; /**
         * Create a new preset.
         *
         * @param item The preset to create
         * @param query Optional return data query
         *
         * @returns Returns the preset object for the created preset.
         */
    }> | null;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    collection: string | null;
    search: string | null;
    layout: string | null;
    layout_query: Record<string, any> | null;
    layout_options: Record<string, any> | null;
    refresh_interval: number | null;
    filter: Record<string, any> | null;
    icon: string | null;
    color: string | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_presets", {
    id: number;
    bookmark: string | null;
    user: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            /**
             * Create multiple new presets.
             *
             * @param items The presets to create
             * @param query Optional return data query
             *
             * @returns Returns the preset object for the created preset.
             */
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null; /**
         * Create a new preset.
         *
         * @param item The preset to create
         * @param query Optional return data query
         *
         * @returns Returns the preset object for the created preset.
         */
    }> | null;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    collection: string | null;
    search: string | null;
    layout: string | null;
    layout_query: Record<string, any> | null;
    layout_options: Record<string, any> | null;
    refresh_interval: number | null;
    filter: Record<string, any> | null;
    icon: string | null;
    color: string | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_presets", {
    id: number;
    bookmark: string | null;
    user: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            /**
             * Create multiple new presets.
             *
             * @param items The presets to create
             * @param query Optional return data query
             *
             * @returns Returns the preset object for the created preset.
             */
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null; /**
         * Create a new preset.
         *
         * @param item The preset to create
         * @param query Optional return data query
         *
         * @returns Returns the preset object for the created preset.
         */
    }> | null;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    collection: string | null;
    search: string | null;
    layout: string | null;
    layout_query: Record<string, any> | null;
    layout_options: Record<string, any> | null;
    refresh_interval: number | null;
    filter: Record<string, any> | null;
    icon: string | null;
    color: string | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>, Schema>;

type CreateRelationOutput<Schema extends object, Item extends object = DirectusRelation<Schema>> = ApplyQueryFields<Schema, Item, '*'>;
/**
 * Create a new relation.
 *
 * @param item The relation to create
 * @param query Optional return data query
 *
 * @returns Returns the relation object for the created relation.
 */
declare const createRelation: <Schema extends object>(item: NestedPartial<DirectusRelation<Schema>>) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, DirectusRelation<Schema>> extends infer FF ? MapFlatFields<DirectusRelation<Schema>, keyof DirectusRelation<Schema>, FF extends Record<string, string> ? FF : Record<string, string>> : never, {}>>, Schema>;

type CreateRoleOutput<Schema extends object, TQuery extends Query<Schema, Item>, Item extends object = DirectusRole<Schema>> = ApplyQueryFields<Schema, Item, TQuery['fields']>;
/**
 * Create multiple new roles.
 *
 * @param items The roles to create
 * @param query Optional return data query
 *
 * @returns Returns the role objects for the created roles.
 */
declare const createRoles: <Schema extends object, const TQuery extends Query<Schema, DirectusRole<Schema>>>(items: Partial<DirectusRole<Schema>>[], query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_roles", {
    id: string;
    name: string;
    icon: string;
    description: string | null;
    ip_access: string | null;
    enforce_tfa: boolean;
    admin_access: boolean;
    app_access: boolean;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_roles", {
    id: string;
    name: string;
    icon: string;
    description: string | null;
    ip_access: string | null;
    enforce_tfa: boolean;
    admin_access: boolean;
    app_access: boolean;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_roles", {
    id: string;
    name: string;
    icon: string;
    description: string | null;
    ip_access: string | null;
    enforce_tfa: boolean;
    admin_access: boolean;
    app_access: boolean;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_roles", {
    id: string;
    name: string;
    icon: string;
    description: string | null;
    ip_access: string | null;
    enforce_tfa: boolean;
    admin_access: boolean;
    app_access: boolean;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_roles", {
    id: string;
    name: string;
    icon: string;
    description: string | null;
    ip_access: string | null;
    enforce_tfa: boolean;
    admin_access: boolean;
    app_access: boolean;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_roles", {
    id: string;
    name: string;
    icon: string;
    description: string | null;
    ip_access: string | null;
    enforce_tfa: boolean;
    admin_access: boolean;
    app_access: boolean;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>[], Schema>;
/**
 * Create a new role.
 *
 * @param item The role to create
 * @param query Optional return data query
 *
 * @returns Returns the role object for the created role.
 */
declare const createRole: <Schema extends object, const TQuery extends Query<Schema, DirectusRole<Schema>>>(item: Partial<DirectusRole<Schema>>, query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_roles", {
    id: string;
    name: string;
    icon: string;
    description: string | null;
    ip_access: string | null;
    enforce_tfa: boolean;
    admin_access: boolean;
    app_access: boolean;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_roles", {
    id: string;
    name: string;
    icon: string;
    description: string | null;
    ip_access: string | null;
    enforce_tfa: boolean;
    admin_access: boolean;
    app_access: boolean;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_roles", {
    id: string;
    name: string;
    icon: string;
    description: string | null;
    ip_access: string | null;
    enforce_tfa: boolean;
    admin_access: boolean;
    app_access: boolean;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_roles", {
    id: string;
    name: string;
    icon: string;
    description: string | null;
    ip_access: string | null;
    enforce_tfa: boolean;
    admin_access: boolean;
    app_access: boolean;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_roles", {
    id: string;
    name: string;
    icon: string;
    description: string | null;
    ip_access: string | null;
    enforce_tfa: boolean;
    admin_access: boolean;
    app_access: boolean;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_roles", {
    id: string;
    name: string;
    icon: string;
    description: string | null;
    ip_access: string | null;
    enforce_tfa: boolean;
    admin_access: boolean;
    app_access: boolean;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>, Schema>;

type CreateShareOutput<Schema extends object, TQuery extends Query<Schema, Item>, Item extends object = DirectusShare<Schema>> = ApplyQueryFields<Schema, Item, TQuery['fields']>;
/**
 * Create multiple new shares.
 *
 * @param items The shares to create
 * @param query Optional return data query
 *
 * @returns Returns the share objects for the created shares.
 */
declare const createShares: <Schema extends object, const TQuery extends Query<Schema, DirectusShare<Schema>>>(items: Partial<DirectusShare<Schema>>[], query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_shares", {
    id: string;
    name: string | null;
    collection: string | null;
    item: string | null;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    password: string | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    date_created: "datetime" | null;
    date_start: "datetime" | null;
    date_end: "datetime" | null;
    times_used: number | null;
    max_uses: number | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_shares", {
    id: string;
    name: string | null;
    collection: string | null;
    item: string | null;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    password: string | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    date_created: "datetime" | null;
    date_start: "datetime" | null;
    date_end: "datetime" | null;
    times_used: number | null;
    max_uses: number | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_shares", {
    id: string;
    name: string | null;
    collection: string | null;
    item: string | null;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    password: string | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    date_created: "datetime" | null;
    date_start: "datetime" | null;
    date_end: "datetime" | null;
    times_used: number | null;
    max_uses: number | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_shares", {
    id: string;
    name: string | null;
    collection: string | null;
    item: string | null;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    password: string | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    date_created: "datetime" | null;
    date_start: "datetime" | null;
    date_end: "datetime" | null;
    times_used: number | null;
    max_uses: number | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_shares", {
    id: string;
    name: string | null;
    collection: string | null;
    item: string | null;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    password: string | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    date_created: "datetime" | null;
    date_start: "datetime" | null;
    date_end: "datetime" | null;
    times_used: number | null;
    max_uses: number | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_shares", {
    id: string;
    name: string | null;
    collection: string | null;
    item: string | null;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    password: string | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    date_created: "datetime" | null;
    date_start: "datetime" | null;
    date_end: "datetime" | null;
    times_used: number | null;
    max_uses: number | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>[], Schema>;
/**
 * Create a new share.
 *
 * @param item The share to create
 * @param query Optional return data query
 *
 * @returns Returns the share object for the created share.
 */
declare const createShare: <Schema extends object, const TQuery extends Query<Schema, DirectusShare<Schema>>>(item: Partial<DirectusShare<Schema>>, query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_shares", {
    id: string;
    name: string | null;
    collection: string | null;
    item: string | null;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    password: string | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    date_created: "datetime" | null;
    date_start: "datetime" | null;
    date_end: "datetime" | null;
    times_used: number | null;
    max_uses: number | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_shares", {
    id: string;
    name: string | null;
    collection: string | null;
    item: string | null;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    password: string | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    date_created: "datetime" | null;
    date_start: "datetime" | null;
    date_end: "datetime" | null;
    times_used: number | null;
    max_uses: number | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_shares", {
    id: string;
    name: string | null;
    collection: string | null;
    item: string | null;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    password: string | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    date_created: "datetime" | null;
    date_start: "datetime" | null;
    date_end: "datetime" | null;
    times_used: number | null;
    max_uses: number | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_shares", {
    id: string;
    name: string | null;
    collection: string | null;
    item: string | null;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    password: string | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    date_created: "datetime" | null;
    date_start: "datetime" | null;
    date_end: "datetime" | null;
    times_used: number | null;
    max_uses: number | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_shares", {
    id: string;
    name: string | null;
    collection: string | null;
    item: string | null;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    password: string | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    date_created: "datetime" | null;
    date_start: "datetime" | null;
    date_end: "datetime" | null;
    times_used: number | null;
    max_uses: number | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_shares", {
    id: string;
    name: string | null;
    collection: string | null;
    item: string | null;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    password: string | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    date_created: "datetime" | null;
    date_start: "datetime" | null;
    date_end: "datetime" | null;
    times_used: number | null;
    max_uses: number | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>, Schema>;

type CreateTranslationOutput<Schema extends object, TQuery extends Query<Schema, Item>, Item extends object = DirectusTranslation<Schema>> = ApplyQueryFields<Schema, Item, TQuery['fields']>;
/**
 * Create multiple new translation.
 *
 * @param items The translations to create
 * @param query Optional return data query
 *
 * @returns Returns the translation object for the created translation.
 */
declare const createTranslations: <Schema extends object, const TQuery extends Query<Schema, DirectusTranslation<Schema>>>(items: Partial<DirectusTranslation<Schema>>[], query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_translations", {
    id: string;
    language: string;
    key: string;
    value: string;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_translations", {
    id: string;
    language: string;
    key: string;
    value: string;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_translations", {
    id: string;
    language: string;
    key: string;
    value: string;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_translations", {
    id: string;
    language: string;
    key: string;
    value: string;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_translations", {
    id: string;
    language: string;
    key: string;
    value: string;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_translations", {
    id: string;
    language: string;
    key: string;
    value: string;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>[], Schema>;
/**
 * Create a new translation.
 *
 * @param item The translation to create
 * @param query Optional return data query
 *
 * @returns Returns the translation object for the created translation.
 */
declare const createTranslation: <Schema extends object, const TQuery extends Query<Schema, DirectusTranslation<Schema>>>(item: Partial<DirectusTranslation<Schema>>, query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_translations", {
    id: string;
    language: string;
    key: string;
    value: string;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_translations", {
    id: string;
    language: string;
    key: string;
    value: string;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_translations", {
    id: string;
    language: string;
    key: string;
    value: string;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_translations", {
    id: string;
    language: string;
    key: string;
    value: string;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_translations", {
    id: string;
    language: string;
    key: string;
    value: string;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_translations", {
    id: string;
    language: string;
    key: string;
    value: string;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>, Schema>;

type CreateUserOutput<Schema extends object, TQuery extends Query<Schema, Item>, Item extends object = DirectusUser<Schema>> = ApplyQueryFields<Schema, Item, TQuery['fields']>;
/**
 * Create multiple new users.
 *
 * @param items The items to create
 * @param query Optional return data query
 *
 * @returns Returns the user objects for the created users.
 */
declare const createUsers: <Schema extends object, const TQuery extends Query<Schema, DirectusUser<Schema>>>(items: Partial<DirectusUser<Schema>>[], query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_users", {
    id: string;
    first_name: string | null;
    last_name: string | null;
    email: string | null;
    password: string | null;
    location: string | null;
    title: string | null;
    description: string | null;
    tags: string[] | null;
    avatar: string | MergeCoreCollection<Schema, "directus_files", {
        id: string;
        storage: string;
        filename_disk: string | null;
        filename_download: string;
        title: string | null;
        type: string | null;
        folder: string | MergeCoreCollection<Schema, "directus_folders", {
            id: string;
            name: string;
            parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
        }> | null;
        uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        uploaded_on: "datetime";
        modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        modified_on: "datetime";
        charset: string | null;
        filesize: string | null;
        width: number | null;
        height: number | null;
        duration: number | null;
        embed: unknown;
        description: string | null;
        location: string | null;
        tags: string[] | null;
        metadata: Record<string, any> | null;
    }> | null;
    language: string | null;
    theme: string | null;
    tfa_secret: string | null;
    status: string;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    token: string | null;
    last_access: "datetime" | null;
    last_page: string | null;
    provider: string;
    external_identifier: string | null;
    auth_data: Record<string, any> | null;
    email_notifications: boolean | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_users", {
    id: string;
    first_name: string | null;
    last_name: string | null;
    email: string | null;
    password: string | null;
    location: string | null;
    title: string | null;
    description: string | null;
    tags: string[] | null;
    avatar: string | MergeCoreCollection<Schema, "directus_files", {
        id: string;
        storage: string;
        filename_disk: string | null;
        filename_download: string;
        title: string | null;
        type: string | null;
        folder: string | MergeCoreCollection<Schema, "directus_folders", {
            id: string;
            name: string;
            parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
        }> | null;
        uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        uploaded_on: "datetime";
        modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        modified_on: "datetime";
        charset: string | null;
        filesize: string | null;
        width: number | null;
        height: number | null;
        duration: number | null;
        embed: unknown;
        description: string | null;
        location: string | null;
        tags: string[] | null;
        metadata: Record<string, any> | null;
    }> | null;
    language: string | null;
    theme: string | null;
    tfa_secret: string | null;
    status: string;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    token: string | null;
    last_access: "datetime" | null;
    last_page: string | null;
    provider: string;
    external_identifier: string | null;
    auth_data: Record<string, any> | null;
    email_notifications: boolean | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_users", {
    id: string;
    first_name: string | null;
    last_name: string | null;
    email: string | null;
    password: string | null;
    location: string | null;
    title: string | null;
    description: string | null;
    tags: string[] | null;
    avatar: string | MergeCoreCollection<Schema, "directus_files", {
        id: string;
        storage: string;
        filename_disk: string | null;
        filename_download: string;
        title: string | null;
        type: string | null;
        folder: string | MergeCoreCollection<Schema, "directus_folders", {
            id: string;
            name: string;
            parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
        }> | null;
        uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        uploaded_on: "datetime";
        modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        modified_on: "datetime";
        charset: string | null;
        filesize: string | null;
        width: number | null;
        height: number | null;
        duration: number | null;
        embed: unknown;
        description: string | null;
        location: string | null;
        tags: string[] | null;
        metadata: Record<string, any> | null;
    }> | null;
    language: string | null;
    theme: string | null;
    tfa_secret: string | null;
    status: string;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    token: string | null;
    last_access: "datetime" | null;
    last_page: string | null;
    provider: string;
    external_identifier: string | null;
    auth_data: Record<string, any> | null;
    email_notifications: boolean | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_users", {
    id: string;
    first_name: string | null;
    last_name: string | null;
    email: string | null;
    password: string | null;
    location: string | null;
    title: string | null;
    description: string | null;
    tags: string[] | null;
    avatar: string | MergeCoreCollection<Schema, "directus_files", {
        id: string;
        storage: string;
        filename_disk: string | null;
        filename_download: string;
        title: string | null;
        type: string | null;
        folder: string | MergeCoreCollection<Schema, "directus_folders", {
            id: string;
            name: string;
            parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
        }> | null;
        uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        uploaded_on: "datetime";
        modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        modified_on: "datetime";
        charset: string | null;
        filesize: string | null;
        width: number | null;
        height: number | null;
        duration: number | null;
        embed: unknown;
        description: string | null;
        location: string | null;
        tags: string[] | null;
        metadata: Record<string, any> | null;
    }> | null;
    language: string | null;
    theme: string | null;
    tfa_secret: string | null;
    status: string;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    token: string | null;
    last_access: "datetime" | null;
    last_page: string | null;
    provider: string;
    external_identifier: string | null;
    auth_data: Record<string, any> | null;
    email_notifications: boolean | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_users", {
    id: string;
    first_name: string | null;
    last_name: string | null;
    email: string | null;
    password: string | null;
    location: string | null;
    title: string | null;
    description: string | null;
    tags: string[] | null;
    avatar: string | MergeCoreCollection<Schema, "directus_files", {
        id: string;
        storage: string;
        filename_disk: string | null;
        filename_download: string;
        title: string | null;
        type: string | null;
        folder: string | MergeCoreCollection<Schema, "directus_folders", {
            id: string;
            name: string;
            parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
        }> | null;
        uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        uploaded_on: "datetime";
        modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        modified_on: "datetime";
        charset: string | null;
        filesize: string | null;
        width: number | null;
        height: number | null;
        duration: number | null;
        embed: unknown;
        description: string | null;
        location: string | null;
        tags: string[] | null;
        metadata: Record<string, any> | null;
    }> | null;
    language: string | null;
    theme: string | null;
    tfa_secret: string | null;
    status: string;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    token: string | null;
    last_access: "datetime" | null;
    last_page: string | null;
    provider: string;
    external_identifier: string | null;
    auth_data: Record<string, any> | null;
    email_notifications: boolean | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_users", {
    id: string;
    first_name: string | null;
    last_name: string | null;
    email: string | null;
    password: string | null;
    location: string | null;
    title: string | null;
    description: string | null;
    tags: string[] | null;
    avatar: string | MergeCoreCollection<Schema, "directus_files", {
        id: string;
        storage: string;
        filename_disk: string | null;
        filename_download: string;
        title: string | null;
        type: string | null;
        folder: string | MergeCoreCollection<Schema, "directus_folders", {
            id: string;
            name: string;
            parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
        }> | null;
        uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        uploaded_on: "datetime";
        modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        modified_on: "datetime";
        charset: string | null;
        filesize: string | null;
        width: number | null;
        height: number | null;
        duration: number | null;
        embed: unknown;
        description: string | null;
        location: string | null;
        tags: string[] | null;
        metadata: Record<string, any> | null;
    }> | null;
    language: string | null;
    theme: string | null;
    tfa_secret: string | null;
    status: string;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    token: string | null;
    last_access: "datetime" | null;
    last_page: string | null;
    provider: string;
    external_identifier: string | null;
    auth_data: Record<string, any> | null;
    email_notifications: boolean | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>[], Schema>;
/**
 * Create a new user.
 *
 * @param item The user to create
 * @param query Optional return data query
 *
 * @returns Returns the user object for the created user.
 */
declare const createUser: <Schema extends object, const TQuery extends Query<Schema, DirectusUser<Schema>>>(item: Partial<DirectusUser<Schema>>, query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_users", {
    id: string;
    first_name: string | null;
    last_name: string | null;
    email: string | null;
    password: string | null;
    location: string | null;
    title: string | null;
    description: string | null;
    tags: string[] | null;
    avatar: string | MergeCoreCollection<Schema, "directus_files", {
        id: string;
        storage: string;
        filename_disk: string | null;
        filename_download: string;
        title: string | null;
        type: string | null;
        folder: string | MergeCoreCollection<Schema, "directus_folders", {
            id: string;
            name: string;
            parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
        }> | null;
        uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        uploaded_on: "datetime";
        modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        modified_on: "datetime";
        charset: string | null;
        filesize: string | null;
        width: number | null;
        height: number | null;
        duration: number | null;
        embed: unknown;
        description: string | null;
        location: string | null;
        tags: string[] | null;
        metadata: Record<string, any> | null;
    }> | null;
    language: string | null;
    theme: string | null;
    tfa_secret: string | null;
    status: string;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    token: string | null;
    last_access: "datetime" | null;
    last_page: string | null;
    provider: string;
    external_identifier: string | null;
    auth_data: Record<string, any> | null;
    email_notifications: boolean | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_users", {
    id: string;
    first_name: string | null;
    last_name: string | null;
    email: string | null;
    password: string | null;
    location: string | null;
    title: string | null;
    description: string | null;
    tags: string[] | null;
    avatar: string | MergeCoreCollection<Schema, "directus_files", {
        id: string;
        storage: string;
        filename_disk: string | null;
        filename_download: string;
        title: string | null;
        type: string | null;
        folder: string | MergeCoreCollection<Schema, "directus_folders", {
            id: string;
            name: string;
            parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
        }> | null;
        uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        uploaded_on: "datetime";
        modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        modified_on: "datetime";
        charset: string | null;
        filesize: string | null;
        width: number | null;
        height: number | null;
        duration: number | null;
        embed: unknown;
        description: string | null;
        location: string | null;
        tags: string[] | null;
        metadata: Record<string, any> | null;
    }> | null;
    language: string | null;
    theme: string | null;
    tfa_secret: string | null;
    status: string;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    token: string | null;
    last_access: "datetime" | null;
    last_page: string | null;
    provider: string;
    external_identifier: string | null;
    auth_data: Record<string, any> | null;
    email_notifications: boolean | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_users", {
    id: string;
    first_name: string | null;
    last_name: string | null;
    email: string | null;
    password: string | null;
    location: string | null;
    title: string | null;
    description: string | null;
    tags: string[] | null;
    avatar: string | MergeCoreCollection<Schema, "directus_files", {
        id: string;
        storage: string;
        filename_disk: string | null;
        filename_download: string;
        title: string | null;
        type: string | null;
        folder: string | MergeCoreCollection<Schema, "directus_folders", {
            id: string;
            name: string;
            parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
        }> | null;
        uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        uploaded_on: "datetime";
        modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        modified_on: "datetime";
        charset: string | null;
        filesize: string | null;
        width: number | null;
        height: number | null;
        duration: number | null;
        embed: unknown;
        description: string | null;
        location: string | null;
        tags: string[] | null;
        metadata: Record<string, any> | null;
    }> | null;
    language: string | null;
    theme: string | null;
    tfa_secret: string | null;
    status: string;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    token: string | null;
    last_access: "datetime" | null;
    last_page: string | null;
    provider: string;
    external_identifier: string | null;
    auth_data: Record<string, any> | null;
    email_notifications: boolean | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_users", {
    id: string;
    first_name: string | null;
    last_name: string | null;
    email: string | null;
    password: string | null;
    location: string | null;
    title: string | null;
    description: string | null;
    tags: string[] | null;
    avatar: string | MergeCoreCollection<Schema, "directus_files", {
        id: string;
        storage: string;
        filename_disk: string | null;
        filename_download: string;
        title: string | null;
        type: string | null;
        folder: string | MergeCoreCollection<Schema, "directus_folders", {
            id: string;
            name: string;
            parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
        }> | null;
        uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        uploaded_on: "datetime";
        modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        modified_on: "datetime";
        charset: string | null;
        filesize: string | null;
        width: number | null;
        height: number | null;
        duration: number | null;
        embed: unknown;
        description: string | null;
        location: string | null;
        tags: string[] | null;
        metadata: Record<string, any> | null;
    }> | null;
    language: string | null;
    theme: string | null;
    tfa_secret: string | null;
    status: string;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    token: string | null;
    last_access: "datetime" | null;
    last_page: string | null;
    provider: string;
    external_identifier: string | null;
    auth_data: Record<string, any> | null;
    email_notifications: boolean | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_users", {
    id: string;
    first_name: string | null;
    last_name: string | null;
    email: string | null;
    password: string | null;
    location: string | null;
    title: string | null;
    description: string | null;
    tags: string[] | null;
    avatar: string | MergeCoreCollection<Schema, "directus_files", {
        id: string;
        storage: string;
        filename_disk: string | null;
        filename_download: string;
        title: string | null;
        type: string | null;
        folder: string | MergeCoreCollection<Schema, "directus_folders", {
            id: string;
            name: string;
            parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
        }> | null;
        uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        uploaded_on: "datetime";
        modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        modified_on: "datetime";
        charset: string | null;
        filesize: string | null;
        width: number | null;
        height: number | null;
        duration: number | null;
        embed: unknown;
        description: string | null;
        location: string | null;
        tags: string[] | null;
        metadata: Record<string, any> | null;
    }> | null;
    language: string | null;
    theme: string | null;
    tfa_secret: string | null;
    status: string;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    token: string | null;
    last_access: "datetime" | null;
    last_page: string | null;
    provider: string;
    external_identifier: string | null;
    auth_data: Record<string, any> | null;
    email_notifications: boolean | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_users", {
    id: string;
    first_name: string | null;
    last_name: string | null;
    email: string | null;
    password: string | null;
    location: string | null;
    title: string | null;
    description: string | null;
    tags: string[] | null;
    avatar: string | MergeCoreCollection<Schema, "directus_files", {
        id: string;
        storage: string;
        filename_disk: string | null;
        filename_download: string;
        title: string | null;
        type: string | null;
        folder: string | MergeCoreCollection<Schema, "directus_folders", {
            id: string;
            name: string;
            parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
        }> | null;
        uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        uploaded_on: "datetime";
        modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        modified_on: "datetime";
        charset: string | null;
        filesize: string | null;
        width: number | null;
        height: number | null;
        duration: number | null;
        embed: unknown;
        description: string | null;
        location: string | null;
        tags: string[] | null;
        metadata: Record<string, any> | null;
    }> | null;
    language: string | null;
    theme: string | null;
    tfa_secret: string | null;
    status: string;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    token: string | null;
    last_access: "datetime" | null;
    last_page: string | null;
    provider: string;
    external_identifier: string | null;
    auth_data: Record<string, any> | null;
    email_notifications: boolean | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>, Schema>;

type CreateContentVersionOutput<Schema extends object, TQuery extends Query<Schema, Item>, Item extends object = DirectusVersion<Schema>> = ApplyQueryFields<Schema, Item, TQuery['fields']>;
/**
 * Create multiple new Content Versions.
 *
 * @param items The Content Versions to create
 * @param query Optional return data query
 *
 * @returns Returns the Content Version object for the created Content Versions.
 */
declare const createContentVersions: <Schema extends object, const TQuery extends Query<Schema, DirectusVersion<Schema>>>(items: Partial<DirectusVersion<Schema>>[], query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_versions", {
    id: string;
    key: string;
    name: string | null;
    collection: string | DirectusCollection<Schema>;
    item: string;
    hash: string;
    date_created: "datetime" | null;
    date_updated: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    user_updated: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_versions", {
    id: string;
    key: string;
    name: string | null;
    collection: string | DirectusCollection<Schema>;
    item: string;
    hash: string;
    date_created: "datetime" | null;
    date_updated: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    user_updated: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_versions", {
    id: string;
    key: string;
    name: string | null;
    collection: string | DirectusCollection<Schema>;
    item: string;
    hash: string;
    date_created: "datetime" | null;
    date_updated: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    user_updated: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_versions", {
    id: string;
    key: string;
    name: string | null;
    collection: string | DirectusCollection<Schema>;
    item: string;
    hash: string;
    date_created: "datetime" | null;
    date_updated: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    user_updated: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_versions", {
    id: string;
    key: string;
    name: string | null;
    collection: string | DirectusCollection<Schema>;
    item: string;
    hash: string;
    date_created: "datetime" | null;
    date_updated: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    user_updated: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_versions", {
    id: string;
    key: string;
    name: string | null;
    collection: string | DirectusCollection<Schema>;
    item: string;
    hash: string;
    date_created: "datetime" | null;
    date_updated: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    user_updated: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>[], Schema>;
/**
 * Create a new Content Version.
 *
 * @param item The Content Version to create
 * @param query Optional return data query
 *
 * @returns Returns the Content Version object for the created Content Version.
 */
declare const createContentVersion: <Schema extends object, const TQuery extends Query<Schema, DirectusVersion<Schema>>>(item: Partial<DirectusVersion<Schema>>, query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_versions", {
    id: string;
    key: string;
    name: string | null;
    collection: string | DirectusCollection<Schema>;
    item: string;
    hash: string;
    date_created: "datetime" | null;
    date_updated: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    user_updated: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_versions", {
    id: string;
    key: string;
    name: string | null;
    collection: string | DirectusCollection<Schema>;
    item: string;
    hash: string;
    date_created: "datetime" | null;
    date_updated: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    user_updated: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_versions", {
    id: string;
    key: string;
    name: string | null;
    collection: string | DirectusCollection<Schema>;
    item: string;
    hash: string;
    date_created: "datetime" | null;
    date_updated: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    user_updated: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_versions", {
    id: string;
    key: string;
    name: string | null;
    collection: string | DirectusCollection<Schema>;
    item: string;
    hash: string;
    date_created: "datetime" | null;
    date_updated: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    user_updated: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_versions", {
    id: string;
    key: string;
    name: string | null;
    collection: string | DirectusCollection<Schema>;
    item: string;
    hash: string;
    date_created: "datetime" | null;
    date_updated: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    user_updated: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_versions", {
    id: string;
    key: string;
    name: string | null;
    collection: string | DirectusCollection<Schema>;
    item: string;
    hash: string;
    date_created: "datetime" | null;
    date_updated: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    user_updated: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>, Schema>;

type CreateWebhookOutput<Schema extends object, TQuery extends Query<Schema, Item>, Item extends object = DirectusWebhook<Schema>> = ApplyQueryFields<Schema, Item, TQuery['fields']>;
/**
 * Create multiple new webhooks.
 *
 * @param items The webhooks to create
 * @param query Optional return data query
 *
 * @returns Returns the webhook objects for the created webhooks.
 */
declare const createWebhooks: <Schema extends object, const TQuery extends Query<Schema, DirectusWebhook<Schema>>>(items: Partial<DirectusWebhook<Schema>>[], query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_webhooks", {
    id: number;
    name: string;
    method: string;
    url: string;
    status: string;
    data: boolean;
    actions: string | string[];
    collections: string | string[];
    headers: Record<string, any> | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_webhooks", {
    id: number;
    name: string;
    method: string;
    url: string;
    status: string;
    data: boolean;
    actions: string | string[];
    collections: string | string[];
    headers: Record<string, any> | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_webhooks", {
    id: number;
    name: string;
    method: string;
    url: string;
    status: string;
    data: boolean;
    actions: string | string[];
    collections: string | string[];
    headers: Record<string, any> | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_webhooks", {
    id: number;
    name: string;
    method: string;
    url: string;
    status: string;
    data: boolean;
    actions: string | string[];
    collections: string | string[];
    headers: Record<string, any> | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_webhooks", {
    id: number;
    name: string;
    method: string;
    url: string;
    status: string;
    data: boolean;
    actions: string | string[];
    collections: string | string[];
    headers: Record<string, any> | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_webhooks", {
    id: number;
    name: string;
    method: string;
    url: string;
    status: string;
    data: boolean;
    actions: string | string[];
    collections: string | string[];
    headers: Record<string, any> | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>[], Schema>;
/**
 * Create a new webhook.
 *
 * @param item The webhook to create
 * @param query Optional return data query
 *
 * @returns Returns the webhook object for the created webhook.
 */
declare const createWebhook: <Schema extends object, const TQuery extends Query<Schema, DirectusWebhook<Schema>>>(item: Partial<DirectusWebhook<Schema>>, query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_webhooks", {
    id: number;
    name: string;
    method: string;
    url: string;
    status: string;
    data: boolean;
    actions: string | string[];
    collections: string | string[];
    headers: Record<string, any> | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_webhooks", {
    id: number;
    name: string;
    method: string;
    url: string;
    status: string;
    data: boolean;
    actions: string | string[];
    collections: string | string[];
    headers: Record<string, any> | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_webhooks", {
    id: number;
    name: string;
    method: string;
    url: string;
    status: string;
    data: boolean;
    actions: string | string[];
    collections: string | string[];
    headers: Record<string, any> | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_webhooks", {
    id: number;
    name: string;
    method: string;
    url: string;
    status: string;
    data: boolean;
    actions: string | string[];
    collections: string | string[];
    headers: Record<string, any> | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_webhooks", {
    id: number;
    name: string;
    method: string;
    url: string;
    status: string;
    data: boolean;
    actions: string | string[];
    collections: string | string[];
    headers: Record<string, any> | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_webhooks", {
    id: number;
    name: string;
    method: string;
    url: string;
    status: string;
    data: boolean;
    actions: string | string[];
    collections: string | string[];
    headers: Record<string, any> | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>, Schema>;

/**
 * Deletes a comment.
 * @param key
 * @returns Nothing
 */
declare const deleteComment: <Schema extends object>(key: DirectusActivity<Schema>["id"]) => RestCommand<void, Schema>;

/**
 * Delete a collection.
 * @param collection
 * @returns
 */
declare const deleteCollection: <Schema extends object>(collection: string) => RestCommand<void, Schema>;

/**
 * Delete multiple existing dashboards.
 * @param keysOrQuery
 * @returns
 * @throws Will throw if keys is empty
 */
declare const deleteDashboards: <Schema extends object>(keys: DirectusDashboard<Schema>["id"][]) => RestCommand<void, Schema>;
/**
 * Delete an existing dashboard.
 * @param key
 * @returns
 * @throws Will throw if key is empty
 */
declare const deleteDashboard: <Schema extends object>(key: DirectusDashboard<Schema>["id"]) => RestCommand<void, Schema>;

/**
 * Deletes the given field in the given collection.
 * @param collection
 * @param field
 * @returns
 * @throws Will throw if collection is empty
 * @throws Will throw if field is empty
 */
declare const deleteField: <Schema extends object>(collection: string, field: string) => RestCommand<void, Schema>;

/**
 * Delete multiple files at once.
 * @param keys
 * @returns
 * @throws Will throw if keys is empty
 */
declare const deleteFiles: <Schema extends object>(keys: DirectusFile<Schema>["id"][]) => RestCommand<void, Schema>;
/**
 * Delete an existing file.
 * @param key
 * @returns
 * @throws Will throw if key is empty
 */
declare const deleteFile: <Schema extends object>(key: DirectusFile<Schema>["id"]) => RestCommand<void, Schema>;

/**
 * Delete multiple existing flows.
 * @param keys
 * @returns
 * @throws Will throw if keys is empty
 */
declare const deleteFlows: <Schema extends object>(keys: DirectusFlow<Schema>["id"][]) => RestCommand<void, Schema>;
/**
 * Delete an existing flow.
 * @param key
 * @returns
 * @throws Will throw if key is empty
 */
declare const deleteFlow: <Schema extends object>(key: DirectusFlow<Schema>["id"]) => RestCommand<void, Schema>;

/**
 * Delete multiple existing folders.
 * @param keys
 * @returns
 * @throws Will throw if keys is empty
 */
declare const deleteFolders: <Schema extends object>(keys: DirectusFolder<Schema>["id"][]) => RestCommand<void, Schema>;
/**
 * Delete an existing folder.
 * @param key
 * @returns
 * @throws Will throw if key is empty
 */
declare const deleteFolder: <Schema extends object>(key: DirectusFolder<Schema>["id"]) => RestCommand<void, Schema>;

/**
 * Delete multiple existing items.
 *
 * @param collection The collection of the items
 * @param keysOrQuery The primary keys or a query
 *
 * @returns Nothing
 * @throws Will throw if collection is empty
 * @throws Will throw if collection is a core collection
 * @throws Will throw if keysOrQuery is empty
 */
declare const deleteItems: <Schema extends object, Collection extends keyof Schema, const TQuery extends Query<Schema, Schema[Collection]>>(collection: Collection, keysOrQuery: string[] | number[] | TQuery) => RestCommand<void, Schema>;
/**
 * Delete an existing item.
 *
 * @param collection The collection of the item
 * @param key The primary key of the item
 *
 * @returns Nothing
 * @throws Will throw if collection is empty
 * @throws Will throw if collection is a core collection
 * @throws Will throw if key is empty
 */
declare const deleteItem: <Schema extends object, Collection extends keyof Schema>(collection: Collection, key: string | number) => RestCommand<void, Schema>;

/**
 * Delete multiple existing notifications.
 * @param keys
 * @returns
 * @throws Will throw if keys is empty
 */
declare const deleteNotifications: <Schema extends object>(keys: DirectusNotification<Schema>["id"][]) => RestCommand<void, Schema>;
/**
 * Delete an existing notification.
 * @param key
 * @returns
 * @throws Will throw if key is empty
 */
declare const deleteNotification: <Schema extends object>(key: DirectusNotification<Schema>["id"]) => RestCommand<void, Schema>;

/**
 * Delete multiple existing operations.
 * @param keys
 * @returns
 * @throws Will throw if keys is empty
 */
declare const deleteOperations: <Schema extends object>(keys: DirectusOperation<Schema>["id"][]) => RestCommand<void, Schema>;
/**
 * Delete an existing operation.
 * @param key
 * @returns
 * @throws Will throw if key is empty
 */
declare const deleteOperation: <Schema extends object>(key: DirectusOperation<Schema>["id"]) => RestCommand<void, Schema>;

/**
 * Delete multiple existing panels.
 * @param keys
 * @returns
 * @throws Will throw if keys is empty
 */
declare const deletePanels: <Schema extends object>(keys: DirectusPanel<Schema>["id"][]) => RestCommand<void, Schema>;
/**
 * Delete an existing panel.
 * @param key
 * @returns
 * @throws Will throw if key is empty
 */
declare const deletePanel: <Schema extends object>(key: DirectusPanel<Schema>["id"]) => RestCommand<void, Schema>;

/**
 * Delete multiple existing permissions rules
 * @param keys
 * @returns
 * @throws Will throw if keys is empty
 */
declare const deletePermissions: <Schema extends object>(keys: DirectusPermission<Schema>["id"][]) => RestCommand<void, Schema>;
/**
 * Delete an existing permissions rule
 * @param key
 * @returns
 * @throws Will throw if key is empty
 */
declare const deletePermission: <Schema extends object>(key: DirectusPermission<Schema>["id"]) => RestCommand<void, Schema>;

/**
 * Delete multiple existing presets.
 * @param keys
 * @returns
 * @throws Will throw if keys is empty
 */
declare const deletePresets: <Schema extends object>(keys: DirectusPreset<Schema>["id"][]) => RestCommand<void, Schema>;
/**
 * Delete an existing preset.
 * @param key
 * @returns
 * @throws Will throw if key is empty
 */
declare const deletePreset: <Schema extends object>(key: DirectusPreset<Schema>["id"]) => RestCommand<void, Schema>;

/**
 * Delete an existing relation.
 * @param collection
 * @param field
 * @returns
 * @throws Will throw if collection is empty
 * @throws Will throw if field is empty
 */
declare const deleteRelation: <Schema extends object>(collection: string, field: string) => RestCommand<void, Schema>;

/**
 * Delete multiple existing roles.
 * @param keys
 * @returns
 * @throws Will throw if keys is empty
 */
declare const deleteRoles: <Schema extends object>(keys: DirectusRole<Schema>["id"][]) => RestCommand<void, Schema>;
/**
 * Delete an existing role.
 * @param key
 * @returns
 * @throws Will throw if key is empty
 */
declare const deleteRole: <Schema extends object>(key: DirectusRole<Schema>["id"]) => RestCommand<void, Schema>;

/**
 * Delete multiple existing shares.
 * @param keys
 * @returns
 * @throws Will throw if keys is empty
 */
declare const deleteShares: <Schema extends object>(keys: DirectusShare<Schema>["id"][]) => RestCommand<void, Schema>;
/**
 * Delete an existing share.
 * @param key
 * @returns
 * @throws Will throw if key is empty
 */
declare const deleteShare: <Schema extends object>(key: DirectusShare<Schema>["id"]) => RestCommand<void, Schema>;

/**
 * Delete multiple existing translations.
 * @param keys
 * @returns
 * @throws Will throw if keys is empty
 */
declare const deleteTranslations: <Schema extends object>(keys: DirectusTranslation<Schema>["id"][]) => RestCommand<void, Schema>;
/**
 * Delete an existing translation.
 * @param key
 * @returns
 * @throws Will throw if key is empty
 */
declare const deleteTranslation: <Schema extends object>(key: DirectusTranslation<Schema>["id"]) => RestCommand<void, Schema>;

/**
 * Delete multiple existing users.
 *
 * @param keys
 * @returns Nothing
 * @throws Will throw if keys is empty
 */
declare const deleteUsers: <Schema extends object>(keys: DirectusUser<Schema>["id"][]) => RestCommand<void, Schema>;
/**
 * Delete an existing user.
 *
 * @param key
 * @returns Nothing
 * @throws Will throw if key is empty
 */
declare const deleteUser: <Schema extends object>(key: DirectusUser<Schema>["id"]) => RestCommand<void, Schema>;

/**
 * Delete multiple existing Content Versions.
 * @param keys
 * @returns
 * @throws Will throw if keys is empty
 */
declare const deleteContentVersions: <Schema extends object>(keys: DirectusVersion<Schema>["id"][]) => RestCommand<void, Schema>;
/**
 * Delete an existing Content Version.
 * @param key
 * @returns
 * @throws Will throw if key is empty
 */
declare const deleteContentVersion: <Schema extends object>(key: DirectusVersion<Schema>["id"]) => RestCommand<void, Schema>;

/**
 * Delete multiple existing webhooks.
 * @param keys
 * @returns
 * @throws Will throw if keys is empty
 */
declare const deleteWebhooks: <Schema extends object>(keys: DirectusWebhook<Schema>["id"][]) => RestCommand<void, Schema>;
/**
 * Delete an existing webhook.
 * @param key
 * @returns
 * @throws Will throw if key is empty
 */
declare const deleteWebhook: <Schema extends object>(key: DirectusWebhook<Schema>["id"]) => RestCommand<void, Schema>;

type ReadActivityOutput<Schema extends object, TQuery extends Query<Schema, Item>, Item extends object = DirectusActivity<Schema>> = ApplyQueryFields<Schema, Item, TQuery['fields']>;
/**
 * Returns a list of activity actions.
 * @param query The query parameters
 * @returns An array of up to limit activity objects. If no items are available, data will be an empty array.
 */
declare const readActivities: <Schema extends object, const TQuery extends Query<Schema, DirectusActivity<Schema>>>(query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_activity", {
    id: number;
    action: string;
    user: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    timestamp: "datetime";
    ip: string | null;
    user_agent: string | null;
    collection: string; /**
     * Returns a list of activity actions.
     * @param query The query parameters
     * @returns An array of up to limit activity objects. If no items are available, data will be an empty array.
     */
    item: string;
    comment: string | null;
    origin: string | null;
    revisions: number[] | MergeCoreCollection<Schema, "directus_revisions", {
        id: number;
        activity: number | MergeCoreCollection<Schema, "directus_activity", any>;
        collection: string;
        item: string;
        data: Record<string, any> | null;
        delta: Record<string, any> | null;
        parent: number | MergeCoreCollection<Schema, "directus_revisions", any> | null;
        version: string | MergeCoreCollection<Schema, "directus_versions", {
            id: string;
            key: string;
            name: string | null;
            collection: string | DirectusCollection<Schema>;
            item: string;
            hash: string;
            date_created: "datetime" | null;
            /**
             * Returns a list of activity actions.
             * @param query The query parameters
             * @returns An array of up to limit activity objects. If no items are available, data will be an empty array.
             */
            date_updated: "datetime" | null;
            user_created: string | MergeCoreCollection<Schema, "directus_users", {
                id: string;
                first_name: string | null;
                last_name: string | null;
                email: string | null;
                password: string | null;
                location: string | null;
                title: string | null;
                description: string | null;
                tags: string[] | null;
                avatar: string | MergeCoreCollection<Schema, "directus_files", {
                    id: string;
                    storage: string;
                    filename_disk: string | null;
                    filename_download: string;
                    title: string | null;
                    type: string | null;
                    folder: string | MergeCoreCollection<Schema, "directus_folders", {
                        id: string;
                        name: string;
                        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                    }> | null;
                    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    uploaded_on: "datetime";
                    modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    modified_on: "datetime";
                    charset: string | null;
                    filesize: string | null;
                    width: number | null;
                    height: number | null;
                    duration: number | null;
                    embed: unknown;
                    description: string | null;
                    location: string | null;
                    tags: string[] | null;
                    metadata: Record<string, any> | null;
                }> | null;
                language: string | null;
                theme: string | null;
                tfa_secret: string | null;
                status: string;
                role: string | MergeCoreCollection<Schema, "directus_roles", {
                    id: string;
                    name: string;
                    icon: string;
                    description: string | null;
                    ip_access: string | null;
                    enforce_tfa: boolean;
                    admin_access: boolean;
                    app_access: boolean;
                }> | null;
                token: string | null;
                last_access: "datetime" | null;
                last_page: string | null;
                provider: string;
                external_identifier: string | null;
                auth_data: Record<string, any> | null;
                email_notifications: boolean | null;
            }> | null;
            user_updated: string | MergeCoreCollection<Schema, "directus_users", {
                id: string;
                first_name: string | null;
                last_name: string | null;
                email: string | null;
                password: string | null;
                location: string | null;
                title: string | null;
                description: string | null;
                tags: string[] | null;
                avatar: string | MergeCoreCollection<Schema, "directus_files", {
                    id: string;
                    storage: string;
                    filename_disk: string | null;
                    filename_download: string;
                    title: string | null;
                    type: string | null;
                    folder: string | MergeCoreCollection<Schema, "directus_folders", {
                        id: string;
                        name: string;
                        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                    }> | null;
                    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    uploaded_on: "datetime";
                    modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    modified_on: "datetime";
                    charset: string | null;
                    filesize: string | null;
                    width: number | null;
                    height: number | null;
                    duration: number | null;
                    embed: unknown;
                    description: string | null;
                    location: string | null;
                    tags: string[] | null;
                    metadata: Record<string, any> | null;
                }> | null;
                language: string | null;
                theme: string | null;
                tfa_secret: string | null;
                status: string;
                role: string | MergeCoreCollection<Schema, "directus_roles", {
                    id: string;
                    name: string;
                    icon: string;
                    description: string | null;
                    ip_access: string | null;
                    enforce_tfa: boolean;
                    admin_access: boolean;
                    app_access: boolean;
                }> | null;
                token: string | null;
                last_access: "datetime" | null;
                last_page: string | null;
                provider: string;
                external_identifier: string | null;
                auth_data: Record<string, any> | null;
                email_notifications: boolean | null;
            }> | null;
        }> | null;
    }>[] | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_activity", {
    id: number;
    action: string;
    user: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    timestamp: "datetime";
    ip: string | null;
    user_agent: string | null;
    collection: string; /**
     * Returns a list of activity actions.
     * @param query The query parameters
     * @returns An array of up to limit activity objects. If no items are available, data will be an empty array.
     */
    item: string;
    comment: string | null;
    origin: string | null;
    revisions: number[] | MergeCoreCollection<Schema, "directus_revisions", {
        id: number;
        activity: number | MergeCoreCollection<Schema, "directus_activity", any>;
        collection: string;
        item: string;
        data: Record<string, any> | null;
        delta: Record<string, any> | null;
        parent: number | MergeCoreCollection<Schema, "directus_revisions", any> | null;
        version: string | MergeCoreCollection<Schema, "directus_versions", {
            id: string;
            key: string;
            name: string | null;
            collection: string | DirectusCollection<Schema>;
            item: string;
            hash: string;
            date_created: "datetime" | null;
            /**
             * Returns a list of activity actions.
             * @param query The query parameters
             * @returns An array of up to limit activity objects. If no items are available, data will be an empty array.
             */
            date_updated: "datetime" | null;
            user_created: string | MergeCoreCollection<Schema, "directus_users", {
                id: string;
                first_name: string | null;
                last_name: string | null;
                email: string | null;
                password: string | null;
                location: string | null;
                title: string | null;
                description: string | null;
                tags: string[] | null;
                avatar: string | MergeCoreCollection<Schema, "directus_files", {
                    id: string;
                    storage: string;
                    filename_disk: string | null;
                    filename_download: string;
                    title: string | null;
                    type: string | null;
                    folder: string | MergeCoreCollection<Schema, "directus_folders", {
                        id: string;
                        name: string;
                        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                    }> | null;
                    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    uploaded_on: "datetime";
                    modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    modified_on: "datetime";
                    charset: string | null;
                    filesize: string | null;
                    width: number | null;
                    height: number | null;
                    duration: number | null;
                    embed: unknown;
                    description: string | null;
                    location: string | null;
                    tags: string[] | null;
                    metadata: Record<string, any> | null;
                }> | null;
                language: string | null;
                theme: string | null;
                tfa_secret: string | null;
                status: string;
                role: string | MergeCoreCollection<Schema, "directus_roles", {
                    id: string;
                    name: string;
                    icon: string;
                    description: string | null;
                    ip_access: string | null;
                    enforce_tfa: boolean;
                    admin_access: boolean;
                    app_access: boolean;
                }> | null;
                token: string | null;
                last_access: "datetime" | null;
                last_page: string | null;
                provider: string;
                external_identifier: string | null;
                auth_data: Record<string, any> | null;
                email_notifications: boolean | null;
            }> | null;
            user_updated: string | MergeCoreCollection<Schema, "directus_users", {
                id: string;
                first_name: string | null;
                last_name: string | null;
                email: string | null;
                password: string | null;
                location: string | null;
                title: string | null;
                description: string | null;
                tags: string[] | null;
                avatar: string | MergeCoreCollection<Schema, "directus_files", {
                    id: string;
                    storage: string;
                    filename_disk: string | null;
                    filename_download: string;
                    title: string | null;
                    type: string | null;
                    folder: string | MergeCoreCollection<Schema, "directus_folders", {
                        id: string;
                        name: string;
                        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                    }> | null;
                    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    uploaded_on: "datetime";
                    modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    modified_on: "datetime";
                    charset: string | null;
                    filesize: string | null;
                    width: number | null;
                    height: number | null;
                    duration: number | null;
                    embed: unknown;
                    description: string | null;
                    location: string | null;
                    tags: string[] | null;
                    metadata: Record<string, any> | null;
                }> | null;
                language: string | null;
                theme: string | null;
                tfa_secret: string | null;
                status: string;
                role: string | MergeCoreCollection<Schema, "directus_roles", {
                    id: string;
                    name: string;
                    icon: string;
                    description: string | null;
                    ip_access: string | null;
                    enforce_tfa: boolean;
                    admin_access: boolean;
                    app_access: boolean;
                }> | null;
                token: string | null;
                last_access: "datetime" | null;
                last_page: string | null;
                provider: string;
                external_identifier: string | null;
                auth_data: Record<string, any> | null;
                email_notifications: boolean | null;
            }> | null;
        }> | null;
    }>[] | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_activity", {
    id: number;
    action: string;
    user: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    timestamp: "datetime";
    ip: string | null;
    user_agent: string | null;
    collection: string; /**
     * Returns a list of activity actions.
     * @param query The query parameters
     * @returns An array of up to limit activity objects. If no items are available, data will be an empty array.
     */
    item: string;
    comment: string | null;
    origin: string | null;
    revisions: number[] | MergeCoreCollection<Schema, "directus_revisions", {
        id: number;
        activity: number | MergeCoreCollection<Schema, "directus_activity", any>;
        collection: string;
        item: string;
        data: Record<string, any> | null;
        delta: Record<string, any> | null;
        parent: number | MergeCoreCollection<Schema, "directus_revisions", any> | null;
        version: string | MergeCoreCollection<Schema, "directus_versions", {
            id: string;
            key: string;
            name: string | null;
            collection: string | DirectusCollection<Schema>;
            item: string;
            hash: string;
            date_created: "datetime" | null;
            /**
             * Returns a list of activity actions.
             * @param query The query parameters
             * @returns An array of up to limit activity objects. If no items are available, data will be an empty array.
             */
            date_updated: "datetime" | null;
            user_created: string | MergeCoreCollection<Schema, "directus_users", {
                id: string;
                first_name: string | null;
                last_name: string | null;
                email: string | null;
                password: string | null;
                location: string | null;
                title: string | null;
                description: string | null;
                tags: string[] | null;
                avatar: string | MergeCoreCollection<Schema, "directus_files", {
                    id: string;
                    storage: string;
                    filename_disk: string | null;
                    filename_download: string;
                    title: string | null;
                    type: string | null;
                    folder: string | MergeCoreCollection<Schema, "directus_folders", {
                        id: string;
                        name: string;
                        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                    }> | null;
                    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    uploaded_on: "datetime";
                    modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    modified_on: "datetime";
                    charset: string | null;
                    filesize: string | null;
                    width: number | null;
                    height: number | null;
                    duration: number | null;
                    embed: unknown;
                    description: string | null;
                    location: string | null;
                    tags: string[] | null;
                    metadata: Record<string, any> | null;
                }> | null;
                language: string | null;
                theme: string | null;
                tfa_secret: string | null;
                status: string;
                role: string | MergeCoreCollection<Schema, "directus_roles", {
                    id: string;
                    name: string;
                    icon: string;
                    description: string | null;
                    ip_access: string | null;
                    enforce_tfa: boolean;
                    admin_access: boolean;
                    app_access: boolean;
                }> | null;
                token: string | null;
                last_access: "datetime" | null;
                last_page: string | null;
                provider: string;
                external_identifier: string | null;
                auth_data: Record<string, any> | null;
                email_notifications: boolean | null;
            }> | null;
            user_updated: string | MergeCoreCollection<Schema, "directus_users", {
                id: string;
                first_name: string | null;
                last_name: string | null;
                email: string | null;
                password: string | null;
                location: string | null;
                title: string | null;
                description: string | null;
                tags: string[] | null;
                avatar: string | MergeCoreCollection<Schema, "directus_files", {
                    id: string;
                    storage: string;
                    filename_disk: string | null;
                    filename_download: string;
                    title: string | null;
                    type: string | null;
                    folder: string | MergeCoreCollection<Schema, "directus_folders", {
                        id: string;
                        name: string;
                        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                    }> | null;
                    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    uploaded_on: "datetime";
                    modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    modified_on: "datetime";
                    charset: string | null;
                    filesize: string | null;
                    width: number | null;
                    height: number | null;
                    duration: number | null;
                    embed: unknown;
                    description: string | null;
                    location: string | null;
                    tags: string[] | null;
                    metadata: Record<string, any> | null;
                }> | null;
                language: string | null;
                theme: string | null;
                tfa_secret: string | null;
                status: string;
                role: string | MergeCoreCollection<Schema, "directus_roles", {
                    id: string;
                    name: string;
                    icon: string;
                    description: string | null;
                    ip_access: string | null;
                    enforce_tfa: boolean;
                    admin_access: boolean;
                    app_access: boolean;
                }> | null;
                token: string | null;
                last_access: "datetime" | null;
                last_page: string | null;
                provider: string;
                external_identifier: string | null;
                auth_data: Record<string, any> | null;
                email_notifications: boolean | null;
            }> | null;
        }> | null;
    }>[] | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_activity", {
    id: number;
    action: string;
    user: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    timestamp: "datetime";
    ip: string | null;
    user_agent: string | null;
    collection: string; /**
     * Returns a list of activity actions.
     * @param query The query parameters
     * @returns An array of up to limit activity objects. If no items are available, data will be an empty array.
     */
    item: string;
    comment: string | null;
    origin: string | null;
    revisions: number[] | MergeCoreCollection<Schema, "directus_revisions", {
        id: number;
        activity: number | MergeCoreCollection<Schema, "directus_activity", any>;
        collection: string;
        item: string;
        data: Record<string, any> | null;
        delta: Record<string, any> | null;
        parent: number | MergeCoreCollection<Schema, "directus_revisions", any> | null;
        version: string | MergeCoreCollection<Schema, "directus_versions", {
            id: string;
            key: string;
            name: string | null;
            collection: string | DirectusCollection<Schema>;
            item: string;
            hash: string;
            date_created: "datetime" | null;
            /**
             * Returns a list of activity actions.
             * @param query The query parameters
             * @returns An array of up to limit activity objects. If no items are available, data will be an empty array.
             */
            date_updated: "datetime" | null;
            user_created: string | MergeCoreCollection<Schema, "directus_users", {
                id: string;
                first_name: string | null;
                last_name: string | null;
                email: string | null;
                password: string | null;
                location: string | null;
                title: string | null;
                description: string | null;
                tags: string[] | null;
                avatar: string | MergeCoreCollection<Schema, "directus_files", {
                    id: string;
                    storage: string;
                    filename_disk: string | null;
                    filename_download: string;
                    title: string | null;
                    type: string | null;
                    folder: string | MergeCoreCollection<Schema, "directus_folders", {
                        id: string;
                        name: string;
                        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                    }> | null;
                    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    uploaded_on: "datetime";
                    modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    modified_on: "datetime";
                    charset: string | null;
                    filesize: string | null;
                    width: number | null;
                    height: number | null;
                    duration: number | null;
                    embed: unknown;
                    description: string | null;
                    location: string | null;
                    tags: string[] | null;
                    metadata: Record<string, any> | null;
                }> | null;
                language: string | null;
                theme: string | null;
                tfa_secret: string | null;
                status: string;
                role: string | MergeCoreCollection<Schema, "directus_roles", {
                    id: string;
                    name: string;
                    icon: string;
                    description: string | null;
                    ip_access: string | null;
                    enforce_tfa: boolean;
                    admin_access: boolean;
                    app_access: boolean;
                }> | null;
                token: string | null;
                last_access: "datetime" | null;
                last_page: string | null;
                provider: string;
                external_identifier: string | null;
                auth_data: Record<string, any> | null;
                email_notifications: boolean | null;
            }> | null;
            user_updated: string | MergeCoreCollection<Schema, "directus_users", {
                id: string;
                first_name: string | null;
                last_name: string | null;
                email: string | null;
                password: string | null;
                location: string | null;
                title: string | null;
                description: string | null;
                tags: string[] | null;
                avatar: string | MergeCoreCollection<Schema, "directus_files", {
                    id: string;
                    storage: string;
                    filename_disk: string | null;
                    filename_download: string;
                    title: string | null;
                    type: string | null;
                    folder: string | MergeCoreCollection<Schema, "directus_folders", {
                        id: string;
                        name: string;
                        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                    }> | null;
                    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    uploaded_on: "datetime";
                    modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    modified_on: "datetime";
                    charset: string | null;
                    filesize: string | null;
                    width: number | null;
                    height: number | null;
                    duration: number | null;
                    embed: unknown;
                    description: string | null;
                    location: string | null;
                    tags: string[] | null;
                    metadata: Record<string, any> | null;
                }> | null;
                language: string | null;
                theme: string | null;
                tfa_secret: string | null;
                status: string;
                role: string | MergeCoreCollection<Schema, "directus_roles", {
                    id: string;
                    name: string;
                    icon: string;
                    description: string | null;
                    ip_access: string | null;
                    enforce_tfa: boolean;
                    admin_access: boolean;
                    app_access: boolean;
                }> | null;
                token: string | null;
                last_access: "datetime" | null;
                last_page: string | null;
                provider: string;
                external_identifier: string | null;
                auth_data: Record<string, any> | null;
                email_notifications: boolean | null;
            }> | null;
        }> | null;
    }>[] | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_activity", {
    id: number;
    action: string;
    user: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    timestamp: "datetime";
    ip: string | null;
    user_agent: string | null;
    collection: string; /**
     * Returns a list of activity actions.
     * @param query The query parameters
     * @returns An array of up to limit activity objects. If no items are available, data will be an empty array.
     */
    item: string;
    comment: string | null;
    origin: string | null;
    revisions: number[] | MergeCoreCollection<Schema, "directus_revisions", {
        id: number;
        activity: number | MergeCoreCollection<Schema, "directus_activity", any>;
        collection: string;
        item: string;
        data: Record<string, any> | null;
        delta: Record<string, any> | null;
        parent: number | MergeCoreCollection<Schema, "directus_revisions", any> | null;
        version: string | MergeCoreCollection<Schema, "directus_versions", {
            id: string;
            key: string;
            name: string | null;
            collection: string | DirectusCollection<Schema>;
            item: string;
            hash: string;
            date_created: "datetime" | null;
            /**
             * Returns a list of activity actions.
             * @param query The query parameters
             * @returns An array of up to limit activity objects. If no items are available, data will be an empty array.
             */
            date_updated: "datetime" | null;
            user_created: string | MergeCoreCollection<Schema, "directus_users", {
                id: string;
                first_name: string | null;
                last_name: string | null;
                email: string | null;
                password: string | null;
                location: string | null;
                title: string | null;
                description: string | null;
                tags: string[] | null;
                avatar: string | MergeCoreCollection<Schema, "directus_files", {
                    id: string;
                    storage: string;
                    filename_disk: string | null;
                    filename_download: string;
                    title: string | null;
                    type: string | null;
                    folder: string | MergeCoreCollection<Schema, "directus_folders", {
                        id: string;
                        name: string;
                        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                    }> | null;
                    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    uploaded_on: "datetime";
                    modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    modified_on: "datetime";
                    charset: string | null;
                    filesize: string | null;
                    width: number | null;
                    height: number | null;
                    duration: number | null;
                    embed: unknown;
                    description: string | null;
                    location: string | null;
                    tags: string[] | null;
                    metadata: Record<string, any> | null;
                }> | null;
                language: string | null;
                theme: string | null;
                tfa_secret: string | null;
                status: string;
                role: string | MergeCoreCollection<Schema, "directus_roles", {
                    id: string;
                    name: string;
                    icon: string;
                    description: string | null;
                    ip_access: string | null;
                    enforce_tfa: boolean;
                    admin_access: boolean;
                    app_access: boolean;
                }> | null;
                token: string | null;
                last_access: "datetime" | null;
                last_page: string | null;
                provider: string;
                external_identifier: string | null;
                auth_data: Record<string, any> | null;
                email_notifications: boolean | null;
            }> | null;
            user_updated: string | MergeCoreCollection<Schema, "directus_users", {
                id: string;
                first_name: string | null;
                last_name: string | null;
                email: string | null;
                password: string | null;
                location: string | null;
                title: string | null;
                description: string | null;
                tags: string[] | null;
                avatar: string | MergeCoreCollection<Schema, "directus_files", {
                    id: string;
                    storage: string;
                    filename_disk: string | null;
                    filename_download: string;
                    title: string | null;
                    type: string | null;
                    folder: string | MergeCoreCollection<Schema, "directus_folders", {
                        id: string;
                        name: string;
                        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                    }> | null;
                    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    uploaded_on: "datetime";
                    modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    modified_on: "datetime";
                    charset: string | null;
                    filesize: string | null;
                    width: number | null;
                    height: number | null;
                    duration: number | null;
                    embed: unknown;
                    description: string | null;
                    location: string | null;
                    tags: string[] | null;
                    metadata: Record<string, any> | null;
                }> | null;
                language: string | null;
                theme: string | null;
                tfa_secret: string | null;
                status: string;
                role: string | MergeCoreCollection<Schema, "directus_roles", {
                    id: string;
                    name: string;
                    icon: string;
                    description: string | null;
                    ip_access: string | null;
                    enforce_tfa: boolean;
                    admin_access: boolean;
                    app_access: boolean;
                }> | null;
                token: string | null;
                last_access: "datetime" | null;
                last_page: string | null;
                provider: string;
                external_identifier: string | null;
                auth_data: Record<string, any> | null;
                email_notifications: boolean | null;
            }> | null;
        }> | null;
    }>[] | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_activity", {
    id: number;
    action: string;
    user: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    timestamp: "datetime";
    ip: string | null;
    user_agent: string | null;
    collection: string; /**
     * Returns a list of activity actions.
     * @param query The query parameters
     * @returns An array of up to limit activity objects. If no items are available, data will be an empty array.
     */
    item: string;
    comment: string | null;
    origin: string | null;
    revisions: number[] | MergeCoreCollection<Schema, "directus_revisions", {
        id: number;
        activity: number | MergeCoreCollection<Schema, "directus_activity", any>;
        collection: string;
        item: string;
        data: Record<string, any> | null;
        delta: Record<string, any> | null;
        parent: number | MergeCoreCollection<Schema, "directus_revisions", any> | null;
        version: string | MergeCoreCollection<Schema, "directus_versions", {
            id: string;
            key: string;
            name: string | null;
            collection: string | DirectusCollection<Schema>;
            item: string;
            hash: string;
            date_created: "datetime" | null;
            /**
             * Returns a list of activity actions.
             * @param query The query parameters
             * @returns An array of up to limit activity objects. If no items are available, data will be an empty array.
             */
            date_updated: "datetime" | null;
            user_created: string | MergeCoreCollection<Schema, "directus_users", {
                id: string;
                first_name: string | null;
                last_name: string | null;
                email: string | null;
                password: string | null;
                location: string | null;
                title: string | null;
                description: string | null;
                tags: string[] | null;
                avatar: string | MergeCoreCollection<Schema, "directus_files", {
                    id: string;
                    storage: string;
                    filename_disk: string | null;
                    filename_download: string;
                    title: string | null;
                    type: string | null;
                    folder: string | MergeCoreCollection<Schema, "directus_folders", {
                        id: string;
                        name: string;
                        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                    }> | null;
                    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    uploaded_on: "datetime";
                    modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    modified_on: "datetime";
                    charset: string | null;
                    filesize: string | null;
                    width: number | null;
                    height: number | null;
                    duration: number | null;
                    embed: unknown;
                    description: string | null;
                    location: string | null;
                    tags: string[] | null;
                    metadata: Record<string, any> | null;
                }> | null;
                language: string | null;
                theme: string | null;
                tfa_secret: string | null;
                status: string;
                role: string | MergeCoreCollection<Schema, "directus_roles", {
                    id: string;
                    name: string;
                    icon: string;
                    description: string | null;
                    ip_access: string | null;
                    enforce_tfa: boolean;
                    admin_access: boolean;
                    app_access: boolean;
                }> | null;
                token: string | null;
                last_access: "datetime" | null;
                last_page: string | null;
                provider: string;
                external_identifier: string | null;
                auth_data: Record<string, any> | null;
                email_notifications: boolean | null;
            }> | null;
            user_updated: string | MergeCoreCollection<Schema, "directus_users", {
                id: string;
                first_name: string | null;
                last_name: string | null;
                email: string | null;
                password: string | null;
                location: string | null;
                title: string | null;
                description: string | null;
                tags: string[] | null;
                avatar: string | MergeCoreCollection<Schema, "directus_files", {
                    id: string;
                    storage: string;
                    filename_disk: string | null;
                    filename_download: string;
                    title: string | null;
                    type: string | null;
                    folder: string | MergeCoreCollection<Schema, "directus_folders", {
                        id: string;
                        name: string;
                        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                    }> | null;
                    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    uploaded_on: "datetime";
                    modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    modified_on: "datetime";
                    charset: string | null;
                    filesize: string | null;
                    width: number | null;
                    height: number | null;
                    duration: number | null;
                    embed: unknown;
                    description: string | null;
                    location: string | null;
                    tags: string[] | null;
                    metadata: Record<string, any> | null;
                }> | null;
                language: string | null;
                theme: string | null;
                tfa_secret: string | null;
                status: string;
                role: string | MergeCoreCollection<Schema, "directus_roles", {
                    id: string;
                    name: string;
                    icon: string;
                    description: string | null;
                    ip_access: string | null;
                    enforce_tfa: boolean;
                    admin_access: boolean;
                    app_access: boolean;
                }> | null;
                token: string | null;
                last_access: "datetime" | null;
                last_page: string | null;
                provider: string;
                external_identifier: string | null;
                auth_data: Record<string, any> | null;
                email_notifications: boolean | null;
            }> | null;
        }> | null;
    }>[] | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>[], Schema>;
/**
 * Returns a single activity action by primary key.
 * @param key The primary key of the activity
 * @param query The query parameters
 * @returns Returns an activity object if a valid identifier was provided.
 * @throws Will throw if key is empty
 */
declare const readActivity: <Schema extends object, const TQuery extends Query<Schema, DirectusActivity<Schema>>>(key: DirectusActivity<Schema>["id"], query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_activity", {
    id: number;
    action: string;
    user: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    timestamp: "datetime";
    ip: string | null;
    user_agent: string | null;
    collection: string; /**
     * Returns a list of activity actions.
     * @param query The query parameters
     * @returns An array of up to limit activity objects. If no items are available, data will be an empty array.
     */
    item: string;
    comment: string | null;
    origin: string | null;
    revisions: number[] | MergeCoreCollection<Schema, "directus_revisions", {
        id: number;
        activity: number | MergeCoreCollection<Schema, "directus_activity", any>;
        collection: string;
        item: string;
        data: Record<string, any> | null;
        delta: Record<string, any> | null;
        parent: number | MergeCoreCollection<Schema, "directus_revisions", any> | null;
        version: string | MergeCoreCollection<Schema, "directus_versions", {
            id: string;
            key: string;
            name: string | null;
            collection: string | DirectusCollection<Schema>;
            item: string;
            hash: string;
            date_created: "datetime" | null;
            /**
             * Returns a list of activity actions.
             * @param query The query parameters
             * @returns An array of up to limit activity objects. If no items are available, data will be an empty array.
             */
            date_updated: "datetime" | null;
            user_created: string | MergeCoreCollection<Schema, "directus_users", {
                id: string;
                first_name: string | null;
                last_name: string | null;
                email: string | null;
                password: string | null;
                location: string | null;
                title: string | null;
                description: string | null;
                tags: string[] | null;
                avatar: string | MergeCoreCollection<Schema, "directus_files", {
                    id: string;
                    storage: string;
                    filename_disk: string | null;
                    filename_download: string;
                    title: string | null;
                    type: string | null;
                    folder: string | MergeCoreCollection<Schema, "directus_folders", {
                        id: string;
                        name: string;
                        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                    }> | null;
                    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    uploaded_on: "datetime";
                    modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    modified_on: "datetime";
                    charset: string | null;
                    filesize: string | null;
                    width: number | null;
                    height: number | null;
                    duration: number | null;
                    embed: unknown;
                    description: string | null;
                    location: string | null;
                    tags: string[] | null;
                    metadata: Record<string, any> | null;
                }> | null;
                language: string | null;
                theme: string | null;
                tfa_secret: string | null;
                status: string;
                role: string | MergeCoreCollection<Schema, "directus_roles", {
                    id: string;
                    name: string;
                    icon: string;
                    description: string | null;
                    ip_access: string | null;
                    enforce_tfa: boolean;
                    admin_access: boolean;
                    app_access: boolean;
                }> | null;
                token: string | null;
                last_access: "datetime" | null;
                last_page: string | null;
                provider: string;
                external_identifier: string | null;
                auth_data: Record<string, any> | null;
                email_notifications: boolean | null;
            }> | null;
            user_updated: string | MergeCoreCollection<Schema, "directus_users", {
                id: string;
                first_name: string | null;
                last_name: string | null;
                email: string | null;
                password: string | null;
                location: string | null;
                title: string | null;
                description: string | null;
                tags: string[] | null;
                avatar: string | MergeCoreCollection<Schema, "directus_files", {
                    id: string;
                    storage: string;
                    filename_disk: string | null;
                    filename_download: string;
                    title: string | null;
                    type: string | null;
                    folder: string | MergeCoreCollection<Schema, "directus_folders", {
                        id: string;
                        name: string;
                        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                    }> | null;
                    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    uploaded_on: "datetime";
                    modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    modified_on: "datetime";
                    charset: string | null;
                    filesize: string | null;
                    width: number | null;
                    height: number | null;
                    duration: number | null;
                    embed: unknown;
                    description: string | null;
                    location: string | null;
                    tags: string[] | null;
                    metadata: Record<string, any> | null;
                }> | null;
                language: string | null;
                theme: string | null;
                tfa_secret: string | null;
                status: string;
                role: string | MergeCoreCollection<Schema, "directus_roles", {
                    id: string;
                    name: string;
                    icon: string;
                    description: string | null;
                    ip_access: string | null;
                    enforce_tfa: boolean;
                    admin_access: boolean;
                    app_access: boolean;
                }> | null;
                token: string | null;
                last_access: "datetime" | null;
                last_page: string | null;
                provider: string;
                external_identifier: string | null;
                auth_data: Record<string, any> | null;
                email_notifications: boolean | null;
            }> | null;
        }> | null;
    }>[] | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_activity", {
    id: number;
    action: string;
    user: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    timestamp: "datetime";
    ip: string | null;
    user_agent: string | null;
    collection: string; /**
     * Returns a list of activity actions.
     * @param query The query parameters
     * @returns An array of up to limit activity objects. If no items are available, data will be an empty array.
     */
    item: string;
    comment: string | null;
    origin: string | null;
    revisions: number[] | MergeCoreCollection<Schema, "directus_revisions", {
        id: number;
        activity: number | MergeCoreCollection<Schema, "directus_activity", any>;
        collection: string;
        item: string;
        data: Record<string, any> | null;
        delta: Record<string, any> | null;
        parent: number | MergeCoreCollection<Schema, "directus_revisions", any> | null;
        version: string | MergeCoreCollection<Schema, "directus_versions", {
            id: string;
            key: string;
            name: string | null;
            collection: string | DirectusCollection<Schema>;
            item: string;
            hash: string;
            date_created: "datetime" | null;
            /**
             * Returns a list of activity actions.
             * @param query The query parameters
             * @returns An array of up to limit activity objects. If no items are available, data will be an empty array.
             */
            date_updated: "datetime" | null;
            user_created: string | MergeCoreCollection<Schema, "directus_users", {
                id: string;
                first_name: string | null;
                last_name: string | null;
                email: string | null;
                password: string | null;
                location: string | null;
                title: string | null;
                description: string | null;
                tags: string[] | null;
                avatar: string | MergeCoreCollection<Schema, "directus_files", {
                    id: string;
                    storage: string;
                    filename_disk: string | null;
                    filename_download: string;
                    title: string | null;
                    type: string | null;
                    folder: string | MergeCoreCollection<Schema, "directus_folders", {
                        id: string;
                        name: string;
                        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                    }> | null;
                    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    uploaded_on: "datetime";
                    modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    modified_on: "datetime";
                    charset: string | null;
                    filesize: string | null;
                    width: number | null;
                    height: number | null;
                    duration: number | null;
                    embed: unknown;
                    description: string | null;
                    location: string | null;
                    tags: string[] | null;
                    metadata: Record<string, any> | null;
                }> | null;
                language: string | null;
                theme: string | null;
                tfa_secret: string | null;
                status: string;
                role: string | MergeCoreCollection<Schema, "directus_roles", {
                    id: string;
                    name: string;
                    icon: string;
                    description: string | null;
                    ip_access: string | null;
                    enforce_tfa: boolean;
                    admin_access: boolean;
                    app_access: boolean;
                }> | null;
                token: string | null;
                last_access: "datetime" | null;
                last_page: string | null;
                provider: string;
                external_identifier: string | null;
                auth_data: Record<string, any> | null;
                email_notifications: boolean | null;
            }> | null;
            user_updated: string | MergeCoreCollection<Schema, "directus_users", {
                id: string;
                first_name: string | null;
                last_name: string | null;
                email: string | null;
                password: string | null;
                location: string | null;
                title: string | null;
                description: string | null;
                tags: string[] | null;
                avatar: string | MergeCoreCollection<Schema, "directus_files", {
                    id: string;
                    storage: string;
                    filename_disk: string | null;
                    filename_download: string;
                    title: string | null;
                    type: string | null;
                    folder: string | MergeCoreCollection<Schema, "directus_folders", {
                        id: string;
                        name: string;
                        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                    }> | null;
                    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    uploaded_on: "datetime";
                    modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    modified_on: "datetime";
                    charset: string | null;
                    filesize: string | null;
                    width: number | null;
                    height: number | null;
                    duration: number | null;
                    embed: unknown;
                    description: string | null;
                    location: string | null;
                    tags: string[] | null;
                    metadata: Record<string, any> | null;
                }> | null;
                language: string | null;
                theme: string | null;
                tfa_secret: string | null;
                status: string;
                role: string | MergeCoreCollection<Schema, "directus_roles", {
                    id: string;
                    name: string;
                    icon: string;
                    description: string | null;
                    ip_access: string | null;
                    enforce_tfa: boolean;
                    admin_access: boolean;
                    app_access: boolean;
                }> | null;
                token: string | null;
                last_access: "datetime" | null;
                last_page: string | null;
                provider: string;
                external_identifier: string | null;
                auth_data: Record<string, any> | null;
                email_notifications: boolean | null;
            }> | null;
        }> | null;
    }>[] | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_activity", {
    id: number;
    action: string;
    user: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    timestamp: "datetime";
    ip: string | null;
    user_agent: string | null;
    collection: string; /**
     * Returns a list of activity actions.
     * @param query The query parameters
     * @returns An array of up to limit activity objects. If no items are available, data will be an empty array.
     */
    item: string;
    comment: string | null;
    origin: string | null;
    revisions: number[] | MergeCoreCollection<Schema, "directus_revisions", {
        id: number;
        activity: number | MergeCoreCollection<Schema, "directus_activity", any>;
        collection: string;
        item: string;
        data: Record<string, any> | null;
        delta: Record<string, any> | null;
        parent: number | MergeCoreCollection<Schema, "directus_revisions", any> | null;
        version: string | MergeCoreCollection<Schema, "directus_versions", {
            id: string;
            key: string;
            name: string | null;
            collection: string | DirectusCollection<Schema>;
            item: string;
            hash: string;
            date_created: "datetime" | null;
            /**
             * Returns a list of activity actions.
             * @param query The query parameters
             * @returns An array of up to limit activity objects. If no items are available, data will be an empty array.
             */
            date_updated: "datetime" | null;
            user_created: string | MergeCoreCollection<Schema, "directus_users", {
                id: string;
                first_name: string | null;
                last_name: string | null;
                email: string | null;
                password: string | null;
                location: string | null;
                title: string | null;
                description: string | null;
                tags: string[] | null;
                avatar: string | MergeCoreCollection<Schema, "directus_files", {
                    id: string;
                    storage: string;
                    filename_disk: string | null;
                    filename_download: string;
                    title: string | null;
                    type: string | null;
                    folder: string | MergeCoreCollection<Schema, "directus_folders", {
                        id: string;
                        name: string;
                        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                    }> | null;
                    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    uploaded_on: "datetime";
                    modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    modified_on: "datetime";
                    charset: string | null;
                    filesize: string | null;
                    width: number | null;
                    height: number | null;
                    duration: number | null;
                    embed: unknown;
                    description: string | null;
                    location: string | null;
                    tags: string[] | null;
                    metadata: Record<string, any> | null;
                }> | null;
                language: string | null;
                theme: string | null;
                tfa_secret: string | null;
                status: string;
                role: string | MergeCoreCollection<Schema, "directus_roles", {
                    id: string;
                    name: string;
                    icon: string;
                    description: string | null;
                    ip_access: string | null;
                    enforce_tfa: boolean;
                    admin_access: boolean;
                    app_access: boolean;
                }> | null;
                token: string | null;
                last_access: "datetime" | null;
                last_page: string | null;
                provider: string;
                external_identifier: string | null;
                auth_data: Record<string, any> | null;
                email_notifications: boolean | null;
            }> | null;
            user_updated: string | MergeCoreCollection<Schema, "directus_users", {
                id: string;
                first_name: string | null;
                last_name: string | null;
                email: string | null;
                password: string | null;
                location: string | null;
                title: string | null;
                description: string | null;
                tags: string[] | null;
                avatar: string | MergeCoreCollection<Schema, "directus_files", {
                    id: string;
                    storage: string;
                    filename_disk: string | null;
                    filename_download: string;
                    title: string | null;
                    type: string | null;
                    folder: string | MergeCoreCollection<Schema, "directus_folders", {
                        id: string;
                        name: string;
                        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                    }> | null;
                    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    uploaded_on: "datetime";
                    modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    modified_on: "datetime";
                    charset: string | null;
                    filesize: string | null;
                    width: number | null;
                    height: number | null;
                    duration: number | null;
                    embed: unknown;
                    description: string | null;
                    location: string | null;
                    tags: string[] | null;
                    metadata: Record<string, any> | null;
                }> | null;
                language: string | null;
                theme: string | null;
                tfa_secret: string | null;
                status: string;
                role: string | MergeCoreCollection<Schema, "directus_roles", {
                    id: string;
                    name: string;
                    icon: string;
                    description: string | null;
                    ip_access: string | null;
                    enforce_tfa: boolean;
                    admin_access: boolean;
                    app_access: boolean;
                }> | null;
                token: string | null;
                last_access: "datetime" | null;
                last_page: string | null;
                provider: string;
                external_identifier: string | null;
                auth_data: Record<string, any> | null;
                email_notifications: boolean | null;
            }> | null;
        }> | null;
    }>[] | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_activity", {
    id: number;
    action: string;
    user: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    timestamp: "datetime";
    ip: string | null;
    user_agent: string | null;
    collection: string; /**
     * Returns a list of activity actions.
     * @param query The query parameters
     * @returns An array of up to limit activity objects. If no items are available, data will be an empty array.
     */
    item: string;
    comment: string | null;
    origin: string | null;
    revisions: number[] | MergeCoreCollection<Schema, "directus_revisions", {
        id: number;
        activity: number | MergeCoreCollection<Schema, "directus_activity", any>;
        collection: string;
        item: string;
        data: Record<string, any> | null;
        delta: Record<string, any> | null;
        parent: number | MergeCoreCollection<Schema, "directus_revisions", any> | null;
        version: string | MergeCoreCollection<Schema, "directus_versions", {
            id: string;
            key: string;
            name: string | null;
            collection: string | DirectusCollection<Schema>;
            item: string;
            hash: string;
            date_created: "datetime" | null;
            /**
             * Returns a list of activity actions.
             * @param query The query parameters
             * @returns An array of up to limit activity objects. If no items are available, data will be an empty array.
             */
            date_updated: "datetime" | null;
            user_created: string | MergeCoreCollection<Schema, "directus_users", {
                id: string;
                first_name: string | null;
                last_name: string | null;
                email: string | null;
                password: string | null;
                location: string | null;
                title: string | null;
                description: string | null;
                tags: string[] | null;
                avatar: string | MergeCoreCollection<Schema, "directus_files", {
                    id: string;
                    storage: string;
                    filename_disk: string | null;
                    filename_download: string;
                    title: string | null;
                    type: string | null;
                    folder: string | MergeCoreCollection<Schema, "directus_folders", {
                        id: string;
                        name: string;
                        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                    }> | null;
                    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    uploaded_on: "datetime";
                    modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    modified_on: "datetime";
                    charset: string | null;
                    filesize: string | null;
                    width: number | null;
                    height: number | null;
                    duration: number | null;
                    embed: unknown;
                    description: string | null;
                    location: string | null;
                    tags: string[] | null;
                    metadata: Record<string, any> | null;
                }> | null;
                language: string | null;
                theme: string | null;
                tfa_secret: string | null;
                status: string;
                role: string | MergeCoreCollection<Schema, "directus_roles", {
                    id: string;
                    name: string;
                    icon: string;
                    description: string | null;
                    ip_access: string | null;
                    enforce_tfa: boolean;
                    admin_access: boolean;
                    app_access: boolean;
                }> | null;
                token: string | null;
                last_access: "datetime" | null;
                last_page: string | null;
                provider: string;
                external_identifier: string | null;
                auth_data: Record<string, any> | null;
                email_notifications: boolean | null;
            }> | null;
            user_updated: string | MergeCoreCollection<Schema, "directus_users", {
                id: string;
                first_name: string | null;
                last_name: string | null;
                email: string | null;
                password: string | null;
                location: string | null;
                title: string | null;
                description: string | null;
                tags: string[] | null;
                avatar: string | MergeCoreCollection<Schema, "directus_files", {
                    id: string;
                    storage: string;
                    filename_disk: string | null;
                    filename_download: string;
                    title: string | null;
                    type: string | null;
                    folder: string | MergeCoreCollection<Schema, "directus_folders", {
                        id: string;
                        name: string;
                        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                    }> | null;
                    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    uploaded_on: "datetime";
                    modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    modified_on: "datetime";
                    charset: string | null;
                    filesize: string | null;
                    width: number | null;
                    height: number | null;
                    duration: number | null;
                    embed: unknown;
                    description: string | null;
                    location: string | null;
                    tags: string[] | null;
                    metadata: Record<string, any> | null;
                }> | null;
                language: string | null;
                theme: string | null;
                tfa_secret: string | null;
                status: string;
                role: string | MergeCoreCollection<Schema, "directus_roles", {
                    id: string;
                    name: string;
                    icon: string;
                    description: string | null;
                    ip_access: string | null;
                    enforce_tfa: boolean;
                    admin_access: boolean;
                    app_access: boolean;
                }> | null;
                token: string | null;
                last_access: "datetime" | null;
                last_page: string | null;
                provider: string;
                external_identifier: string | null;
                auth_data: Record<string, any> | null;
                email_notifications: boolean | null;
            }> | null;
        }> | null;
    }>[] | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_activity", {
    id: number;
    action: string;
    user: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    timestamp: "datetime";
    ip: string | null;
    user_agent: string | null;
    collection: string; /**
     * Returns a list of activity actions.
     * @param query The query parameters
     * @returns An array of up to limit activity objects. If no items are available, data will be an empty array.
     */
    item: string;
    comment: string | null;
    origin: string | null;
    revisions: number[] | MergeCoreCollection<Schema, "directus_revisions", {
        id: number;
        activity: number | MergeCoreCollection<Schema, "directus_activity", any>;
        collection: string;
        item: string;
        data: Record<string, any> | null;
        delta: Record<string, any> | null;
        parent: number | MergeCoreCollection<Schema, "directus_revisions", any> | null;
        version: string | MergeCoreCollection<Schema, "directus_versions", {
            id: string;
            key: string;
            name: string | null;
            collection: string | DirectusCollection<Schema>;
            item: string;
            hash: string;
            date_created: "datetime" | null;
            /**
             * Returns a list of activity actions.
             * @param query The query parameters
             * @returns An array of up to limit activity objects. If no items are available, data will be an empty array.
             */
            date_updated: "datetime" | null;
            user_created: string | MergeCoreCollection<Schema, "directus_users", {
                id: string;
                first_name: string | null;
                last_name: string | null;
                email: string | null;
                password: string | null;
                location: string | null;
                title: string | null;
                description: string | null;
                tags: string[] | null;
                avatar: string | MergeCoreCollection<Schema, "directus_files", {
                    id: string;
                    storage: string;
                    filename_disk: string | null;
                    filename_download: string;
                    title: string | null;
                    type: string | null;
                    folder: string | MergeCoreCollection<Schema, "directus_folders", {
                        id: string;
                        name: string;
                        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                    }> | null;
                    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    uploaded_on: "datetime";
                    modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    modified_on: "datetime";
                    charset: string | null;
                    filesize: string | null;
                    width: number | null;
                    height: number | null;
                    duration: number | null;
                    embed: unknown;
                    description: string | null;
                    location: string | null;
                    tags: string[] | null;
                    metadata: Record<string, any> | null;
                }> | null;
                language: string | null;
                theme: string | null;
                tfa_secret: string | null;
                status: string;
                role: string | MergeCoreCollection<Schema, "directus_roles", {
                    id: string;
                    name: string;
                    icon: string;
                    description: string | null;
                    ip_access: string | null;
                    enforce_tfa: boolean;
                    admin_access: boolean;
                    app_access: boolean;
                }> | null;
                token: string | null;
                last_access: "datetime" | null;
                last_page: string | null;
                provider: string;
                external_identifier: string | null;
                auth_data: Record<string, any> | null;
                email_notifications: boolean | null;
            }> | null;
            user_updated: string | MergeCoreCollection<Schema, "directus_users", {
                id: string;
                first_name: string | null;
                last_name: string | null;
                email: string | null;
                password: string | null;
                location: string | null;
                title: string | null;
                description: string | null;
                tags: string[] | null;
                avatar: string | MergeCoreCollection<Schema, "directus_files", {
                    id: string;
                    storage: string;
                    filename_disk: string | null;
                    filename_download: string;
                    title: string | null;
                    type: string | null;
                    folder: string | MergeCoreCollection<Schema, "directus_folders", {
                        id: string;
                        name: string;
                        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                    }> | null;
                    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    uploaded_on: "datetime";
                    modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    modified_on: "datetime";
                    charset: string | null;
                    filesize: string | null;
                    width: number | null;
                    height: number | null;
                    duration: number | null;
                    embed: unknown;
                    description: string | null;
                    location: string | null;
                    tags: string[] | null;
                    metadata: Record<string, any> | null;
                }> | null;
                language: string | null;
                theme: string | null;
                tfa_secret: string | null;
                status: string;
                role: string | MergeCoreCollection<Schema, "directus_roles", {
                    id: string;
                    name: string;
                    icon: string;
                    description: string | null;
                    ip_access: string | null;
                    enforce_tfa: boolean;
                    admin_access: boolean;
                    app_access: boolean;
                }> | null;
                token: string | null;
                last_access: "datetime" | null;
                last_page: string | null;
                provider: string;
                external_identifier: string | null;
                auth_data: Record<string, any> | null;
                email_notifications: boolean | null;
            }> | null;
        }> | null;
    }>[] | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_activity", {
    id: number;
    action: string;
    user: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    timestamp: "datetime";
    ip: string | null;
    user_agent: string | null;
    collection: string; /**
     * Returns a list of activity actions.
     * @param query The query parameters
     * @returns An array of up to limit activity objects. If no items are available, data will be an empty array.
     */
    item: string;
    comment: string | null;
    origin: string | null;
    revisions: number[] | MergeCoreCollection<Schema, "directus_revisions", {
        id: number;
        activity: number | MergeCoreCollection<Schema, "directus_activity", any>;
        collection: string;
        item: string;
        data: Record<string, any> | null;
        delta: Record<string, any> | null;
        parent: number | MergeCoreCollection<Schema, "directus_revisions", any> | null;
        version: string | MergeCoreCollection<Schema, "directus_versions", {
            id: string;
            key: string;
            name: string | null;
            collection: string | DirectusCollection<Schema>;
            item: string;
            hash: string;
            date_created: "datetime" | null;
            /**
             * Returns a list of activity actions.
             * @param query The query parameters
             * @returns An array of up to limit activity objects. If no items are available, data will be an empty array.
             */
            date_updated: "datetime" | null;
            user_created: string | MergeCoreCollection<Schema, "directus_users", {
                id: string;
                first_name: string | null;
                last_name: string | null;
                email: string | null;
                password: string | null;
                location: string | null;
                title: string | null;
                description: string | null;
                tags: string[] | null;
                avatar: string | MergeCoreCollection<Schema, "directus_files", {
                    id: string;
                    storage: string;
                    filename_disk: string | null;
                    filename_download: string;
                    title: string | null;
                    type: string | null;
                    folder: string | MergeCoreCollection<Schema, "directus_folders", {
                        id: string;
                        name: string;
                        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                    }> | null;
                    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    uploaded_on: "datetime";
                    modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    modified_on: "datetime";
                    charset: string | null;
                    filesize: string | null;
                    width: number | null;
                    height: number | null;
                    duration: number | null;
                    embed: unknown;
                    description: string | null;
                    location: string | null;
                    tags: string[] | null;
                    metadata: Record<string, any> | null;
                }> | null;
                language: string | null;
                theme: string | null;
                tfa_secret: string | null;
                status: string;
                role: string | MergeCoreCollection<Schema, "directus_roles", {
                    id: string;
                    name: string;
                    icon: string;
                    description: string | null;
                    ip_access: string | null;
                    enforce_tfa: boolean;
                    admin_access: boolean;
                    app_access: boolean;
                }> | null;
                token: string | null;
                last_access: "datetime" | null;
                last_page: string | null;
                provider: string;
                external_identifier: string | null;
                auth_data: Record<string, any> | null;
                email_notifications: boolean | null;
            }> | null;
            user_updated: string | MergeCoreCollection<Schema, "directus_users", {
                id: string;
                first_name: string | null;
                last_name: string | null;
                email: string | null;
                password: string | null;
                location: string | null;
                title: string | null;
                description: string | null;
                tags: string[] | null;
                avatar: string | MergeCoreCollection<Schema, "directus_files", {
                    id: string;
                    storage: string;
                    filename_disk: string | null;
                    filename_download: string;
                    title: string | null;
                    type: string | null;
                    folder: string | MergeCoreCollection<Schema, "directus_folders", {
                        id: string;
                        name: string;
                        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                    }> | null;
                    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    uploaded_on: "datetime";
                    modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    modified_on: "datetime";
                    charset: string | null;
                    filesize: string | null;
                    width: number | null;
                    height: number | null;
                    duration: number | null;
                    embed: unknown;
                    description: string | null;
                    location: string | null;
                    tags: string[] | null;
                    metadata: Record<string, any> | null;
                }> | null;
                language: string | null;
                theme: string | null;
                tfa_secret: string | null;
                status: string;
                role: string | MergeCoreCollection<Schema, "directus_roles", {
                    id: string;
                    name: string;
                    icon: string;
                    description: string | null;
                    ip_access: string | null;
                    enforce_tfa: boolean;
                    admin_access: boolean;
                    app_access: boolean;
                }> | null;
                token: string | null;
                last_access: "datetime" | null;
                last_page: string | null;
                provider: string;
                external_identifier: string | null;
                auth_data: Record<string, any> | null;
                email_notifications: boolean | null;
            }> | null;
        }> | null;
    }>[] | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>, Schema>;

/**
 * Aggregate allow you to perform calculations on a set of values, returning a single result.
 * @param collection The collection to aggregate
 * @param options The aggregation options
 * @returns Aggregated data
 * @throws Will throw if collection is empty
 */
declare const aggregate: <Schema extends object, Collection extends AllCollections<Schema>, Options extends AggregationOptions<Schema, Collection>>(collection: Collection, options: Options) => RestCommand<AggregationOutput<Schema, Collection, Options>, Schema>;

/**
 * Read the contents of a file as a ReadableStream<Uint8Array>
 *
 * @param {string} key
 * @param {AssetsQuery} query
 * @returns {ReadableStream<Uint8Array>}
 */
declare const readAssetRaw: <Schema extends object>(key: DirectusFile<Schema>["id"], query?: AssetsQuery) => RestCommand<ReadableStream<Uint8Array>, Schema>;
/**
 * Read the contents of a file as a Blob
 *
 * @param {string} key
 * @param {AssetsQuery} query
 * @returns {Blob}
 */
declare const readAssetBlob: <Schema extends object>(key: DirectusFile<Schema>["id"], query?: AssetsQuery) => RestCommand<Blob, Schema>;
/**
 * Read the contents of a file as a ArrayBuffer
 *
 * @param {string} key
 * @param {AssetsQuery} query
 * @returns {ArrayBuffer}
 */
declare const readAssetArrayBuffer: <Schema extends object>(key: DirectusFile<Schema>["id"], query?: AssetsQuery) => RestCommand<ArrayBuffer, Schema>;

type ReadCollectionOutput<Schema extends object, Item extends object = DirectusCollection<Schema>> = ApplyQueryFields<Schema, Item, '*'>;
/**
 * List the available collections.
 * @returns An array of collection objects.
 */
declare const readCollections: <Schema extends object>() => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, DirectusCollection<Schema>> extends infer FF ? MapFlatFields<DirectusCollection<Schema>, keyof DirectusCollection<Schema>, FF extends Record<string, string> ? FF : Record<string, string>> : never, {}>>[], Schema>;
/**
 * Retrieve a single collection by table name.
 * @param collection The collection name
 * @returns A collection object.
 * @throws Will throw if collection is empty
 */
declare const readCollection: <Schema extends object>(collection: string) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, DirectusCollection<Schema>> extends infer FF ? MapFlatFields<DirectusCollection<Schema>, keyof DirectusCollection<Schema>, FF extends Record<string, string> ? FF : Record<string, string>> : never, {}>>, Schema>;

type ReadDashboardOutput<Schema extends object, TQuery extends Query<Schema, Item>, Item extends object = DirectusDashboard<Schema>> = ApplyQueryFields<Schema, Item, TQuery['fields']>;
/**
 * List all dashboards that exist in Directus.
 * @param query The query parameters
 * @returns An array of up to limit dashboard objects. If no items are available, data will be an empty array.
 */
declare const readDashboards: <Schema extends object, const TQuery extends Query<Schema, DirectusDashboard<Schema>>>(query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_dashboards", {
    id: string;
    name: string;
    icon: string;
    note: string | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    color: string | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_dashboards", {
    id: string;
    name: string;
    icon: string;
    note: string | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    color: string | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_dashboards", {
    id: string;
    name: string;
    icon: string;
    note: string | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    color: string | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_dashboards", {
    id: string;
    name: string;
    icon: string;
    note: string | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    color: string | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_dashboards", {
    id: string;
    name: string;
    icon: string;
    note: string | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    color: string | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_dashboards", {
    id: string;
    name: string;
    icon: string;
    note: string | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    color: string | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>[], Schema>;
/**
 * List an existing dashboard by primary key.
 * @param key The primary key of the dashboard
 * @param query The query parameters
 * @returns Returns the requested dashboard object.
 * @throws Will throw if key is empty
 */
declare const readDashboard: <Schema extends object, const TQuery extends Query<Schema, DirectusDashboard<Schema>>>(key: DirectusDashboard<Schema>["id"], query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_dashboards", {
    id: string;
    name: string;
    icon: string;
    note: string | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    color: string | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_dashboards", {
    id: string;
    name: string;
    icon: string;
    note: string | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    color: string | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_dashboards", {
    id: string;
    name: string;
    icon: string;
    note: string | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    color: string | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_dashboards", {
    id: string;
    name: string;
    icon: string;
    note: string | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    color: string | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_dashboards", {
    id: string;
    name: string;
    icon: string;
    note: string | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    color: string | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_dashboards", {
    id: string;
    name: string;
    icon: string;
    note: string | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    color: string | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>, Schema>;

/**
 * List the available extensions in the project.
 * @returns An array of extensions.
 */
declare const readExtensions: <Schema extends object>() => RestCommand<ExtensionItem[], Schema>;

type ReadFieldOutput<Schema extends object, Item extends object = DirectusField<Schema>> = ApplyQueryFields<Schema, Item, '*'>;
/**
 * List the available fields.
 * @param query The query parameters
 * @returns An array of field objects.
 */
declare const readFields: <Schema extends object>() => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, DirectusField<Schema>> extends infer FF ? MapFlatFields<DirectusField<Schema>, keyof DirectusField<Schema>, FF extends Record<string, string> ? FF : Record<string, string>> : never, {}>>[], Schema>;
/**
 * List the available fields in a given collection.
 * @param collection The primary key of the field
 * @returns
 * @throws Will throw if collection is empty
 */
declare const readFieldsByCollection: <Schema extends object>(collection: string) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, DirectusField<Schema>> extends infer FF ? MapFlatFields<DirectusField<Schema>, keyof DirectusField<Schema>, FF extends Record<string, string> ? FF : Record<string, string>> : never, {}>>[], Schema>;
/**
 *
 * @param key The primary key of the dashboard
 * @param query The query parameters
 * @returns
 * @throws Will throw if collection is empty
 * @throws Will throw if field is empty
 */
declare const readField: <Schema extends object>(collection: string, field: string) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, DirectusField<Schema>> extends infer FF ? MapFlatFields<DirectusField<Schema>, keyof DirectusField<Schema>, FF extends Record<string, string> ? FF : Record<string, string>> : never, {}>>, Schema>;

type ReadFileOutput<Schema extends object, TQuery extends Query<Schema, Item>, Item extends object = DirectusFile<Schema>> = ApplyQueryFields<Schema, Item, TQuery['fields']>;
/**
 * List all files that exist in Directus.
 * @param query The query parameters
 * @returns An array of up to limit file objects. If no items are available, data will be an empty array.
 */
declare const readFiles: <Schema extends object, const TQuery extends Query<Schema, DirectusFile<Schema>>>(query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_files", {
    id: string;
    storage: string;
    filename_disk: string | null;
    filename_download: string;
    title: string | null;
    type: string | null;
    folder: string | MergeCoreCollection<Schema, "directus_folders", {
        id: string;
        name: string;
        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
    }> | null;
    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null; /**
         * List all files that exist in Directus.
         * @param query The query parameters
         * @returns An array of up to limit file objects. If no items are available, data will be an empty array.
         */
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", any> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    uploaded_on: "datetime";
    modified_by: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null; /**
         * List all files that exist in Directus.
         * @param query The query parameters
         * @returns An array of up to limit file objects. If no items are available, data will be an empty array.
         */
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", any> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    modified_on: "datetime";
    charset: string | null;
    filesize: string | null;
    width: number | null;
    height: number | null;
    duration: number | null;
    embed: unknown;
    description: string | null;
    location: string | null;
    tags: string[] | null;
    metadata: Record<string, any> | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_files", {
    id: string;
    storage: string;
    filename_disk: string | null;
    filename_download: string;
    title: string | null;
    type: string | null;
    folder: string | MergeCoreCollection<Schema, "directus_folders", {
        id: string;
        name: string;
        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
    }> | null;
    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null; /**
         * List all files that exist in Directus.
         * @param query The query parameters
         * @returns An array of up to limit file objects. If no items are available, data will be an empty array.
         */
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", any> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    uploaded_on: "datetime";
    modified_by: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null; /**
         * List all files that exist in Directus.
         * @param query The query parameters
         * @returns An array of up to limit file objects. If no items are available, data will be an empty array.
         */
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", any> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    modified_on: "datetime";
    charset: string | null;
    filesize: string | null;
    width: number | null;
    height: number | null;
    duration: number | null;
    embed: unknown;
    description: string | null;
    location: string | null;
    tags: string[] | null;
    metadata: Record<string, any> | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_files", {
    id: string;
    storage: string;
    filename_disk: string | null;
    filename_download: string;
    title: string | null;
    type: string | null;
    folder: string | MergeCoreCollection<Schema, "directus_folders", {
        id: string;
        name: string;
        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
    }> | null;
    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null; /**
         * List all files that exist in Directus.
         * @param query The query parameters
         * @returns An array of up to limit file objects. If no items are available, data will be an empty array.
         */
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", any> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    uploaded_on: "datetime";
    modified_by: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null; /**
         * List all files that exist in Directus.
         * @param query The query parameters
         * @returns An array of up to limit file objects. If no items are available, data will be an empty array.
         */
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", any> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    modified_on: "datetime";
    charset: string | null;
    filesize: string | null;
    width: number | null;
    height: number | null;
    duration: number | null;
    embed: unknown;
    description: string | null;
    location: string | null;
    tags: string[] | null;
    metadata: Record<string, any> | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_files", {
    id: string;
    storage: string;
    filename_disk: string | null;
    filename_download: string;
    title: string | null;
    type: string | null;
    folder: string | MergeCoreCollection<Schema, "directus_folders", {
        id: string;
        name: string;
        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
    }> | null;
    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null; /**
         * List all files that exist in Directus.
         * @param query The query parameters
         * @returns An array of up to limit file objects. If no items are available, data will be an empty array.
         */
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", any> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    uploaded_on: "datetime";
    modified_by: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null; /**
         * List all files that exist in Directus.
         * @param query The query parameters
         * @returns An array of up to limit file objects. If no items are available, data will be an empty array.
         */
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", any> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    modified_on: "datetime";
    charset: string | null;
    filesize: string | null;
    width: number | null;
    height: number | null;
    duration: number | null;
    embed: unknown;
    description: string | null;
    location: string | null;
    tags: string[] | null;
    metadata: Record<string, any> | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_files", {
    id: string;
    storage: string;
    filename_disk: string | null;
    filename_download: string;
    title: string | null;
    type: string | null;
    folder: string | MergeCoreCollection<Schema, "directus_folders", {
        id: string;
        name: string;
        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
    }> | null;
    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null; /**
         * List all files that exist in Directus.
         * @param query The query parameters
         * @returns An array of up to limit file objects. If no items are available, data will be an empty array.
         */
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", any> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    uploaded_on: "datetime";
    modified_by: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null; /**
         * List all files that exist in Directus.
         * @param query The query parameters
         * @returns An array of up to limit file objects. If no items are available, data will be an empty array.
         */
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", any> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    modified_on: "datetime";
    charset: string | null;
    filesize: string | null;
    width: number | null;
    height: number | null;
    duration: number | null;
    embed: unknown;
    description: string | null;
    location: string | null;
    tags: string[] | null;
    metadata: Record<string, any> | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_files", {
    id: string;
    storage: string;
    filename_disk: string | null;
    filename_download: string;
    title: string | null;
    type: string | null;
    folder: string | MergeCoreCollection<Schema, "directus_folders", {
        id: string;
        name: string;
        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
    }> | null;
    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null; /**
         * List all files that exist in Directus.
         * @param query The query parameters
         * @returns An array of up to limit file objects. If no items are available, data will be an empty array.
         */
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", any> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    uploaded_on: "datetime";
    modified_by: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null; /**
         * List all files that exist in Directus.
         * @param query The query parameters
         * @returns An array of up to limit file objects. If no items are available, data will be an empty array.
         */
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", any> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    modified_on: "datetime";
    charset: string | null;
    filesize: string | null;
    width: number | null;
    height: number | null;
    duration: number | null;
    embed: unknown;
    description: string | null;
    location: string | null;
    tags: string[] | null;
    metadata: Record<string, any> | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>[], Schema>;
/**
 * Retrieve a single file by primary key.
 * @param key The primary key of the dashboard
 * @param query The query parameters
 * @returns Returns a file object if a valid primary key was provided.
 * @throws Will throw if key is empty
 */
declare const readFile: <Schema extends object, const TQuery extends Query<Schema, DirectusFile<Schema>>>(key: DirectusFile<Schema>["id"], query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_files", {
    id: string;
    storage: string;
    filename_disk: string | null;
    filename_download: string;
    title: string | null;
    type: string | null;
    folder: string | MergeCoreCollection<Schema, "directus_folders", {
        id: string;
        name: string;
        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
    }> | null;
    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null; /**
         * List all files that exist in Directus.
         * @param query The query parameters
         * @returns An array of up to limit file objects. If no items are available, data will be an empty array.
         */
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", any> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    uploaded_on: "datetime";
    modified_by: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null; /**
         * List all files that exist in Directus.
         * @param query The query parameters
         * @returns An array of up to limit file objects. If no items are available, data will be an empty array.
         */
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", any> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    modified_on: "datetime";
    charset: string | null;
    filesize: string | null;
    width: number | null;
    height: number | null;
    duration: number | null;
    embed: unknown;
    description: string | null;
    location: string | null;
    tags: string[] | null;
    metadata: Record<string, any> | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_files", {
    id: string;
    storage: string;
    filename_disk: string | null;
    filename_download: string;
    title: string | null;
    type: string | null;
    folder: string | MergeCoreCollection<Schema, "directus_folders", {
        id: string;
        name: string;
        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
    }> | null;
    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null; /**
         * List all files that exist in Directus.
         * @param query The query parameters
         * @returns An array of up to limit file objects. If no items are available, data will be an empty array.
         */
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", any> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    uploaded_on: "datetime";
    modified_by: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null; /**
         * List all files that exist in Directus.
         * @param query The query parameters
         * @returns An array of up to limit file objects. If no items are available, data will be an empty array.
         */
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", any> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    modified_on: "datetime";
    charset: string | null;
    filesize: string | null;
    width: number | null;
    height: number | null;
    duration: number | null;
    embed: unknown;
    description: string | null;
    location: string | null;
    tags: string[] | null;
    metadata: Record<string, any> | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_files", {
    id: string;
    storage: string;
    filename_disk: string | null;
    filename_download: string;
    title: string | null;
    type: string | null;
    folder: string | MergeCoreCollection<Schema, "directus_folders", {
        id: string;
        name: string;
        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
    }> | null;
    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null; /**
         * List all files that exist in Directus.
         * @param query The query parameters
         * @returns An array of up to limit file objects. If no items are available, data will be an empty array.
         */
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", any> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    uploaded_on: "datetime";
    modified_by: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null; /**
         * List all files that exist in Directus.
         * @param query The query parameters
         * @returns An array of up to limit file objects. If no items are available, data will be an empty array.
         */
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", any> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    modified_on: "datetime";
    charset: string | null;
    filesize: string | null;
    width: number | null;
    height: number | null;
    duration: number | null;
    embed: unknown;
    description: string | null;
    location: string | null;
    tags: string[] | null;
    metadata: Record<string, any> | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_files", {
    id: string;
    storage: string;
    filename_disk: string | null;
    filename_download: string;
    title: string | null;
    type: string | null;
    folder: string | MergeCoreCollection<Schema, "directus_folders", {
        id: string;
        name: string;
        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
    }> | null;
    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null; /**
         * List all files that exist in Directus.
         * @param query The query parameters
         * @returns An array of up to limit file objects. If no items are available, data will be an empty array.
         */
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", any> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    uploaded_on: "datetime";
    modified_by: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null; /**
         * List all files that exist in Directus.
         * @param query The query parameters
         * @returns An array of up to limit file objects. If no items are available, data will be an empty array.
         */
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", any> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    modified_on: "datetime";
    charset: string | null;
    filesize: string | null;
    width: number | null;
    height: number | null;
    duration: number | null;
    embed: unknown;
    description: string | null;
    location: string | null;
    tags: string[] | null;
    metadata: Record<string, any> | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_files", {
    id: string;
    storage: string;
    filename_disk: string | null;
    filename_download: string;
    title: string | null;
    type: string | null;
    folder: string | MergeCoreCollection<Schema, "directus_folders", {
        id: string;
        name: string;
        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
    }> | null;
    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null; /**
         * List all files that exist in Directus.
         * @param query The query parameters
         * @returns An array of up to limit file objects. If no items are available, data will be an empty array.
         */
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", any> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    uploaded_on: "datetime";
    modified_by: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null; /**
         * List all files that exist in Directus.
         * @param query The query parameters
         * @returns An array of up to limit file objects. If no items are available, data will be an empty array.
         */
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", any> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    modified_on: "datetime";
    charset: string | null;
    filesize: string | null;
    width: number | null;
    height: number | null;
    duration: number | null;
    embed: unknown;
    description: string | null;
    location: string | null;
    tags: string[] | null;
    metadata: Record<string, any> | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_files", {
    id: string;
    storage: string;
    filename_disk: string | null;
    filename_download: string;
    title: string | null;
    type: string | null;
    folder: string | MergeCoreCollection<Schema, "directus_folders", {
        id: string;
        name: string;
        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
    }> | null;
    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null; /**
         * List all files that exist in Directus.
         * @param query The query parameters
         * @returns An array of up to limit file objects. If no items are available, data will be an empty array.
         */
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", any> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    uploaded_on: "datetime";
    modified_by: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null; /**
         * List all files that exist in Directus.
         * @param query The query parameters
         * @returns An array of up to limit file objects. If no items are available, data will be an empty array.
         */
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", any> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    modified_on: "datetime";
    charset: string | null;
    filesize: string | null;
    width: number | null;
    height: number | null;
    duration: number | null;
    embed: unknown;
    description: string | null;
    location: string | null;
    tags: string[] | null;
    metadata: Record<string, any> | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>, Schema>;

type ReadFlowOutput<Schema extends object, TQuery extends Query<Schema, Item>, Item extends object = DirectusFlow<Schema>> = ApplyQueryFields<Schema, Item, TQuery['fields']>;
/**
 * List all flows that exist in Directus.
 * @param query The query parameters
 * @returns An array of up to limit flow objects. If no items are available, data will be an empty array.
 */
declare const readFlows: <Schema extends object, const TQuery extends Query<Schema, DirectusFlow<Schema>>>(query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_flows", {
    id: string;
    name: string;
    icon: string | null;
    color: string | null;
    description: string | null;
    status: string;
    trigger: string | null;
    accountability: string | null;
    options: Record<string, any> | null;
    operation: string | MergeCoreCollection<Schema, "directus_operations", {
        id: string;
        name: string | null;
        key: string;
        type: string;
        position_x: number;
        position_y: number;
        timestamp: string;
        options: Record<string, any> | null;
        resolve: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        reject: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        flow: string | MergeCoreCollection<Schema, "directus_flows", any>;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null; /**
             * List all flows that exist in Directus.
             * @param query The query parameters
             * @returns An array of up to limit flow objects. If no items are available, data will be an empty array.
             */
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }> | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null; /**
         * List all flows that exist in Directus.
         * @param query The query parameters
         * @returns An array of up to limit flow objects. If no items are available, data will be an empty array.
         */
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_flows", {
    id: string;
    name: string;
    icon: string | null;
    color: string | null;
    description: string | null;
    status: string;
    trigger: string | null;
    accountability: string | null;
    options: Record<string, any> | null;
    operation: string | MergeCoreCollection<Schema, "directus_operations", {
        id: string;
        name: string | null;
        key: string;
        type: string;
        position_x: number;
        position_y: number;
        timestamp: string;
        options: Record<string, any> | null;
        resolve: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        reject: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        flow: string | MergeCoreCollection<Schema, "directus_flows", any>;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null; /**
             * List all flows that exist in Directus.
             * @param query The query parameters
             * @returns An array of up to limit flow objects. If no items are available, data will be an empty array.
             */
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }> | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null; /**
         * List all flows that exist in Directus.
         * @param query The query parameters
         * @returns An array of up to limit flow objects. If no items are available, data will be an empty array.
         */
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_flows", {
    id: string;
    name: string;
    icon: string | null;
    color: string | null;
    description: string | null;
    status: string;
    trigger: string | null;
    accountability: string | null;
    options: Record<string, any> | null;
    operation: string | MergeCoreCollection<Schema, "directus_operations", {
        id: string;
        name: string | null;
        key: string;
        type: string;
        position_x: number;
        position_y: number;
        timestamp: string;
        options: Record<string, any> | null;
        resolve: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        reject: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        flow: string | MergeCoreCollection<Schema, "directus_flows", any>;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null; /**
             * List all flows that exist in Directus.
             * @param query The query parameters
             * @returns An array of up to limit flow objects. If no items are available, data will be an empty array.
             */
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }> | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null; /**
         * List all flows that exist in Directus.
         * @param query The query parameters
         * @returns An array of up to limit flow objects. If no items are available, data will be an empty array.
         */
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_flows", {
    id: string;
    name: string;
    icon: string | null;
    color: string | null;
    description: string | null;
    status: string;
    trigger: string | null;
    accountability: string | null;
    options: Record<string, any> | null;
    operation: string | MergeCoreCollection<Schema, "directus_operations", {
        id: string;
        name: string | null;
        key: string;
        type: string;
        position_x: number;
        position_y: number;
        timestamp: string;
        options: Record<string, any> | null;
        resolve: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        reject: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        flow: string | MergeCoreCollection<Schema, "directus_flows", any>;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null; /**
             * List all flows that exist in Directus.
             * @param query The query parameters
             * @returns An array of up to limit flow objects. If no items are available, data will be an empty array.
             */
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }> | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null; /**
         * List all flows that exist in Directus.
         * @param query The query parameters
         * @returns An array of up to limit flow objects. If no items are available, data will be an empty array.
         */
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_flows", {
    id: string;
    name: string;
    icon: string | null;
    color: string | null;
    description: string | null;
    status: string;
    trigger: string | null;
    accountability: string | null;
    options: Record<string, any> | null;
    operation: string | MergeCoreCollection<Schema, "directus_operations", {
        id: string;
        name: string | null;
        key: string;
        type: string;
        position_x: number;
        position_y: number;
        timestamp: string;
        options: Record<string, any> | null;
        resolve: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        reject: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        flow: string | MergeCoreCollection<Schema, "directus_flows", any>;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null; /**
             * List all flows that exist in Directus.
             * @param query The query parameters
             * @returns An array of up to limit flow objects. If no items are available, data will be an empty array.
             */
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }> | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null; /**
         * List all flows that exist in Directus.
         * @param query The query parameters
         * @returns An array of up to limit flow objects. If no items are available, data will be an empty array.
         */
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_flows", {
    id: string;
    name: string;
    icon: string | null;
    color: string | null;
    description: string | null;
    status: string;
    trigger: string | null;
    accountability: string | null;
    options: Record<string, any> | null;
    operation: string | MergeCoreCollection<Schema, "directus_operations", {
        id: string;
        name: string | null;
        key: string;
        type: string;
        position_x: number;
        position_y: number;
        timestamp: string;
        options: Record<string, any> | null;
        resolve: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        reject: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        flow: string | MergeCoreCollection<Schema, "directus_flows", any>;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null; /**
             * List all flows that exist in Directus.
             * @param query The query parameters
             * @returns An array of up to limit flow objects. If no items are available, data will be an empty array.
             */
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }> | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null; /**
         * List all flows that exist in Directus.
         * @param query The query parameters
         * @returns An array of up to limit flow objects. If no items are available, data will be an empty array.
         */
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>[], Schema>;
/**
 * List an existing flow by primary key.
 * @param key The primary key of the dashboard
 * @param query The query parameters
 * @returns Returns the requested flow object.
 * @throws Will throw if key is empty
 */
declare const readFlow: <Schema extends object, const TQuery extends Query<Schema, DirectusFlow<Schema>>>(key: DirectusFlow<Schema>["id"], query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_flows", {
    id: string;
    name: string;
    icon: string | null;
    color: string | null;
    description: string | null;
    status: string;
    trigger: string | null;
    accountability: string | null;
    options: Record<string, any> | null;
    operation: string | MergeCoreCollection<Schema, "directus_operations", {
        id: string;
        name: string | null;
        key: string;
        type: string;
        position_x: number;
        position_y: number;
        timestamp: string;
        options: Record<string, any> | null;
        resolve: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        reject: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        flow: string | MergeCoreCollection<Schema, "directus_flows", any>;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null; /**
             * List all flows that exist in Directus.
             * @param query The query parameters
             * @returns An array of up to limit flow objects. If no items are available, data will be an empty array.
             */
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }> | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null; /**
         * List all flows that exist in Directus.
         * @param query The query parameters
         * @returns An array of up to limit flow objects. If no items are available, data will be an empty array.
         */
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_flows", {
    id: string;
    name: string;
    icon: string | null;
    color: string | null;
    description: string | null;
    status: string;
    trigger: string | null;
    accountability: string | null;
    options: Record<string, any> | null;
    operation: string | MergeCoreCollection<Schema, "directus_operations", {
        id: string;
        name: string | null;
        key: string;
        type: string;
        position_x: number;
        position_y: number;
        timestamp: string;
        options: Record<string, any> | null;
        resolve: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        reject: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        flow: string | MergeCoreCollection<Schema, "directus_flows", any>;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null; /**
             * List all flows that exist in Directus.
             * @param query The query parameters
             * @returns An array of up to limit flow objects. If no items are available, data will be an empty array.
             */
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }> | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null; /**
         * List all flows that exist in Directus.
         * @param query The query parameters
         * @returns An array of up to limit flow objects. If no items are available, data will be an empty array.
         */
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_flows", {
    id: string;
    name: string;
    icon: string | null;
    color: string | null;
    description: string | null;
    status: string;
    trigger: string | null;
    accountability: string | null;
    options: Record<string, any> | null;
    operation: string | MergeCoreCollection<Schema, "directus_operations", {
        id: string;
        name: string | null;
        key: string;
        type: string;
        position_x: number;
        position_y: number;
        timestamp: string;
        options: Record<string, any> | null;
        resolve: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        reject: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        flow: string | MergeCoreCollection<Schema, "directus_flows", any>;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null; /**
             * List all flows that exist in Directus.
             * @param query The query parameters
             * @returns An array of up to limit flow objects. If no items are available, data will be an empty array.
             */
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }> | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null; /**
         * List all flows that exist in Directus.
         * @param query The query parameters
         * @returns An array of up to limit flow objects. If no items are available, data will be an empty array.
         */
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_flows", {
    id: string;
    name: string;
    icon: string | null;
    color: string | null;
    description: string | null;
    status: string;
    trigger: string | null;
    accountability: string | null;
    options: Record<string, any> | null;
    operation: string | MergeCoreCollection<Schema, "directus_operations", {
        id: string;
        name: string | null;
        key: string;
        type: string;
        position_x: number;
        position_y: number;
        timestamp: string;
        options: Record<string, any> | null;
        resolve: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        reject: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        flow: string | MergeCoreCollection<Schema, "directus_flows", any>;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null; /**
             * List all flows that exist in Directus.
             * @param query The query parameters
             * @returns An array of up to limit flow objects. If no items are available, data will be an empty array.
             */
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }> | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null; /**
         * List all flows that exist in Directus.
         * @param query The query parameters
         * @returns An array of up to limit flow objects. If no items are available, data will be an empty array.
         */
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_flows", {
    id: string;
    name: string;
    icon: string | null;
    color: string | null;
    description: string | null;
    status: string;
    trigger: string | null;
    accountability: string | null;
    options: Record<string, any> | null;
    operation: string | MergeCoreCollection<Schema, "directus_operations", {
        id: string;
        name: string | null;
        key: string;
        type: string;
        position_x: number;
        position_y: number;
        timestamp: string;
        options: Record<string, any> | null;
        resolve: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        reject: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        flow: string | MergeCoreCollection<Schema, "directus_flows", any>;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null; /**
             * List all flows that exist in Directus.
             * @param query The query parameters
             * @returns An array of up to limit flow objects. If no items are available, data will be an empty array.
             */
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }> | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null; /**
         * List all flows that exist in Directus.
         * @param query The query parameters
         * @returns An array of up to limit flow objects. If no items are available, data will be an empty array.
         */
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_flows", {
    id: string;
    name: string;
    icon: string | null;
    color: string | null;
    description: string | null;
    status: string;
    trigger: string | null;
    accountability: string | null;
    options: Record<string, any> | null;
    operation: string | MergeCoreCollection<Schema, "directus_operations", {
        id: string;
        name: string | null;
        key: string;
        type: string;
        position_x: number;
        position_y: number;
        timestamp: string;
        options: Record<string, any> | null;
        resolve: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        reject: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        flow: string | MergeCoreCollection<Schema, "directus_flows", any>;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null; /**
             * List all flows that exist in Directus.
             * @param query The query parameters
             * @returns An array of up to limit flow objects. If no items are available, data will be an empty array.
             */
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }> | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null; /**
         * List all flows that exist in Directus.
         * @param query The query parameters
         * @returns An array of up to limit flow objects. If no items are available, data will be an empty array.
         */
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>, Schema>;

type ReadFolderOutput<Schema extends object, TQuery extends Query<Schema, Item>, Item extends object = DirectusFolder<Schema>> = ApplyQueryFields<Schema, Item, TQuery['fields']>;
/**
 * List all folders that exist in Directus.
 * @param query The query parameters
 * @returns An array of up to limit folder objects. If no items are available, data will be an empty array.
 */
declare const readFolders: <Schema extends object, const TQuery extends Query<Schema, DirectusFolder<Schema>>>(query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_folders", {
    id: string;
    name: string;
    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_folders", {
    id: string;
    name: string;
    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_folders", {
    id: string;
    name: string;
    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_folders", {
    id: string;
    name: string;
    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_folders", {
    id: string;
    name: string;
    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_folders", {
    id: string;
    name: string;
    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>[], Schema>;
/**
 * List an existing folder by primary key.
 * @param key The primary key of the dashboard
 * @param query The query parameters
 * @returns Returns a folder object if a valid primary key was provided.
 * @throws Will throw if key is empty
 */
declare const readFolder: <Schema extends object, const TQuery extends Query<Schema, DirectusFolder<Schema>>>(key: DirectusFolder<Schema>["id"], query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_folders", {
    id: string;
    name: string;
    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_folders", {
    id: string;
    name: string;
    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_folders", {
    id: string;
    name: string;
    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_folders", {
    id: string;
    name: string;
    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_folders", {
    id: string;
    name: string;
    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_folders", {
    id: string;
    name: string;
    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>, Schema>;

type ReadItemOutput<Schema extends object, Collection extends RegularCollections<Schema>, TQuery extends Query<Schema, CollectionType<Schema, Collection>>> = ApplyQueryFields<Schema, CollectionType<Schema, Collection>, TQuery['fields']>;
/**
 * List all items that exist in Directus.
 *
 * @param collection The collection of the items
 * @param query The query parameters
 *
 * @returns An array of up to limit item objects. If no items are available, data will be an empty array.
 * @throws Will throw if collection is a core collection
 * @throws Will throw if collection is empty
 */
declare const readItems: <Schema extends object, Collection extends RegularCollections<Schema>, const TQuery extends Query<Schema, CollectionType<Schema, Collection>>>(collection: Collection, query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<IfAny<Schema, any, Collection extends keyof Schema ? UnpackList<Schema[Collection]> extends object ? object & UnpackList<Schema[Collection]> : never : never>>> extends infer FF ? MapFlatFields<UnpackList<IfAny<Schema, any, Collection extends keyof Schema ? UnpackList<Schema[Collection]> extends object ? object & UnpackList<Schema[Collection]> : never : never>>, FieldsWildcard<UnpackList<IfAny<Schema, any, Collection extends keyof Schema ? UnpackList<Schema[Collection]> extends object ? object & UnpackList<Schema[Collection]> : never : never>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<IfAny<Schema, any, Collection extends keyof Schema ? UnpackList<Schema[Collection]> extends object ? object & UnpackList<Schema[Collection]> : never : never>> ? Extract<UnpackList<IfAny<Schema, any, Collection extends keyof Schema ? UnpackList<Schema[Collection]> extends object ? object & UnpackList<Schema[Collection]> : never : never>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<IfAny<Schema, any, Collection extends keyof Schema ? UnpackList<Schema[Collection]> extends object ? object & UnpackList<Schema[Collection]> : never : never>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>[], Schema>;
/**
 * Get an item that exists in Directus.
 *
 * @param collection The collection of the item
 * @param key The primary key of the item
 * @param query The query parameters
 *
 * @returns Returns an item object if a valid primary key was provided.
 * @throws Will throw if collection is a core collection
 * @throws Will throw if collection is empty
 * @throws Will throw if key is empty
 */
declare const readItem: <Schema extends object, Collection extends RegularCollections<Schema>, const TQuery extends QueryItem<Schema, CollectionType<Schema, Collection>>>(collection: Collection, key: string | number, query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<IfAny<Schema, any, Collection extends keyof Schema ? UnpackList<Schema[Collection]> extends object ? object & UnpackList<Schema[Collection]> : never : never>>> extends infer FF ? MapFlatFields<UnpackList<IfAny<Schema, any, Collection extends keyof Schema ? UnpackList<Schema[Collection]> extends object ? object & UnpackList<Schema[Collection]> : never : never>>, FieldsWildcard<UnpackList<IfAny<Schema, any, Collection extends keyof Schema ? UnpackList<Schema[Collection]> extends object ? object & UnpackList<Schema[Collection]> : never : never>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<IfAny<Schema, any, Collection extends keyof Schema ? UnpackList<Schema[Collection]> extends object ? object & UnpackList<Schema[Collection]> : never : never>> ? Extract<UnpackList<IfAny<Schema, any, Collection extends keyof Schema ? UnpackList<Schema[Collection]> extends object ? object & UnpackList<Schema[Collection]> : never : never>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<IfAny<Schema, any, Collection extends keyof Schema ? UnpackList<Schema[Collection]> extends object ? object & UnpackList<Schema[Collection]> : never : never>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>, Schema>;

type ReadNotificationOutput<Schema extends object, TQuery extends Query<Schema, Item>, Item extends object = DirectusNotification<Schema>> = ApplyQueryFields<Schema, Item, TQuery['fields']>;
/**
 * List all notifications that exist in Directus.
 * @param query The query parameters
 * @returns An array of up to limit notification objects. If no items are available, data will be an empty array.
 */
declare const readNotifications: <Schema extends object, const TQuery extends Query<Schema, DirectusNotification<Schema>>>(query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_notifications", {
    id: string;
    timestamp: "datetime" | null;
    status: string | null;
    recipient: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }>;
    sender: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    subject: string;
    message: string | null;
    collection: string | null; /**
     * List all notifications that exist in Directus.
     * @param query The query parameters
     * @returns An array of up to limit notification objects. If no items are available, data will be an empty array.
     */
    item: string | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_notifications", {
    id: string;
    timestamp: "datetime" | null;
    status: string | null;
    recipient: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }>;
    sender: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    subject: string;
    message: string | null;
    collection: string | null; /**
     * List all notifications that exist in Directus.
     * @param query The query parameters
     * @returns An array of up to limit notification objects. If no items are available, data will be an empty array.
     */
    item: string | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_notifications", {
    id: string;
    timestamp: "datetime" | null;
    status: string | null;
    recipient: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }>;
    sender: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    subject: string;
    message: string | null;
    collection: string | null; /**
     * List all notifications that exist in Directus.
     * @param query The query parameters
     * @returns An array of up to limit notification objects. If no items are available, data will be an empty array.
     */
    item: string | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_notifications", {
    id: string;
    timestamp: "datetime" | null;
    status: string | null;
    recipient: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }>;
    sender: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    subject: string;
    message: string | null;
    collection: string | null; /**
     * List all notifications that exist in Directus.
     * @param query The query parameters
     * @returns An array of up to limit notification objects. If no items are available, data will be an empty array.
     */
    item: string | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_notifications", {
    id: string;
    timestamp: "datetime" | null;
    status: string | null;
    recipient: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }>;
    sender: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    subject: string;
    message: string | null;
    collection: string | null; /**
     * List all notifications that exist in Directus.
     * @param query The query parameters
     * @returns An array of up to limit notification objects. If no items are available, data will be an empty array.
     */
    item: string | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_notifications", {
    id: string;
    timestamp: "datetime" | null;
    status: string | null;
    recipient: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }>;
    sender: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    subject: string;
    message: string | null;
    collection: string | null; /**
     * List all notifications that exist in Directus.
     * @param query The query parameters
     * @returns An array of up to limit notification objects. If no items are available, data will be an empty array.
     */
    item: string | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>[], Schema>;
/**
 * List an existing notification by primary key.
 * @param key The primary key of the dashboard
 * @param query The query parameters
 * @returns Returns the requested notification object.
 * @throws Will throw if key is empty
 */
declare const readNotification: <Schema extends object, const TQuery extends Query<Schema, DirectusNotification<Schema>>>(key: DirectusNotification<Schema>["id"], query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_notifications", {
    id: string;
    timestamp: "datetime" | null;
    status: string | null;
    recipient: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }>;
    sender: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    subject: string;
    message: string | null;
    collection: string | null; /**
     * List all notifications that exist in Directus.
     * @param query The query parameters
     * @returns An array of up to limit notification objects. If no items are available, data will be an empty array.
     */
    item: string | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_notifications", {
    id: string;
    timestamp: "datetime" | null;
    status: string | null;
    recipient: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }>;
    sender: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    subject: string;
    message: string | null;
    collection: string | null; /**
     * List all notifications that exist in Directus.
     * @param query The query parameters
     * @returns An array of up to limit notification objects. If no items are available, data will be an empty array.
     */
    item: string | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_notifications", {
    id: string;
    timestamp: "datetime" | null;
    status: string | null;
    recipient: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }>;
    sender: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    subject: string;
    message: string | null;
    collection: string | null; /**
     * List all notifications that exist in Directus.
     * @param query The query parameters
     * @returns An array of up to limit notification objects. If no items are available, data will be an empty array.
     */
    item: string | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_notifications", {
    id: string;
    timestamp: "datetime" | null;
    status: string | null;
    recipient: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }>;
    sender: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    subject: string;
    message: string | null;
    collection: string | null; /**
     * List all notifications that exist in Directus.
     * @param query The query parameters
     * @returns An array of up to limit notification objects. If no items are available, data will be an empty array.
     */
    item: string | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_notifications", {
    id: string;
    timestamp: "datetime" | null;
    status: string | null;
    recipient: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }>;
    sender: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    subject: string;
    message: string | null;
    collection: string | null; /**
     * List all notifications that exist in Directus.
     * @param query The query parameters
     * @returns An array of up to limit notification objects. If no items are available, data will be an empty array.
     */
    item: string | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_notifications", {
    id: string;
    timestamp: "datetime" | null;
    status: string | null;
    recipient: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }>;
    sender: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    subject: string;
    message: string | null;
    collection: string | null; /**
     * List all notifications that exist in Directus.
     * @param query The query parameters
     * @returns An array of up to limit notification objects. If no items are available, data will be an empty array.
     */
    item: string | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>, Schema>;

type ReadOperationOutput<Schema extends object, TQuery extends Query<Schema, Item>, Item extends object = DirectusOperation<Schema>> = ApplyQueryFields<Schema, Item, TQuery['fields']>;
/**
 * List all operations that exist in Directus.
 * @param query The query parameters
 * @returns An array of up to limit operation objects. If no items are available, data will be an empty array.
 */
declare const readOperations: <Schema extends object, const TQuery extends Query<Schema, DirectusOperation<Schema>>>(query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_operations", {
    id: string;
    name: string | null;
    key: string;
    type: string;
    position_x: number;
    position_y: number;
    timestamp: string;
    options: Record<string, any> | null;
    resolve: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
    reject: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
    flow: string | MergeCoreCollection<Schema, "directus_flows", {
        id: string;
        name: string;
        icon: string | null;
        color: string | null;
        description: string | null;
        status: string;
        trigger: string | null;
        accountability: string | null; /**
         * List all operations that exist in Directus.
         * @param query The query parameters
         * @returns An array of up to limit operation objects. If no items are available, data will be an empty array.
         */
        options: Record<string, any> | null;
        operation: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }>;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_operations", {
    id: string;
    name: string | null;
    key: string;
    type: string;
    position_x: number;
    position_y: number;
    timestamp: string;
    options: Record<string, any> | null;
    resolve: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
    reject: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
    flow: string | MergeCoreCollection<Schema, "directus_flows", {
        id: string;
        name: string;
        icon: string | null;
        color: string | null;
        description: string | null;
        status: string;
        trigger: string | null;
        accountability: string | null; /**
         * List all operations that exist in Directus.
         * @param query The query parameters
         * @returns An array of up to limit operation objects. If no items are available, data will be an empty array.
         */
        options: Record<string, any> | null;
        operation: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }>;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_operations", {
    id: string;
    name: string | null;
    key: string;
    type: string;
    position_x: number;
    position_y: number;
    timestamp: string;
    options: Record<string, any> | null;
    resolve: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
    reject: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
    flow: string | MergeCoreCollection<Schema, "directus_flows", {
        id: string;
        name: string;
        icon: string | null;
        color: string | null;
        description: string | null;
        status: string;
        trigger: string | null;
        accountability: string | null; /**
         * List all operations that exist in Directus.
         * @param query The query parameters
         * @returns An array of up to limit operation objects. If no items are available, data will be an empty array.
         */
        options: Record<string, any> | null;
        operation: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }>;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_operations", {
    id: string;
    name: string | null;
    key: string;
    type: string;
    position_x: number;
    position_y: number;
    timestamp: string;
    options: Record<string, any> | null;
    resolve: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
    reject: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
    flow: string | MergeCoreCollection<Schema, "directus_flows", {
        id: string;
        name: string;
        icon: string | null;
        color: string | null;
        description: string | null;
        status: string;
        trigger: string | null;
        accountability: string | null; /**
         * List all operations that exist in Directus.
         * @param query The query parameters
         * @returns An array of up to limit operation objects. If no items are available, data will be an empty array.
         */
        options: Record<string, any> | null;
        operation: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }>;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_operations", {
    id: string;
    name: string | null;
    key: string;
    type: string;
    position_x: number;
    position_y: number;
    timestamp: string;
    options: Record<string, any> | null;
    resolve: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
    reject: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
    flow: string | MergeCoreCollection<Schema, "directus_flows", {
        id: string;
        name: string;
        icon: string | null;
        color: string | null;
        description: string | null;
        status: string;
        trigger: string | null;
        accountability: string | null; /**
         * List all operations that exist in Directus.
         * @param query The query parameters
         * @returns An array of up to limit operation objects. If no items are available, data will be an empty array.
         */
        options: Record<string, any> | null;
        operation: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }>;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_operations", {
    id: string;
    name: string | null;
    key: string;
    type: string;
    position_x: number;
    position_y: number;
    timestamp: string;
    options: Record<string, any> | null;
    resolve: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
    reject: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
    flow: string | MergeCoreCollection<Schema, "directus_flows", {
        id: string;
        name: string;
        icon: string | null;
        color: string | null;
        description: string | null;
        status: string;
        trigger: string | null;
        accountability: string | null; /**
         * List all operations that exist in Directus.
         * @param query The query parameters
         * @returns An array of up to limit operation objects. If no items are available, data will be an empty array.
         */
        options: Record<string, any> | null;
        operation: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }>;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>[], Schema>;
/**
 * List all Operations that exist in Directus.
 * @param key The primary key of the dashboard
 * @param query The query parameters
 * @returns Returns a Operation object if a valid primary key was provided.
 * @throws Will throw if key is empty
 */
declare const readOperation: <Schema extends object, const TQuery extends Query<Schema, DirectusOperation<Schema>>>(key: DirectusOperation<Schema>["id"], query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_operations", {
    id: string;
    name: string | null;
    key: string;
    type: string;
    position_x: number;
    position_y: number;
    timestamp: string;
    options: Record<string, any> | null;
    resolve: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
    reject: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
    flow: string | MergeCoreCollection<Schema, "directus_flows", {
        id: string;
        name: string;
        icon: string | null;
        color: string | null;
        description: string | null;
        status: string;
        trigger: string | null;
        accountability: string | null; /**
         * List all operations that exist in Directus.
         * @param query The query parameters
         * @returns An array of up to limit operation objects. If no items are available, data will be an empty array.
         */
        options: Record<string, any> | null;
        operation: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }>;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_operations", {
    id: string;
    name: string | null;
    key: string;
    type: string;
    position_x: number;
    position_y: number;
    timestamp: string;
    options: Record<string, any> | null;
    resolve: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
    reject: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
    flow: string | MergeCoreCollection<Schema, "directus_flows", {
        id: string;
        name: string;
        icon: string | null;
        color: string | null;
        description: string | null;
        status: string;
        trigger: string | null;
        accountability: string | null; /**
         * List all operations that exist in Directus.
         * @param query The query parameters
         * @returns An array of up to limit operation objects. If no items are available, data will be an empty array.
         */
        options: Record<string, any> | null;
        operation: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }>;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_operations", {
    id: string;
    name: string | null;
    key: string;
    type: string;
    position_x: number;
    position_y: number;
    timestamp: string;
    options: Record<string, any> | null;
    resolve: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
    reject: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
    flow: string | MergeCoreCollection<Schema, "directus_flows", {
        id: string;
        name: string;
        icon: string | null;
        color: string | null;
        description: string | null;
        status: string;
        trigger: string | null;
        accountability: string | null; /**
         * List all operations that exist in Directus.
         * @param query The query parameters
         * @returns An array of up to limit operation objects. If no items are available, data will be an empty array.
         */
        options: Record<string, any> | null;
        operation: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }>;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_operations", {
    id: string;
    name: string | null;
    key: string;
    type: string;
    position_x: number;
    position_y: number;
    timestamp: string;
    options: Record<string, any> | null;
    resolve: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
    reject: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
    flow: string | MergeCoreCollection<Schema, "directus_flows", {
        id: string;
        name: string;
        icon: string | null;
        color: string | null;
        description: string | null;
        status: string;
        trigger: string | null;
        accountability: string | null; /**
         * List all operations that exist in Directus.
         * @param query The query parameters
         * @returns An array of up to limit operation objects. If no items are available, data will be an empty array.
         */
        options: Record<string, any> | null;
        operation: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }>;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_operations", {
    id: string;
    name: string | null;
    key: string;
    type: string;
    position_x: number;
    position_y: number;
    timestamp: string;
    options: Record<string, any> | null;
    resolve: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
    reject: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
    flow: string | MergeCoreCollection<Schema, "directus_flows", {
        id: string;
        name: string;
        icon: string | null;
        color: string | null;
        description: string | null;
        status: string;
        trigger: string | null;
        accountability: string | null; /**
         * List all operations that exist in Directus.
         * @param query The query parameters
         * @returns An array of up to limit operation objects. If no items are available, data will be an empty array.
         */
        options: Record<string, any> | null;
        operation: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }>;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_operations", {
    id: string;
    name: string | null;
    key: string;
    type: string;
    position_x: number;
    position_y: number;
    timestamp: string;
    options: Record<string, any> | null;
    resolve: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
    reject: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
    flow: string | MergeCoreCollection<Schema, "directus_flows", {
        id: string;
        name: string;
        icon: string | null;
        color: string | null;
        description: string | null;
        status: string;
        trigger: string | null;
        accountability: string | null; /**
         * List all operations that exist in Directus.
         * @param query The query parameters
         * @returns An array of up to limit operation objects. If no items are available, data will be an empty array.
         */
        options: Record<string, any> | null;
        operation: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }>;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>, Schema>;

type ReadPanelOutput<Schema extends object, TQuery extends Query<Schema, Item>, Item extends object = DirectusPanel<Schema>> = ApplyQueryFields<Schema, Item, TQuery['fields']>;
/**
 * List all Panels that exist in Directus.
 * @param query The query parameters
 * @returns An array of up to limit panel objects. If no items are available, data will be an empty array.
 */
declare const readPanels: <Schema extends object, const TQuery extends Query<Schema, DirectusPanel<Schema>>>(query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_panels", {
    id: string;
    dashboard: string | MergeCoreCollection<Schema, "directus_dashboards", {
        id: string;
        name: string;
        icon: string;
        note: string | null;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                /**
                 * List all Panels that exist in Directus.
                 * @param query The query parameters
                 * @returns An array of up to limit panel objects. If no items are available, data will be an empty array.
                 */
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
        color: string | null;
    }>;
    name: string | null;
    icon: string | null;
    color: string | null;
    show_header: boolean;
    note: string | null;
    type: string;
    position_x: number;
    position_y: number;
    width: number;
    height: number;
    options: Record<string, any> | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            /**
             * List all Panels that exist in Directus.
             * @param query The query parameters
             * @returns An array of up to limit panel objects. If no items are available, data will be an empty array.
             */
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_panels", {
    id: string;
    dashboard: string | MergeCoreCollection<Schema, "directus_dashboards", {
        id: string;
        name: string;
        icon: string;
        note: string | null;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                /**
                 * List all Panels that exist in Directus.
                 * @param query The query parameters
                 * @returns An array of up to limit panel objects. If no items are available, data will be an empty array.
                 */
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
        color: string | null;
    }>;
    name: string | null;
    icon: string | null;
    color: string | null;
    show_header: boolean;
    note: string | null;
    type: string;
    position_x: number;
    position_y: number;
    width: number;
    height: number;
    options: Record<string, any> | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            /**
             * List all Panels that exist in Directus.
             * @param query The query parameters
             * @returns An array of up to limit panel objects. If no items are available, data will be an empty array.
             */
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_panels", {
    id: string;
    dashboard: string | MergeCoreCollection<Schema, "directus_dashboards", {
        id: string;
        name: string;
        icon: string;
        note: string | null;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                /**
                 * List all Panels that exist in Directus.
                 * @param query The query parameters
                 * @returns An array of up to limit panel objects. If no items are available, data will be an empty array.
                 */
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
        color: string | null;
    }>;
    name: string | null;
    icon: string | null;
    color: string | null;
    show_header: boolean;
    note: string | null;
    type: string;
    position_x: number;
    position_y: number;
    width: number;
    height: number;
    options: Record<string, any> | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            /**
             * List all Panels that exist in Directus.
             * @param query The query parameters
             * @returns An array of up to limit panel objects. If no items are available, data will be an empty array.
             */
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_panels", {
    id: string;
    dashboard: string | MergeCoreCollection<Schema, "directus_dashboards", {
        id: string;
        name: string;
        icon: string;
        note: string | null;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                /**
                 * List all Panels that exist in Directus.
                 * @param query The query parameters
                 * @returns An array of up to limit panel objects. If no items are available, data will be an empty array.
                 */
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
        color: string | null;
    }>;
    name: string | null;
    icon: string | null;
    color: string | null;
    show_header: boolean;
    note: string | null;
    type: string;
    position_x: number;
    position_y: number;
    width: number;
    height: number;
    options: Record<string, any> | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            /**
             * List all Panels that exist in Directus.
             * @param query The query parameters
             * @returns An array of up to limit panel objects. If no items are available, data will be an empty array.
             */
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_panels", {
    id: string;
    dashboard: string | MergeCoreCollection<Schema, "directus_dashboards", {
        id: string;
        name: string;
        icon: string;
        note: string | null;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                /**
                 * List all Panels that exist in Directus.
                 * @param query The query parameters
                 * @returns An array of up to limit panel objects. If no items are available, data will be an empty array.
                 */
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
        color: string | null;
    }>;
    name: string | null;
    icon: string | null;
    color: string | null;
    show_header: boolean;
    note: string | null;
    type: string;
    position_x: number;
    position_y: number;
    width: number;
    height: number;
    options: Record<string, any> | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            /**
             * List all Panels that exist in Directus.
             * @param query The query parameters
             * @returns An array of up to limit panel objects. If no items are available, data will be an empty array.
             */
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_panels", {
    id: string;
    dashboard: string | MergeCoreCollection<Schema, "directus_dashboards", {
        id: string;
        name: string;
        icon: string;
        note: string | null;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                /**
                 * List all Panels that exist in Directus.
                 * @param query The query parameters
                 * @returns An array of up to limit panel objects. If no items are available, data will be an empty array.
                 */
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
        color: string | null;
    }>;
    name: string | null;
    icon: string | null;
    color: string | null;
    show_header: boolean;
    note: string | null;
    type: string;
    position_x: number;
    position_y: number;
    width: number;
    height: number;
    options: Record<string, any> | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            /**
             * List all Panels that exist in Directus.
             * @param query The query parameters
             * @returns An array of up to limit panel objects. If no items are available, data will be an empty array.
             */
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>[], Schema>;
/**
 * List an existing panel by primary key.
 * @param key The primary key of the dashboard
 * @param query The query parameters
 * @returns Returns the requested panel object.
 * @throws Will throw if key is empty
 */
declare const readPanel: <Schema extends object, const TQuery extends Query<Schema, DirectusPanel<Schema>>>(key: DirectusPanel<Schema>["id"], query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_panels", {
    id: string;
    dashboard: string | MergeCoreCollection<Schema, "directus_dashboards", {
        id: string;
        name: string;
        icon: string;
        note: string | null;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                /**
                 * List all Panels that exist in Directus.
                 * @param query The query parameters
                 * @returns An array of up to limit panel objects. If no items are available, data will be an empty array.
                 */
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
        color: string | null;
    }>;
    name: string | null;
    icon: string | null;
    color: string | null;
    show_header: boolean;
    note: string | null;
    type: string;
    position_x: number;
    position_y: number;
    width: number;
    height: number;
    options: Record<string, any> | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            /**
             * List all Panels that exist in Directus.
             * @param query The query parameters
             * @returns An array of up to limit panel objects. If no items are available, data will be an empty array.
             */
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_panels", {
    id: string;
    dashboard: string | MergeCoreCollection<Schema, "directus_dashboards", {
        id: string;
        name: string;
        icon: string;
        note: string | null;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                /**
                 * List all Panels that exist in Directus.
                 * @param query The query parameters
                 * @returns An array of up to limit panel objects. If no items are available, data will be an empty array.
                 */
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
        color: string | null;
    }>;
    name: string | null;
    icon: string | null;
    color: string | null;
    show_header: boolean;
    note: string | null;
    type: string;
    position_x: number;
    position_y: number;
    width: number;
    height: number;
    options: Record<string, any> | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            /**
             * List all Panels that exist in Directus.
             * @param query The query parameters
             * @returns An array of up to limit panel objects. If no items are available, data will be an empty array.
             */
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_panels", {
    id: string;
    dashboard: string | MergeCoreCollection<Schema, "directus_dashboards", {
        id: string;
        name: string;
        icon: string;
        note: string | null;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                /**
                 * List all Panels that exist in Directus.
                 * @param query The query parameters
                 * @returns An array of up to limit panel objects. If no items are available, data will be an empty array.
                 */
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
        color: string | null;
    }>;
    name: string | null;
    icon: string | null;
    color: string | null;
    show_header: boolean;
    note: string | null;
    type: string;
    position_x: number;
    position_y: number;
    width: number;
    height: number;
    options: Record<string, any> | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            /**
             * List all Panels that exist in Directus.
             * @param query The query parameters
             * @returns An array of up to limit panel objects. If no items are available, data will be an empty array.
             */
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_panels", {
    id: string;
    dashboard: string | MergeCoreCollection<Schema, "directus_dashboards", {
        id: string;
        name: string;
        icon: string;
        note: string | null;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                /**
                 * List all Panels that exist in Directus.
                 * @param query The query parameters
                 * @returns An array of up to limit panel objects. If no items are available, data will be an empty array.
                 */
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
        color: string | null;
    }>;
    name: string | null;
    icon: string | null;
    color: string | null;
    show_header: boolean;
    note: string | null;
    type: string;
    position_x: number;
    position_y: number;
    width: number;
    height: number;
    options: Record<string, any> | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            /**
             * List all Panels that exist in Directus.
             * @param query The query parameters
             * @returns An array of up to limit panel objects. If no items are available, data will be an empty array.
             */
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_panels", {
    id: string;
    dashboard: string | MergeCoreCollection<Schema, "directus_dashboards", {
        id: string;
        name: string;
        icon: string;
        note: string | null;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                /**
                 * List all Panels that exist in Directus.
                 * @param query The query parameters
                 * @returns An array of up to limit panel objects. If no items are available, data will be an empty array.
                 */
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
        color: string | null;
    }>;
    name: string | null;
    icon: string | null;
    color: string | null;
    show_header: boolean;
    note: string | null;
    type: string;
    position_x: number;
    position_y: number;
    width: number;
    height: number;
    options: Record<string, any> | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            /**
             * List all Panels that exist in Directus.
             * @param query The query parameters
             * @returns An array of up to limit panel objects. If no items are available, data will be an empty array.
             */
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_panels", {
    id: string;
    dashboard: string | MergeCoreCollection<Schema, "directus_dashboards", {
        id: string;
        name: string;
        icon: string;
        note: string | null;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                /**
                 * List all Panels that exist in Directus.
                 * @param query The query parameters
                 * @returns An array of up to limit panel objects. If no items are available, data will be an empty array.
                 */
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
        color: string | null;
    }>;
    name: string | null;
    icon: string | null;
    color: string | null;
    show_header: boolean;
    note: string | null;
    type: string;
    position_x: number;
    position_y: number;
    width: number;
    height: number;
    options: Record<string, any> | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            /**
             * List all Panels that exist in Directus.
             * @param query The query parameters
             * @returns An array of up to limit panel objects. If no items are available, data will be an empty array.
             */
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>, Schema>;

type ReadPermissionOutput<Schema extends object, TQuery extends Query<Schema, Item>, Item extends object = DirectusPermission<Schema>> = ApplyQueryFields<Schema, Item, TQuery['fields']>;
/**
 * List all Permissions that exist in Directus.
 * @param query The query parameters
 * @returns An array of up to limit Permission objects. If no items are available, data will be an empty array.
 */
declare const readPermissions: <Schema extends object, const TQuery extends Query<Schema, DirectusPermission<Schema>>>(query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_permissions", {
    id: number;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    collection: string;
    action: string;
    permissions: Record<string, any> | null;
    validation: Record<string, any> | null;
    presets: Record<string, any> | null;
    fields: string[] | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_permissions", {
    id: number;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    collection: string;
    action: string;
    permissions: Record<string, any> | null;
    validation: Record<string, any> | null;
    presets: Record<string, any> | null;
    fields: string[] | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_permissions", {
    id: number;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    collection: string;
    action: string;
    permissions: Record<string, any> | null;
    validation: Record<string, any> | null;
    presets: Record<string, any> | null;
    fields: string[] | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_permissions", {
    id: number;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    collection: string;
    action: string;
    permissions: Record<string, any> | null;
    validation: Record<string, any> | null;
    presets: Record<string, any> | null;
    fields: string[] | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_permissions", {
    id: number;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    collection: string;
    action: string;
    permissions: Record<string, any> | null;
    validation: Record<string, any> | null;
    presets: Record<string, any> | null;
    fields: string[] | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_permissions", {
    id: number;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    collection: string;
    action: string;
    permissions: Record<string, any> | null;
    validation: Record<string, any> | null;
    presets: Record<string, any> | null;
    fields: string[] | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>[], Schema>;
/**
 * List all Permissions that exist in Directus.
 * @param key The primary key of the dashboard
 * @param query The query parameters
 * @returns Returns a Permission object if a valid primary key was provided.
 * @throws Will throw if key is empty
 */
declare const readPermission: <Schema extends object, const TQuery extends Query<Schema, DirectusPermission<Schema>>>(key: DirectusPermission<Schema>["id"], query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_permissions", {
    id: number;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    collection: string;
    action: string;
    permissions: Record<string, any> | null;
    validation: Record<string, any> | null;
    presets: Record<string, any> | null;
    fields: string[] | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_permissions", {
    id: number;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    collection: string;
    action: string;
    permissions: Record<string, any> | null;
    validation: Record<string, any> | null;
    presets: Record<string, any> | null;
    fields: string[] | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_permissions", {
    id: number;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    collection: string;
    action: string;
    permissions: Record<string, any> | null;
    validation: Record<string, any> | null;
    presets: Record<string, any> | null;
    fields: string[] | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_permissions", {
    id: number;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    collection: string;
    action: string;
    permissions: Record<string, any> | null;
    validation: Record<string, any> | null;
    presets: Record<string, any> | null;
    fields: string[] | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_permissions", {
    id: number;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    collection: string;
    action: string;
    permissions: Record<string, any> | null;
    validation: Record<string, any> | null;
    presets: Record<string, any> | null;
    fields: string[] | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_permissions", {
    id: number;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    collection: string;
    action: string;
    permissions: Record<string, any> | null;
    validation: Record<string, any> | null;
    presets: Record<string, any> | null;
    fields: string[] | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>, Schema>;

type ReadPresetOutput<Schema extends object, TQuery extends Query<Schema, Item>, Item extends object = DirectusPreset<Schema>> = ApplyQueryFields<Schema, Item, TQuery['fields']>;
/**
 * List all Presets that exist in Directus.
 * @param query The query parameters
 * @returns An array of up to limit Preset objects. If no items are available, data will be an empty array.
 */
declare const readPresets: <Schema extends object, const TQuery extends Query<Schema, DirectusPreset<Schema>>>(query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_presets", {
    id: number;
    bookmark: string | null;
    user: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    collection: string | null;
    search: string | null;
    layout: string | null;
    layout_query: Record<string, any> | null;
    layout_options: Record<string, any> | null;
    refresh_interval: number | null;
    filter: Record<string, any> | null;
    icon: string | null;
    color: string | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_presets", {
    id: number;
    bookmark: string | null;
    user: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    collection: string | null;
    search: string | null;
    layout: string | null;
    layout_query: Record<string, any> | null;
    layout_options: Record<string, any> | null;
    refresh_interval: number | null;
    filter: Record<string, any> | null;
    icon: string | null;
    color: string | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_presets", {
    id: number;
    bookmark: string | null;
    user: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    collection: string | null;
    search: string | null;
    layout: string | null;
    layout_query: Record<string, any> | null;
    layout_options: Record<string, any> | null;
    refresh_interval: number | null;
    filter: Record<string, any> | null;
    icon: string | null;
    color: string | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_presets", {
    id: number;
    bookmark: string | null;
    user: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    collection: string | null;
    search: string | null;
    layout: string | null;
    layout_query: Record<string, any> | null;
    layout_options: Record<string, any> | null;
    refresh_interval: number | null;
    filter: Record<string, any> | null;
    icon: string | null;
    color: string | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_presets", {
    id: number;
    bookmark: string | null;
    user: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    collection: string | null;
    search: string | null;
    layout: string | null;
    layout_query: Record<string, any> | null;
    layout_options: Record<string, any> | null;
    refresh_interval: number | null;
    filter: Record<string, any> | null;
    icon: string | null;
    color: string | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_presets", {
    id: number;
    bookmark: string | null;
    user: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    collection: string | null;
    search: string | null;
    layout: string | null;
    layout_query: Record<string, any> | null;
    layout_options: Record<string, any> | null;
    refresh_interval: number | null;
    filter: Record<string, any> | null;
    icon: string | null;
    color: string | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>[], Schema>;
/**
 * List an existing preset by primary key.
 * @param key The primary key of the dashboard
 * @param query The query parameters
 * @returns Returns a Preset object if a valid primary key was provided.
 * @throws Will throw if key is empty
 */
declare const readPreset: <Schema extends object, const TQuery extends Query<Schema, DirectusPreset<Schema>>>(key: DirectusPreset<Schema>["id"], query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_presets", {
    id: number;
    bookmark: string | null;
    user: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    collection: string | null;
    search: string | null;
    layout: string | null;
    layout_query: Record<string, any> | null;
    layout_options: Record<string, any> | null;
    refresh_interval: number | null;
    filter: Record<string, any> | null;
    icon: string | null;
    color: string | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_presets", {
    id: number;
    bookmark: string | null;
    user: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    collection: string | null;
    search: string | null;
    layout: string | null;
    layout_query: Record<string, any> | null;
    layout_options: Record<string, any> | null;
    refresh_interval: number | null;
    filter: Record<string, any> | null;
    icon: string | null;
    color: string | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_presets", {
    id: number;
    bookmark: string | null;
    user: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    collection: string | null;
    search: string | null;
    layout: string | null;
    layout_query: Record<string, any> | null;
    layout_options: Record<string, any> | null;
    refresh_interval: number | null;
    filter: Record<string, any> | null;
    icon: string | null;
    color: string | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_presets", {
    id: number;
    bookmark: string | null;
    user: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    collection: string | null;
    search: string | null;
    layout: string | null;
    layout_query: Record<string, any> | null;
    layout_options: Record<string, any> | null;
    refresh_interval: number | null;
    filter: Record<string, any> | null;
    icon: string | null;
    color: string | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_presets", {
    id: number;
    bookmark: string | null;
    user: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    collection: string | null;
    search: string | null;
    layout: string | null;
    layout_query: Record<string, any> | null;
    layout_options: Record<string, any> | null;
    refresh_interval: number | null;
    filter: Record<string, any> | null;
    icon: string | null;
    color: string | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_presets", {
    id: number;
    bookmark: string | null;
    user: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    collection: string | null;
    search: string | null;
    layout: string | null;
    layout_query: Record<string, any> | null;
    layout_options: Record<string, any> | null;
    refresh_interval: number | null;
    filter: Record<string, any> | null;
    icon: string | null;
    color: string | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>, Schema>;

type ReadRelationOutput<Schema extends object, Item extends object = DirectusRelation<Schema>> = ApplyQueryFields<Schema, Item, '*'>;
/**
 * List all Relations that exist in Directus.
 * @param query The query parameters
 * @returns An array of up to limit Relation objects. If no items are available, data will be an empty array.
 */
declare const readRelations: <Schema extends object>() => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, DirectusRelation<Schema>> extends infer FF ? MapFlatFields<DirectusRelation<Schema>, keyof DirectusRelation<Schema>, FF extends Record<string, string> ? FF : Record<string, string>> : never, {}>>[], Schema>;
/**
 * List an existing Relation by primary key.
 * @param collection The collection
 * @returns Returns a Relation object if a valid primary key was provided.
 * @throws Will throw if collection is empty
 */
declare const readRelationByCollection: <Schema extends object>(collection: string) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, DirectusRelation<Schema>> extends infer FF ? MapFlatFields<DirectusRelation<Schema>, keyof DirectusRelation<Schema>, FF extends Record<string, string> ? FF : Record<string, string>> : never, {}>>, Schema>;
/**
 * List an existing Relation by primary key.
 * @param collection The collection
 * @param field The field
 * @returns Returns a Relation object if a valid primary key was provided.
 * @throws Will throw if collection is empty
 * @throws Will throw if field is empty
 */
declare const readRelation: <Schema extends object, const TQuery extends Query<Schema, DirectusRelation<Schema>>>(collection: string, field: string) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<TQuery>> extends infer FF ? MapFlatFields<UnpackList<TQuery>, keyof UnpackList<TQuery>, FF extends Record<string, string> ? FF : Record<string, string>> : never, {}>>, Schema>;

type ReadRevisionOutput<Schema extends object, TQuery extends Query<Schema, Item>, Item extends object = DirectusRevision<Schema>> = ApplyQueryFields<Schema, Item, TQuery['fields']>;
/**
 * List all Revisions that exist in Directus.
 * @param query The query parameters
 * @returns An array of up to limit Revision objects. If no items are available, data will be an empty array.
 */
declare const readRevisions: <Schema extends object, const TQuery extends Query<Schema, DirectusRevision<Schema>>>(query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_revisions", {
    id: number;
    activity: number | MergeCoreCollection<Schema, "directus_activity", {
        id: number;
        action: string;
        user: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
        timestamp: "datetime";
        ip: string | null;
        user_agent: string | null;
        collection: string; /**
         * List all Revisions that exist in Directus.
         * @param query The query parameters
         * @returns An array of up to limit Revision objects. If no items are available, data will be an empty array.
         */
        item: string;
        comment: string | null;
        origin: string | null;
        revisions: number[] | MergeCoreCollection<Schema, "directus_revisions", any>[] | null;
    }>;
    collection: string;
    item: string;
    data: Record<string, any> | null;
    delta: Record<string, any> | null;
    parent: number | MergeCoreCollection<Schema, "directus_revisions", any> | null;
    version: string | MergeCoreCollection<Schema, "directus_versions", {
        id: string;
        key: string;
        name: string | null;
        collection: string | DirectusCollection<Schema>;
        item: string;
        hash: string;
        date_created: "datetime" | null;
        /**
         * List all Revisions that exist in Directus.
         * @param query The query parameters
         * @returns An array of up to limit Revision objects. If no items are available, data will be an empty array.
         */
        date_updated: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
        user_updated: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }> | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_revisions", {
    id: number;
    activity: number | MergeCoreCollection<Schema, "directus_activity", {
        id: number;
        action: string;
        user: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
        timestamp: "datetime";
        ip: string | null;
        user_agent: string | null;
        collection: string; /**
         * List all Revisions that exist in Directus.
         * @param query The query parameters
         * @returns An array of up to limit Revision objects. If no items are available, data will be an empty array.
         */
        item: string;
        comment: string | null;
        origin: string | null;
        revisions: number[] | MergeCoreCollection<Schema, "directus_revisions", any>[] | null;
    }>;
    collection: string;
    item: string;
    data: Record<string, any> | null;
    delta: Record<string, any> | null;
    parent: number | MergeCoreCollection<Schema, "directus_revisions", any> | null;
    version: string | MergeCoreCollection<Schema, "directus_versions", {
        id: string;
        key: string;
        name: string | null;
        collection: string | DirectusCollection<Schema>;
        item: string;
        hash: string;
        date_created: "datetime" | null;
        /**
         * List all Revisions that exist in Directus.
         * @param query The query parameters
         * @returns An array of up to limit Revision objects. If no items are available, data will be an empty array.
         */
        date_updated: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
        user_updated: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }> | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_revisions", {
    id: number;
    activity: number | MergeCoreCollection<Schema, "directus_activity", {
        id: number;
        action: string;
        user: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
        timestamp: "datetime";
        ip: string | null;
        user_agent: string | null;
        collection: string; /**
         * List all Revisions that exist in Directus.
         * @param query The query parameters
         * @returns An array of up to limit Revision objects. If no items are available, data will be an empty array.
         */
        item: string;
        comment: string | null;
        origin: string | null;
        revisions: number[] | MergeCoreCollection<Schema, "directus_revisions", any>[] | null;
    }>;
    collection: string;
    item: string;
    data: Record<string, any> | null;
    delta: Record<string, any> | null;
    parent: number | MergeCoreCollection<Schema, "directus_revisions", any> | null;
    version: string | MergeCoreCollection<Schema, "directus_versions", {
        id: string;
        key: string;
        name: string | null;
        collection: string | DirectusCollection<Schema>;
        item: string;
        hash: string;
        date_created: "datetime" | null;
        /**
         * List all Revisions that exist in Directus.
         * @param query The query parameters
         * @returns An array of up to limit Revision objects. If no items are available, data will be an empty array.
         */
        date_updated: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
        user_updated: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }> | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_revisions", {
    id: number;
    activity: number | MergeCoreCollection<Schema, "directus_activity", {
        id: number;
        action: string;
        user: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
        timestamp: "datetime";
        ip: string | null;
        user_agent: string | null;
        collection: string; /**
         * List all Revisions that exist in Directus.
         * @param query The query parameters
         * @returns An array of up to limit Revision objects. If no items are available, data will be an empty array.
         */
        item: string;
        comment: string | null;
        origin: string | null;
        revisions: number[] | MergeCoreCollection<Schema, "directus_revisions", any>[] | null;
    }>;
    collection: string;
    item: string;
    data: Record<string, any> | null;
    delta: Record<string, any> | null;
    parent: number | MergeCoreCollection<Schema, "directus_revisions", any> | null;
    version: string | MergeCoreCollection<Schema, "directus_versions", {
        id: string;
        key: string;
        name: string | null;
        collection: string | DirectusCollection<Schema>;
        item: string;
        hash: string;
        date_created: "datetime" | null;
        /**
         * List all Revisions that exist in Directus.
         * @param query The query parameters
         * @returns An array of up to limit Revision objects. If no items are available, data will be an empty array.
         */
        date_updated: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
        user_updated: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }> | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_revisions", {
    id: number;
    activity: number | MergeCoreCollection<Schema, "directus_activity", {
        id: number;
        action: string;
        user: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
        timestamp: "datetime";
        ip: string | null;
        user_agent: string | null;
        collection: string; /**
         * List all Revisions that exist in Directus.
         * @param query The query parameters
         * @returns An array of up to limit Revision objects. If no items are available, data will be an empty array.
         */
        item: string;
        comment: string | null;
        origin: string | null;
        revisions: number[] | MergeCoreCollection<Schema, "directus_revisions", any>[] | null;
    }>;
    collection: string;
    item: string;
    data: Record<string, any> | null;
    delta: Record<string, any> | null;
    parent: number | MergeCoreCollection<Schema, "directus_revisions", any> | null;
    version: string | MergeCoreCollection<Schema, "directus_versions", {
        id: string;
        key: string;
        name: string | null;
        collection: string | DirectusCollection<Schema>;
        item: string;
        hash: string;
        date_created: "datetime" | null;
        /**
         * List all Revisions that exist in Directus.
         * @param query The query parameters
         * @returns An array of up to limit Revision objects. If no items are available, data will be an empty array.
         */
        date_updated: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
        user_updated: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }> | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_revisions", {
    id: number;
    activity: number | MergeCoreCollection<Schema, "directus_activity", {
        id: number;
        action: string;
        user: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
        timestamp: "datetime";
        ip: string | null;
        user_agent: string | null;
        collection: string; /**
         * List all Revisions that exist in Directus.
         * @param query The query parameters
         * @returns An array of up to limit Revision objects. If no items are available, data will be an empty array.
         */
        item: string;
        comment: string | null;
        origin: string | null;
        revisions: number[] | MergeCoreCollection<Schema, "directus_revisions", any>[] | null;
    }>;
    collection: string;
    item: string;
    data: Record<string, any> | null;
    delta: Record<string, any> | null;
    parent: number | MergeCoreCollection<Schema, "directus_revisions", any> | null;
    version: string | MergeCoreCollection<Schema, "directus_versions", {
        id: string;
        key: string;
        name: string | null;
        collection: string | DirectusCollection<Schema>;
        item: string;
        hash: string;
        date_created: "datetime" | null;
        /**
         * List all Revisions that exist in Directus.
         * @param query The query parameters
         * @returns An array of up to limit Revision objects. If no items are available, data will be an empty array.
         */
        date_updated: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
        user_updated: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }> | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>[], Schema>;
/**
 * List an existing Revision by primary key.
 * @param key The primary key of the dashboard
 * @param query The query parameters
 * @returns Returns a Revision object if a valid primary key was provided.
 * @throws Will throw if key is empty
 */
declare const readRevision: <Schema extends object, const TQuery extends Query<Schema, DirectusRevision<Schema>>>(key: DirectusRevision<Schema>["id"], query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_revisions", {
    id: number;
    activity: number | MergeCoreCollection<Schema, "directus_activity", {
        id: number;
        action: string;
        user: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
        timestamp: "datetime";
        ip: string | null;
        user_agent: string | null;
        collection: string; /**
         * List all Revisions that exist in Directus.
         * @param query The query parameters
         * @returns An array of up to limit Revision objects. If no items are available, data will be an empty array.
         */
        item: string;
        comment: string | null;
        origin: string | null;
        revisions: number[] | MergeCoreCollection<Schema, "directus_revisions", any>[] | null;
    }>;
    collection: string;
    item: string;
    data: Record<string, any> | null;
    delta: Record<string, any> | null;
    parent: number | MergeCoreCollection<Schema, "directus_revisions", any> | null;
    version: string | MergeCoreCollection<Schema, "directus_versions", {
        id: string;
        key: string;
        name: string | null;
        collection: string | DirectusCollection<Schema>;
        item: string;
        hash: string;
        date_created: "datetime" | null;
        /**
         * List all Revisions that exist in Directus.
         * @param query The query parameters
         * @returns An array of up to limit Revision objects. If no items are available, data will be an empty array.
         */
        date_updated: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
        user_updated: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }> | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_revisions", {
    id: number;
    activity: number | MergeCoreCollection<Schema, "directus_activity", {
        id: number;
        action: string;
        user: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
        timestamp: "datetime";
        ip: string | null;
        user_agent: string | null;
        collection: string; /**
         * List all Revisions that exist in Directus.
         * @param query The query parameters
         * @returns An array of up to limit Revision objects. If no items are available, data will be an empty array.
         */
        item: string;
        comment: string | null;
        origin: string | null;
        revisions: number[] | MergeCoreCollection<Schema, "directus_revisions", any>[] | null;
    }>;
    collection: string;
    item: string;
    data: Record<string, any> | null;
    delta: Record<string, any> | null;
    parent: number | MergeCoreCollection<Schema, "directus_revisions", any> | null;
    version: string | MergeCoreCollection<Schema, "directus_versions", {
        id: string;
        key: string;
        name: string | null;
        collection: string | DirectusCollection<Schema>;
        item: string;
        hash: string;
        date_created: "datetime" | null;
        /**
         * List all Revisions that exist in Directus.
         * @param query The query parameters
         * @returns An array of up to limit Revision objects. If no items are available, data will be an empty array.
         */
        date_updated: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
        user_updated: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }> | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_revisions", {
    id: number;
    activity: number | MergeCoreCollection<Schema, "directus_activity", {
        id: number;
        action: string;
        user: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
        timestamp: "datetime";
        ip: string | null;
        user_agent: string | null;
        collection: string; /**
         * List all Revisions that exist in Directus.
         * @param query The query parameters
         * @returns An array of up to limit Revision objects. If no items are available, data will be an empty array.
         */
        item: string;
        comment: string | null;
        origin: string | null;
        revisions: number[] | MergeCoreCollection<Schema, "directus_revisions", any>[] | null;
    }>;
    collection: string;
    item: string;
    data: Record<string, any> | null;
    delta: Record<string, any> | null;
    parent: number | MergeCoreCollection<Schema, "directus_revisions", any> | null;
    version: string | MergeCoreCollection<Schema, "directus_versions", {
        id: string;
        key: string;
        name: string | null;
        collection: string | DirectusCollection<Schema>;
        item: string;
        hash: string;
        date_created: "datetime" | null;
        /**
         * List all Revisions that exist in Directus.
         * @param query The query parameters
         * @returns An array of up to limit Revision objects. If no items are available, data will be an empty array.
         */
        date_updated: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
        user_updated: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }> | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_revisions", {
    id: number;
    activity: number | MergeCoreCollection<Schema, "directus_activity", {
        id: number;
        action: string;
        user: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
        timestamp: "datetime";
        ip: string | null;
        user_agent: string | null;
        collection: string; /**
         * List all Revisions that exist in Directus.
         * @param query The query parameters
         * @returns An array of up to limit Revision objects. If no items are available, data will be an empty array.
         */
        item: string;
        comment: string | null;
        origin: string | null;
        revisions: number[] | MergeCoreCollection<Schema, "directus_revisions", any>[] | null;
    }>;
    collection: string;
    item: string;
    data: Record<string, any> | null;
    delta: Record<string, any> | null;
    parent: number | MergeCoreCollection<Schema, "directus_revisions", any> | null;
    version: string | MergeCoreCollection<Schema, "directus_versions", {
        id: string;
        key: string;
        name: string | null;
        collection: string | DirectusCollection<Schema>;
        item: string;
        hash: string;
        date_created: "datetime" | null;
        /**
         * List all Revisions that exist in Directus.
         * @param query The query parameters
         * @returns An array of up to limit Revision objects. If no items are available, data will be an empty array.
         */
        date_updated: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
        user_updated: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }> | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_revisions", {
    id: number;
    activity: number | MergeCoreCollection<Schema, "directus_activity", {
        id: number;
        action: string;
        user: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
        timestamp: "datetime";
        ip: string | null;
        user_agent: string | null;
        collection: string; /**
         * List all Revisions that exist in Directus.
         * @param query The query parameters
         * @returns An array of up to limit Revision objects. If no items are available, data will be an empty array.
         */
        item: string;
        comment: string | null;
        origin: string | null;
        revisions: number[] | MergeCoreCollection<Schema, "directus_revisions", any>[] | null;
    }>;
    collection: string;
    item: string;
    data: Record<string, any> | null;
    delta: Record<string, any> | null;
    parent: number | MergeCoreCollection<Schema, "directus_revisions", any> | null;
    version: string | MergeCoreCollection<Schema, "directus_versions", {
        id: string;
        key: string;
        name: string | null;
        collection: string | DirectusCollection<Schema>;
        item: string;
        hash: string;
        date_created: "datetime" | null;
        /**
         * List all Revisions that exist in Directus.
         * @param query The query parameters
         * @returns An array of up to limit Revision objects. If no items are available, data will be an empty array.
         */
        date_updated: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
        user_updated: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }> | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_revisions", {
    id: number;
    activity: number | MergeCoreCollection<Schema, "directus_activity", {
        id: number;
        action: string;
        user: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
        timestamp: "datetime";
        ip: string | null;
        user_agent: string | null;
        collection: string; /**
         * List all Revisions that exist in Directus.
         * @param query The query parameters
         * @returns An array of up to limit Revision objects. If no items are available, data will be an empty array.
         */
        item: string;
        comment: string | null;
        origin: string | null;
        revisions: number[] | MergeCoreCollection<Schema, "directus_revisions", any>[] | null;
    }>;
    collection: string;
    item: string;
    data: Record<string, any> | null;
    delta: Record<string, any> | null;
    parent: number | MergeCoreCollection<Schema, "directus_revisions", any> | null;
    version: string | MergeCoreCollection<Schema, "directus_versions", {
        id: string;
        key: string;
        name: string | null;
        collection: string | DirectusCollection<Schema>;
        item: string;
        hash: string;
        date_created: "datetime" | null;
        /**
         * List all Revisions that exist in Directus.
         * @param query The query parameters
         * @returns An array of up to limit Revision objects. If no items are available, data will be an empty array.
         */
        date_updated: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
        user_updated: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }> | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>, Schema>;

type ReadRoleOutput<Schema extends object, TQuery extends Query<Schema, Item>, Item extends object = DirectusRole<Schema>> = ApplyQueryFields<Schema, Item, TQuery['fields']>;
/**
 * List all Roles that exist in Directus.
 * @param query The query parameters
 * @returns An array of up to limit Role objects. If no items are available, data will be an empty array.
 */
declare const readRoles: <Schema extends object, const TQuery extends Query<Schema, DirectusRole<Schema>>>(query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_roles", {
    id: string;
    name: string;
    icon: string;
    description: string | null;
    ip_access: string | null;
    enforce_tfa: boolean;
    admin_access: boolean;
    app_access: boolean;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_roles", {
    id: string;
    name: string;
    icon: string;
    description: string | null;
    ip_access: string | null;
    enforce_tfa: boolean;
    admin_access: boolean;
    app_access: boolean;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_roles", {
    id: string;
    name: string;
    icon: string;
    description: string | null;
    ip_access: string | null;
    enforce_tfa: boolean;
    admin_access: boolean;
    app_access: boolean;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_roles", {
    id: string;
    name: string;
    icon: string;
    description: string | null;
    ip_access: string | null;
    enforce_tfa: boolean;
    admin_access: boolean;
    app_access: boolean;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_roles", {
    id: string;
    name: string;
    icon: string;
    description: string | null;
    ip_access: string | null;
    enforce_tfa: boolean;
    admin_access: boolean;
    app_access: boolean;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_roles", {
    id: string;
    name: string;
    icon: string;
    description: string | null;
    ip_access: string | null;
    enforce_tfa: boolean;
    admin_access: boolean;
    app_access: boolean;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>[], Schema>;
/**
 * List an existing Role by primary key.
 * @param key The primary key of the dashboard
 * @param query The query parameters
 * @returns Returns a Role object if a valid primary key was provided.
 * @throws Will throw if key is empty
 */
declare const readRole: <Schema extends object, const TQuery extends Query<Schema, DirectusRole<Schema>>>(key: DirectusRole<Schema>["id"], query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_roles", {
    id: string;
    name: string;
    icon: string;
    description: string | null;
    ip_access: string | null;
    enforce_tfa: boolean;
    admin_access: boolean;
    app_access: boolean;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_roles", {
    id: string;
    name: string;
    icon: string;
    description: string | null;
    ip_access: string | null;
    enforce_tfa: boolean;
    admin_access: boolean;
    app_access: boolean;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_roles", {
    id: string;
    name: string;
    icon: string;
    description: string | null;
    ip_access: string | null;
    enforce_tfa: boolean;
    admin_access: boolean;
    app_access: boolean;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_roles", {
    id: string;
    name: string;
    icon: string;
    description: string | null;
    ip_access: string | null;
    enforce_tfa: boolean;
    admin_access: boolean;
    app_access: boolean;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_roles", {
    id: string;
    name: string;
    icon: string;
    description: string | null;
    ip_access: string | null;
    enforce_tfa: boolean;
    admin_access: boolean;
    app_access: boolean;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_roles", {
    id: string;
    name: string;
    icon: string;
    description: string | null;
    ip_access: string | null;
    enforce_tfa: boolean;
    admin_access: boolean;
    app_access: boolean;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>, Schema>;

type ReadSettingOutput<Schema extends object, TQuery extends Query<Schema, Item>, Item extends object = DirectusSettings<Schema>> = ApplyQueryFields<Schema, Item, TQuery['fields']>;
/**
 * Retrieve Settings.
 *
 * @param query The query parameters
 *
 * @returns Returns the settings object.
 */
declare const readSettings: <Schema extends object, const TQuery extends Query<Schema, DirectusSettings<Schema>>>(query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_settings", {
    id: 1;
    project_name: string;
    project_url: string;
    project_color: string | null;
    project_logo: string | null;
    public_foreground: string | null;
    public_background: string | null;
    public_note: string | null;
    auth_login_attempts: number;
    auth_password_policy: string | null;
    storage_asset_transform: "all" | "none" | "presets";
    storage_asset_presets: {
        fit: string;
        height: number;
        width: number;
        quality: number;
        key: string;
        withoutEnlargement: boolean;
    }[] | null;
    custom_css: string | null;
    storage_default_folder: string | MergeCoreCollection<Schema, "directus_folders", {
        id: string;
        name: string;
        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
    }> | null;
    basemaps: Record<string, any> | null;
    mapbox_key: string | null;
    module_bar: "json" | null;
    project_descriptor: string | null;
    default_language: string;
    custom_aspect_ratios: Record<string, any> | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_settings", {
    id: 1;
    project_name: string;
    project_url: string;
    project_color: string | null;
    project_logo: string | null;
    public_foreground: string | null;
    public_background: string | null;
    public_note: string | null;
    auth_login_attempts: number;
    auth_password_policy: string | null;
    storage_asset_transform: "all" | "none" | "presets";
    storage_asset_presets: {
        fit: string;
        height: number;
        width: number;
        quality: number;
        key: string;
        withoutEnlargement: boolean;
    }[] | null;
    custom_css: string | null;
    storage_default_folder: string | MergeCoreCollection<Schema, "directus_folders", {
        id: string;
        name: string;
        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
    }> | null;
    basemaps: Record<string, any> | null;
    mapbox_key: string | null;
    module_bar: "json" | null;
    project_descriptor: string | null;
    default_language: string;
    custom_aspect_ratios: Record<string, any> | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_settings", {
    id: 1;
    project_name: string;
    project_url: string;
    project_color: string | null;
    project_logo: string | null;
    public_foreground: string | null;
    public_background: string | null;
    public_note: string | null;
    auth_login_attempts: number;
    auth_password_policy: string | null;
    storage_asset_transform: "all" | "none" | "presets";
    storage_asset_presets: {
        fit: string;
        height: number;
        width: number;
        quality: number;
        key: string;
        withoutEnlargement: boolean;
    }[] | null;
    custom_css: string | null;
    storage_default_folder: string | MergeCoreCollection<Schema, "directus_folders", {
        id: string;
        name: string;
        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
    }> | null;
    basemaps: Record<string, any> | null;
    mapbox_key: string | null;
    module_bar: "json" | null;
    project_descriptor: string | null;
    default_language: string;
    custom_aspect_ratios: Record<string, any> | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_settings", {
    id: 1;
    project_name: string;
    project_url: string;
    project_color: string | null;
    project_logo: string | null;
    public_foreground: string | null;
    public_background: string | null;
    public_note: string | null;
    auth_login_attempts: number;
    auth_password_policy: string | null;
    storage_asset_transform: "all" | "none" | "presets";
    storage_asset_presets: {
        fit: string;
        height: number;
        width: number;
        quality: number;
        key: string;
        withoutEnlargement: boolean;
    }[] | null;
    custom_css: string | null;
    storage_default_folder: string | MergeCoreCollection<Schema, "directus_folders", {
        id: string;
        name: string;
        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
    }> | null;
    basemaps: Record<string, any> | null;
    mapbox_key: string | null;
    module_bar: "json" | null;
    project_descriptor: string | null;
    default_language: string;
    custom_aspect_ratios: Record<string, any> | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_settings", {
    id: 1;
    project_name: string;
    project_url: string;
    project_color: string | null;
    project_logo: string | null;
    public_foreground: string | null;
    public_background: string | null;
    public_note: string | null;
    auth_login_attempts: number;
    auth_password_policy: string | null;
    storage_asset_transform: "all" | "none" | "presets";
    storage_asset_presets: {
        fit: string;
        height: number;
        width: number;
        quality: number;
        key: string;
        withoutEnlargement: boolean;
    }[] | null;
    custom_css: string | null;
    storage_default_folder: string | MergeCoreCollection<Schema, "directus_folders", {
        id: string;
        name: string;
        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
    }> | null;
    basemaps: Record<string, any> | null;
    mapbox_key: string | null;
    module_bar: "json" | null;
    project_descriptor: string | null;
    default_language: string;
    custom_aspect_ratios: Record<string, any> | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_settings", {
    id: 1;
    project_name: string;
    project_url: string;
    project_color: string | null;
    project_logo: string | null;
    public_foreground: string | null;
    public_background: string | null;
    public_note: string | null;
    auth_login_attempts: number;
    auth_password_policy: string | null;
    storage_asset_transform: "all" | "none" | "presets";
    storage_asset_presets: {
        fit: string;
        height: number;
        width: number;
        quality: number;
        key: string;
        withoutEnlargement: boolean;
    }[] | null;
    custom_css: string | null;
    storage_default_folder: string | MergeCoreCollection<Schema, "directus_folders", {
        id: string;
        name: string;
        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
    }> | null;
    basemaps: Record<string, any> | null;
    mapbox_key: string | null;
    module_bar: "json" | null;
    project_descriptor: string | null;
    default_language: string;
    custom_aspect_ratios: Record<string, any> | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>, Schema>;

type ReadShareOutput<Schema extends object, TQuery extends Query<Schema, Item>, Item extends object = DirectusShare<Schema>> = ApplyQueryFields<Schema, Item, TQuery['fields']>;
/**
 * List all Shares that exist in Directus.
 * @param query The query parameters
 * @returns An array of up to limit Share objects. If no items are available, data will be an empty array.
 */
declare const readShares: <Schema extends object, const TQuery extends Query<Schema, DirectusShare<Schema>>>(query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_shares", {
    id: string;
    name: string | null;
    collection: string | null;
    item: string | null;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    password: string | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            /**
             * List all Shares that exist in Directus.
             * @param query The query parameters
             * @returns An array of up to limit Share objects. If no items are available, data will be an empty array.
             */
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    date_created: "datetime" | null;
    date_start: "datetime" | null;
    date_end: "datetime" | null;
    times_used: number | null;
    max_uses: number | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_shares", {
    id: string;
    name: string | null;
    collection: string | null;
    item: string | null;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    password: string | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            /**
             * List all Shares that exist in Directus.
             * @param query The query parameters
             * @returns An array of up to limit Share objects. If no items are available, data will be an empty array.
             */
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    date_created: "datetime" | null;
    date_start: "datetime" | null;
    date_end: "datetime" | null;
    times_used: number | null;
    max_uses: number | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_shares", {
    id: string;
    name: string | null;
    collection: string | null;
    item: string | null;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    password: string | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            /**
             * List all Shares that exist in Directus.
             * @param query The query parameters
             * @returns An array of up to limit Share objects. If no items are available, data will be an empty array.
             */
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    date_created: "datetime" | null;
    date_start: "datetime" | null;
    date_end: "datetime" | null;
    times_used: number | null;
    max_uses: number | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_shares", {
    id: string;
    name: string | null;
    collection: string | null;
    item: string | null;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    password: string | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            /**
             * List all Shares that exist in Directus.
             * @param query The query parameters
             * @returns An array of up to limit Share objects. If no items are available, data will be an empty array.
             */
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    date_created: "datetime" | null;
    date_start: "datetime" | null;
    date_end: "datetime" | null;
    times_used: number | null;
    max_uses: number | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_shares", {
    id: string;
    name: string | null;
    collection: string | null;
    item: string | null;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    password: string | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            /**
             * List all Shares that exist in Directus.
             * @param query The query parameters
             * @returns An array of up to limit Share objects. If no items are available, data will be an empty array.
             */
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    date_created: "datetime" | null;
    date_start: "datetime" | null;
    date_end: "datetime" | null;
    times_used: number | null;
    max_uses: number | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_shares", {
    id: string;
    name: string | null;
    collection: string | null;
    item: string | null;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    password: string | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            /**
             * List all Shares that exist in Directus.
             * @param query The query parameters
             * @returns An array of up to limit Share objects. If no items are available, data will be an empty array.
             */
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    date_created: "datetime" | null;
    date_start: "datetime" | null;
    date_end: "datetime" | null;
    times_used: number | null;
    max_uses: number | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>[], Schema>;
/**
 * List an existing Share by primary key.
 * @param key The primary key of the dashboard
 * @param query The query parameters
 * @returns Returns a Share object if a valid primary key was provided.
 * @throws Will throw if key is empty
 */
declare const readShare: <Schema extends object, TQuery extends Query<Schema, DirectusShare<Schema>>>(key: DirectusShare<Schema>["id"], query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_shares", {
    id: string;
    name: string | null;
    collection: string | null;
    item: string | null;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    password: string | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            /**
             * List all Shares that exist in Directus.
             * @param query The query parameters
             * @returns An array of up to limit Share objects. If no items are available, data will be an empty array.
             */
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    date_created: "datetime" | null;
    date_start: "datetime" | null;
    date_end: "datetime" | null;
    times_used: number | null;
    max_uses: number | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_shares", {
    id: string;
    name: string | null;
    collection: string | null;
    item: string | null;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    password: string | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            /**
             * List all Shares that exist in Directus.
             * @param query The query parameters
             * @returns An array of up to limit Share objects. If no items are available, data will be an empty array.
             */
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    date_created: "datetime" | null;
    date_start: "datetime" | null;
    date_end: "datetime" | null;
    times_used: number | null;
    max_uses: number | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_shares", {
    id: string;
    name: string | null;
    collection: string | null;
    item: string | null;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    password: string | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            /**
             * List all Shares that exist in Directus.
             * @param query The query parameters
             * @returns An array of up to limit Share objects. If no items are available, data will be an empty array.
             */
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    date_created: "datetime" | null;
    date_start: "datetime" | null;
    date_end: "datetime" | null;
    times_used: number | null;
    max_uses: number | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_shares", {
    id: string;
    name: string | null;
    collection: string | null;
    item: string | null;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    password: string | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            /**
             * List all Shares that exist in Directus.
             * @param query The query parameters
             * @returns An array of up to limit Share objects. If no items are available, data will be an empty array.
             */
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    date_created: "datetime" | null;
    date_start: "datetime" | null;
    date_end: "datetime" | null;
    times_used: number | null;
    max_uses: number | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_shares", {
    id: string;
    name: string | null;
    collection: string | null;
    item: string | null;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    password: string | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            /**
             * List all Shares that exist in Directus.
             * @param query The query parameters
             * @returns An array of up to limit Share objects. If no items are available, data will be an empty array.
             */
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    date_created: "datetime" | null;
    date_start: "datetime" | null;
    date_end: "datetime" | null;
    times_used: number | null;
    max_uses: number | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_shares", {
    id: string;
    name: string | null;
    collection: string | null;
    item: string | null;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    password: string | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            /**
             * List all Shares that exist in Directus.
             * @param query The query parameters
             * @returns An array of up to limit Share objects. If no items are available, data will be an empty array.
             */
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    date_created: "datetime" | null;
    date_start: "datetime" | null;
    date_end: "datetime" | null;
    times_used: number | null;
    max_uses: number | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>, Schema>;

type ReadSingletonOutput<Schema extends object, Collection extends SingletonCollections<Schema>, TQuery extends Query<Schema, Schema[Collection]>> = ApplyQueryFields<Schema, CollectionType<Schema, Collection>, TQuery['fields']>;
/**
 * List the singleton item in Directus.
 *
 * @param collection The collection of the items
 * @param query The query parameters
 *
 * @returns An array of up to limit item objects. If no items are available, data will be an empty array.
 * @throws Will throw if collection is a core collection
 * @throws Will throw if collection is empty
 */
declare const readSingleton: <Schema extends object, Collection extends SingletonCollections<Schema>, const TQuery extends QueryItem<Schema, Schema[Collection]>>(collection: Collection, query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<IfAny<Schema, any, Collection extends keyof Schema ? UnpackList<Schema[Collection]> extends object ? object & UnpackList<Schema[Collection]> : never : never>>> extends infer FF ? MapFlatFields<UnpackList<IfAny<Schema, any, Collection extends keyof Schema ? UnpackList<Schema[Collection]> extends object ? object & UnpackList<Schema[Collection]> : never : never>>, FieldsWildcard<UnpackList<IfAny<Schema, any, Collection extends keyof Schema ? UnpackList<Schema[Collection]> extends object ? object & UnpackList<Schema[Collection]> : never : never>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<IfAny<Schema, any, Collection extends keyof Schema ? UnpackList<Schema[Collection]> extends object ? object & UnpackList<Schema[Collection]> : never : never>> ? Extract<UnpackList<IfAny<Schema, any, Collection extends keyof Schema ? UnpackList<Schema[Collection]> extends object ? object & UnpackList<Schema[Collection]> : never : never>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<IfAny<Schema, any, Collection extends keyof Schema ? UnpackList<Schema[Collection]> extends object ? object & UnpackList<Schema[Collection]> : never : never>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>, Schema>;

type ReadTranslationOutput<Schema extends object, TQuery extends Query<Schema, Item>, Item extends object = DirectusTranslation<Schema>> = ApplyQueryFields<Schema, Item, TQuery['fields']>;
/**
 * List all Translations that exist in Directus.
 * @param query The query parameters
 * @returns An array of up to limit Translation objects. If no items are available, data will be an empty array.
 */
declare const readTranslations: <Schema extends object, const TQuery extends Query<Schema, DirectusTranslation<Schema>>>(query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_translations", {
    id: string;
    language: string;
    key: string;
    value: string;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_translations", {
    id: string;
    language: string;
    key: string;
    value: string;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_translations", {
    id: string;
    language: string;
    key: string;
    value: string;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_translations", {
    id: string;
    language: string;
    key: string;
    value: string;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_translations", {
    id: string;
    language: string;
    key: string;
    value: string;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_translations", {
    id: string;
    language: string;
    key: string;
    value: string;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>[], Schema>;
/**
 * List an existing Translation by primary key.
 * @param key The primary key of the dashboard
 * @param query The query parameters
 * @returns Returns a Translation object if a valid primary key was provided.
 * @throws Will throw if key is empty
 */
declare const readTranslation: <Schema extends object, const TQuery extends Query<Schema, DirectusTranslation<Schema>>>(key: DirectusTranslation<Schema>["id"], query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_translations", {
    id: string;
    language: string;
    key: string;
    value: string;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_translations", {
    id: string;
    language: string;
    key: string;
    value: string;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_translations", {
    id: string;
    language: string;
    key: string;
    value: string;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_translations", {
    id: string;
    language: string;
    key: string;
    value: string;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_translations", {
    id: string;
    language: string;
    key: string;
    value: string;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_translations", {
    id: string;
    language: string;
    key: string;
    value: string;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>, Schema>;

type ReadUserOutput<Schema extends object, TQuery extends Query<Schema, Item>, Item extends object = DirectusUser<Schema>> = ApplyQueryFields<Schema, Item, TQuery['fields']>;
/**
 * List all users that exist in Directus.
 *
 * @param query The query parameters
 *
 * @returns An array of up to limit user objects. If no items are available, data will be an empty array.
 */
declare const readUsers: <Schema extends object, const TQuery extends Query<Schema, DirectusUser<Schema>>>(query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_users", {
    id: string;
    first_name: string | null;
    last_name: string | null;
    email: string | null;
    password: string | null;
    location: string | null; /**
     * List all users that exist in Directus.
     *
     * @param query The query parameters
     *
     * @returns An array of up to limit user objects. If no items are available, data will be an empty array.
     */
    title: string | null;
    description: string | null;
    tags: string[] | null;
    avatar: string | MergeCoreCollection<Schema, "directus_files", {
        id: string;
        storage: string;
        filename_disk: string | null;
        filename_download: string;
        title: string | null;
        type: string | null;
        folder: string | MergeCoreCollection<Schema, "directus_folders", {
            id: string;
            name: string;
            parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
        }> | null;
        uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        uploaded_on: "datetime";
        modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        modified_on: "datetime";
        charset: string | null;
        filesize: string | null;
        width: number | null;
        height: number | null;
        duration: number | null;
        embed: unknown;
        description: string | null;
        location: string | null;
        tags: string[] | null;
        metadata: Record<string, any> | null;
    }> | null;
    language: string | null;
    theme: string | null;
    tfa_secret: string | null;
    status: string;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    token: string | null;
    last_access: "datetime" | null;
    last_page: string | null;
    provider: string;
    external_identifier: string | null;
    auth_data: Record<string, any> | null;
    email_notifications: boolean | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_users", {
    id: string;
    first_name: string | null;
    last_name: string | null;
    email: string | null;
    password: string | null;
    location: string | null; /**
     * List all users that exist in Directus.
     *
     * @param query The query parameters
     *
     * @returns An array of up to limit user objects. If no items are available, data will be an empty array.
     */
    title: string | null;
    description: string | null;
    tags: string[] | null;
    avatar: string | MergeCoreCollection<Schema, "directus_files", {
        id: string;
        storage: string;
        filename_disk: string | null;
        filename_download: string;
        title: string | null;
        type: string | null;
        folder: string | MergeCoreCollection<Schema, "directus_folders", {
            id: string;
            name: string;
            parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
        }> | null;
        uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        uploaded_on: "datetime";
        modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        modified_on: "datetime";
        charset: string | null;
        filesize: string | null;
        width: number | null;
        height: number | null;
        duration: number | null;
        embed: unknown;
        description: string | null;
        location: string | null;
        tags: string[] | null;
        metadata: Record<string, any> | null;
    }> | null;
    language: string | null;
    theme: string | null;
    tfa_secret: string | null;
    status: string;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    token: string | null;
    last_access: "datetime" | null;
    last_page: string | null;
    provider: string;
    external_identifier: string | null;
    auth_data: Record<string, any> | null;
    email_notifications: boolean | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_users", {
    id: string;
    first_name: string | null;
    last_name: string | null;
    email: string | null;
    password: string | null;
    location: string | null; /**
     * List all users that exist in Directus.
     *
     * @param query The query parameters
     *
     * @returns An array of up to limit user objects. If no items are available, data will be an empty array.
     */
    title: string | null;
    description: string | null;
    tags: string[] | null;
    avatar: string | MergeCoreCollection<Schema, "directus_files", {
        id: string;
        storage: string;
        filename_disk: string | null;
        filename_download: string;
        title: string | null;
        type: string | null;
        folder: string | MergeCoreCollection<Schema, "directus_folders", {
            id: string;
            name: string;
            parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
        }> | null;
        uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        uploaded_on: "datetime";
        modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        modified_on: "datetime";
        charset: string | null;
        filesize: string | null;
        width: number | null;
        height: number | null;
        duration: number | null;
        embed: unknown;
        description: string | null;
        location: string | null;
        tags: string[] | null;
        metadata: Record<string, any> | null;
    }> | null;
    language: string | null;
    theme: string | null;
    tfa_secret: string | null;
    status: string;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    token: string | null;
    last_access: "datetime" | null;
    last_page: string | null;
    provider: string;
    external_identifier: string | null;
    auth_data: Record<string, any> | null;
    email_notifications: boolean | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_users", {
    id: string;
    first_name: string | null;
    last_name: string | null;
    email: string | null;
    password: string | null;
    location: string | null; /**
     * List all users that exist in Directus.
     *
     * @param query The query parameters
     *
     * @returns An array of up to limit user objects. If no items are available, data will be an empty array.
     */
    title: string | null;
    description: string | null;
    tags: string[] | null;
    avatar: string | MergeCoreCollection<Schema, "directus_files", {
        id: string;
        storage: string;
        filename_disk: string | null;
        filename_download: string;
        title: string | null;
        type: string | null;
        folder: string | MergeCoreCollection<Schema, "directus_folders", {
            id: string;
            name: string;
            parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
        }> | null;
        uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        uploaded_on: "datetime";
        modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        modified_on: "datetime";
        charset: string | null;
        filesize: string | null;
        width: number | null;
        height: number | null;
        duration: number | null;
        embed: unknown;
        description: string | null;
        location: string | null;
        tags: string[] | null;
        metadata: Record<string, any> | null;
    }> | null;
    language: string | null;
    theme: string | null;
    tfa_secret: string | null;
    status: string;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    token: string | null;
    last_access: "datetime" | null;
    last_page: string | null;
    provider: string;
    external_identifier: string | null;
    auth_data: Record<string, any> | null;
    email_notifications: boolean | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_users", {
    id: string;
    first_name: string | null;
    last_name: string | null;
    email: string | null;
    password: string | null;
    location: string | null; /**
     * List all users that exist in Directus.
     *
     * @param query The query parameters
     *
     * @returns An array of up to limit user objects. If no items are available, data will be an empty array.
     */
    title: string | null;
    description: string | null;
    tags: string[] | null;
    avatar: string | MergeCoreCollection<Schema, "directus_files", {
        id: string;
        storage: string;
        filename_disk: string | null;
        filename_download: string;
        title: string | null;
        type: string | null;
        folder: string | MergeCoreCollection<Schema, "directus_folders", {
            id: string;
            name: string;
            parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
        }> | null;
        uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        uploaded_on: "datetime";
        modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        modified_on: "datetime";
        charset: string | null;
        filesize: string | null;
        width: number | null;
        height: number | null;
        duration: number | null;
        embed: unknown;
        description: string | null;
        location: string | null;
        tags: string[] | null;
        metadata: Record<string, any> | null;
    }> | null;
    language: string | null;
    theme: string | null;
    tfa_secret: string | null;
    status: string;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    token: string | null;
    last_access: "datetime" | null;
    last_page: string | null;
    provider: string;
    external_identifier: string | null;
    auth_data: Record<string, any> | null;
    email_notifications: boolean | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_users", {
    id: string;
    first_name: string | null;
    last_name: string | null;
    email: string | null;
    password: string | null;
    location: string | null; /**
     * List all users that exist in Directus.
     *
     * @param query The query parameters
     *
     * @returns An array of up to limit user objects. If no items are available, data will be an empty array.
     */
    title: string | null;
    description: string | null;
    tags: string[] | null;
    avatar: string | MergeCoreCollection<Schema, "directus_files", {
        id: string;
        storage: string;
        filename_disk: string | null;
        filename_download: string;
        title: string | null;
        type: string | null;
        folder: string | MergeCoreCollection<Schema, "directus_folders", {
            id: string;
            name: string;
            parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
        }> | null;
        uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        uploaded_on: "datetime";
        modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        modified_on: "datetime";
        charset: string | null;
        filesize: string | null;
        width: number | null;
        height: number | null;
        duration: number | null;
        embed: unknown;
        description: string | null;
        location: string | null;
        tags: string[] | null;
        metadata: Record<string, any> | null;
    }> | null;
    language: string | null;
    theme: string | null;
    tfa_secret: string | null;
    status: string;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    token: string | null;
    last_access: "datetime" | null;
    last_page: string | null;
    provider: string;
    external_identifier: string | null;
    auth_data: Record<string, any> | null;
    email_notifications: boolean | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>[], Schema>;
/**
 * List an existing user by primary key.
 *
 * @param key The primary key of the user
 * @param query The query parameters
 *
 * @returns Returns the requested user object.
 * @throws Will throw if key is empty
 */
declare const readUser: <Schema extends object, const TQuery extends Query<Schema, DirectusUser<Schema>>>(key: DirectusUser<Schema>["id"], query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_users", {
    id: string;
    first_name: string | null;
    last_name: string | null;
    email: string | null;
    password: string | null;
    location: string | null; /**
     * List all users that exist in Directus.
     *
     * @param query The query parameters
     *
     * @returns An array of up to limit user objects. If no items are available, data will be an empty array.
     */
    title: string | null;
    description: string | null;
    tags: string[] | null;
    avatar: string | MergeCoreCollection<Schema, "directus_files", {
        id: string;
        storage: string;
        filename_disk: string | null;
        filename_download: string;
        title: string | null;
        type: string | null;
        folder: string | MergeCoreCollection<Schema, "directus_folders", {
            id: string;
            name: string;
            parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
        }> | null;
        uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        uploaded_on: "datetime";
        modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        modified_on: "datetime";
        charset: string | null;
        filesize: string | null;
        width: number | null;
        height: number | null;
        duration: number | null;
        embed: unknown;
        description: string | null;
        location: string | null;
        tags: string[] | null;
        metadata: Record<string, any> | null;
    }> | null;
    language: string | null;
    theme: string | null;
    tfa_secret: string | null;
    status: string;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    token: string | null;
    last_access: "datetime" | null;
    last_page: string | null;
    provider: string;
    external_identifier: string | null;
    auth_data: Record<string, any> | null;
    email_notifications: boolean | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_users", {
    id: string;
    first_name: string | null;
    last_name: string | null;
    email: string | null;
    password: string | null;
    location: string | null; /**
     * List all users that exist in Directus.
     *
     * @param query The query parameters
     *
     * @returns An array of up to limit user objects. If no items are available, data will be an empty array.
     */
    title: string | null;
    description: string | null;
    tags: string[] | null;
    avatar: string | MergeCoreCollection<Schema, "directus_files", {
        id: string;
        storage: string;
        filename_disk: string | null;
        filename_download: string;
        title: string | null;
        type: string | null;
        folder: string | MergeCoreCollection<Schema, "directus_folders", {
            id: string;
            name: string;
            parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
        }> | null;
        uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        uploaded_on: "datetime";
        modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        modified_on: "datetime";
        charset: string | null;
        filesize: string | null;
        width: number | null;
        height: number | null;
        duration: number | null;
        embed: unknown;
        description: string | null;
        location: string | null;
        tags: string[] | null;
        metadata: Record<string, any> | null;
    }> | null;
    language: string | null;
    theme: string | null;
    tfa_secret: string | null;
    status: string;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    token: string | null;
    last_access: "datetime" | null;
    last_page: string | null;
    provider: string;
    external_identifier: string | null;
    auth_data: Record<string, any> | null;
    email_notifications: boolean | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_users", {
    id: string;
    first_name: string | null;
    last_name: string | null;
    email: string | null;
    password: string | null;
    location: string | null; /**
     * List all users that exist in Directus.
     *
     * @param query The query parameters
     *
     * @returns An array of up to limit user objects. If no items are available, data will be an empty array.
     */
    title: string | null;
    description: string | null;
    tags: string[] | null;
    avatar: string | MergeCoreCollection<Schema, "directus_files", {
        id: string;
        storage: string;
        filename_disk: string | null;
        filename_download: string;
        title: string | null;
        type: string | null;
        folder: string | MergeCoreCollection<Schema, "directus_folders", {
            id: string;
            name: string;
            parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
        }> | null;
        uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        uploaded_on: "datetime";
        modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        modified_on: "datetime";
        charset: string | null;
        filesize: string | null;
        width: number | null;
        height: number | null;
        duration: number | null;
        embed: unknown;
        description: string | null;
        location: string | null;
        tags: string[] | null;
        metadata: Record<string, any> | null;
    }> | null;
    language: string | null;
    theme: string | null;
    tfa_secret: string | null;
    status: string;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    token: string | null;
    last_access: "datetime" | null;
    last_page: string | null;
    provider: string;
    external_identifier: string | null;
    auth_data: Record<string, any> | null;
    email_notifications: boolean | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_users", {
    id: string;
    first_name: string | null;
    last_name: string | null;
    email: string | null;
    password: string | null;
    location: string | null; /**
     * List all users that exist in Directus.
     *
     * @param query The query parameters
     *
     * @returns An array of up to limit user objects. If no items are available, data will be an empty array.
     */
    title: string | null;
    description: string | null;
    tags: string[] | null;
    avatar: string | MergeCoreCollection<Schema, "directus_files", {
        id: string;
        storage: string;
        filename_disk: string | null;
        filename_download: string;
        title: string | null;
        type: string | null;
        folder: string | MergeCoreCollection<Schema, "directus_folders", {
            id: string;
            name: string;
            parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
        }> | null;
        uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        uploaded_on: "datetime";
        modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        modified_on: "datetime";
        charset: string | null;
        filesize: string | null;
        width: number | null;
        height: number | null;
        duration: number | null;
        embed: unknown;
        description: string | null;
        location: string | null;
        tags: string[] | null;
        metadata: Record<string, any> | null;
    }> | null;
    language: string | null;
    theme: string | null;
    tfa_secret: string | null;
    status: string;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    token: string | null;
    last_access: "datetime" | null;
    last_page: string | null;
    provider: string;
    external_identifier: string | null;
    auth_data: Record<string, any> | null;
    email_notifications: boolean | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_users", {
    id: string;
    first_name: string | null;
    last_name: string | null;
    email: string | null;
    password: string | null;
    location: string | null; /**
     * List all users that exist in Directus.
     *
     * @param query The query parameters
     *
     * @returns An array of up to limit user objects. If no items are available, data will be an empty array.
     */
    title: string | null;
    description: string | null;
    tags: string[] | null;
    avatar: string | MergeCoreCollection<Schema, "directus_files", {
        id: string;
        storage: string;
        filename_disk: string | null;
        filename_download: string;
        title: string | null;
        type: string | null;
        folder: string | MergeCoreCollection<Schema, "directus_folders", {
            id: string;
            name: string;
            parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
        }> | null;
        uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        uploaded_on: "datetime";
        modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        modified_on: "datetime";
        charset: string | null;
        filesize: string | null;
        width: number | null;
        height: number | null;
        duration: number | null;
        embed: unknown;
        description: string | null;
        location: string | null;
        tags: string[] | null;
        metadata: Record<string, any> | null;
    }> | null;
    language: string | null;
    theme: string | null;
    tfa_secret: string | null;
    status: string;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    token: string | null;
    last_access: "datetime" | null;
    last_page: string | null;
    provider: string;
    external_identifier: string | null;
    auth_data: Record<string, any> | null;
    email_notifications: boolean | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_users", {
    id: string;
    first_name: string | null;
    last_name: string | null;
    email: string | null;
    password: string | null;
    location: string | null; /**
     * List all users that exist in Directus.
     *
     * @param query The query parameters
     *
     * @returns An array of up to limit user objects. If no items are available, data will be an empty array.
     */
    title: string | null;
    description: string | null;
    tags: string[] | null;
    avatar: string | MergeCoreCollection<Schema, "directus_files", {
        id: string;
        storage: string;
        filename_disk: string | null;
        filename_download: string;
        title: string | null;
        type: string | null;
        folder: string | MergeCoreCollection<Schema, "directus_folders", {
            id: string;
            name: string;
            parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
        }> | null;
        uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        uploaded_on: "datetime";
        modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        modified_on: "datetime";
        charset: string | null;
        filesize: string | null;
        width: number | null;
        height: number | null;
        duration: number | null;
        embed: unknown;
        description: string | null;
        location: string | null;
        tags: string[] | null;
        metadata: Record<string, any> | null;
    }> | null;
    language: string | null;
    theme: string | null;
    tfa_secret: string | null;
    status: string;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    token: string | null;
    last_access: "datetime" | null;
    last_page: string | null;
    provider: string;
    external_identifier: string | null;
    auth_data: Record<string, any> | null;
    email_notifications: boolean | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>, Schema>;
/**
 * Retrieve the currently authenticated user.
 *
 * @param query The query parameters
 *
 * @returns Returns the user object for the currently authenticated user.
 */
declare const readMe: <Schema extends object, const TQuery extends Query<Schema, DirectusUser<Schema>>>(query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_users", {
    id: string;
    first_name: string | null;
    last_name: string | null;
    email: string | null;
    password: string | null;
    location: string | null; /**
     * List all users that exist in Directus.
     *
     * @param query The query parameters
     *
     * @returns An array of up to limit user objects. If no items are available, data will be an empty array.
     */
    title: string | null;
    description: string | null;
    tags: string[] | null;
    avatar: string | MergeCoreCollection<Schema, "directus_files", {
        id: string;
        storage: string;
        filename_disk: string | null;
        filename_download: string;
        title: string | null;
        type: string | null;
        folder: string | MergeCoreCollection<Schema, "directus_folders", {
            id: string;
            name: string;
            parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
        }> | null;
        uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        uploaded_on: "datetime";
        modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        modified_on: "datetime";
        charset: string | null;
        filesize: string | null;
        width: number | null;
        height: number | null;
        duration: number | null;
        embed: unknown;
        description: string | null;
        location: string | null;
        tags: string[] | null;
        metadata: Record<string, any> | null;
    }> | null;
    language: string | null;
    theme: string | null;
    tfa_secret: string | null;
    status: string;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    token: string | null;
    last_access: "datetime" | null;
    last_page: string | null;
    provider: string;
    external_identifier: string | null;
    auth_data: Record<string, any> | null;
    email_notifications: boolean | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_users", {
    id: string;
    first_name: string | null;
    last_name: string | null;
    email: string | null;
    password: string | null;
    location: string | null; /**
     * List all users that exist in Directus.
     *
     * @param query The query parameters
     *
     * @returns An array of up to limit user objects. If no items are available, data will be an empty array.
     */
    title: string | null;
    description: string | null;
    tags: string[] | null;
    avatar: string | MergeCoreCollection<Schema, "directus_files", {
        id: string;
        storage: string;
        filename_disk: string | null;
        filename_download: string;
        title: string | null;
        type: string | null;
        folder: string | MergeCoreCollection<Schema, "directus_folders", {
            id: string;
            name: string;
            parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
        }> | null;
        uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        uploaded_on: "datetime";
        modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        modified_on: "datetime";
        charset: string | null;
        filesize: string | null;
        width: number | null;
        height: number | null;
        duration: number | null;
        embed: unknown;
        description: string | null;
        location: string | null;
        tags: string[] | null;
        metadata: Record<string, any> | null;
    }> | null;
    language: string | null;
    theme: string | null;
    tfa_secret: string | null;
    status: string;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    token: string | null;
    last_access: "datetime" | null;
    last_page: string | null;
    provider: string;
    external_identifier: string | null;
    auth_data: Record<string, any> | null;
    email_notifications: boolean | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_users", {
    id: string;
    first_name: string | null;
    last_name: string | null;
    email: string | null;
    password: string | null;
    location: string | null; /**
     * List all users that exist in Directus.
     *
     * @param query The query parameters
     *
     * @returns An array of up to limit user objects. If no items are available, data will be an empty array.
     */
    title: string | null;
    description: string | null;
    tags: string[] | null;
    avatar: string | MergeCoreCollection<Schema, "directus_files", {
        id: string;
        storage: string;
        filename_disk: string | null;
        filename_download: string;
        title: string | null;
        type: string | null;
        folder: string | MergeCoreCollection<Schema, "directus_folders", {
            id: string;
            name: string;
            parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
        }> | null;
        uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        uploaded_on: "datetime";
        modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        modified_on: "datetime";
        charset: string | null;
        filesize: string | null;
        width: number | null;
        height: number | null;
        duration: number | null;
        embed: unknown;
        description: string | null;
        location: string | null;
        tags: string[] | null;
        metadata: Record<string, any> | null;
    }> | null;
    language: string | null;
    theme: string | null;
    tfa_secret: string | null;
    status: string;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    token: string | null;
    last_access: "datetime" | null;
    last_page: string | null;
    provider: string;
    external_identifier: string | null;
    auth_data: Record<string, any> | null;
    email_notifications: boolean | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_users", {
    id: string;
    first_name: string | null;
    last_name: string | null;
    email: string | null;
    password: string | null;
    location: string | null; /**
     * List all users that exist in Directus.
     *
     * @param query The query parameters
     *
     * @returns An array of up to limit user objects. If no items are available, data will be an empty array.
     */
    title: string | null;
    description: string | null;
    tags: string[] | null;
    avatar: string | MergeCoreCollection<Schema, "directus_files", {
        id: string;
        storage: string;
        filename_disk: string | null;
        filename_download: string;
        title: string | null;
        type: string | null;
        folder: string | MergeCoreCollection<Schema, "directus_folders", {
            id: string;
            name: string;
            parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
        }> | null;
        uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        uploaded_on: "datetime";
        modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        modified_on: "datetime";
        charset: string | null;
        filesize: string | null;
        width: number | null;
        height: number | null;
        duration: number | null;
        embed: unknown;
        description: string | null;
        location: string | null;
        tags: string[] | null;
        metadata: Record<string, any> | null;
    }> | null;
    language: string | null;
    theme: string | null;
    tfa_secret: string | null;
    status: string;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    token: string | null;
    last_access: "datetime" | null;
    last_page: string | null;
    provider: string;
    external_identifier: string | null;
    auth_data: Record<string, any> | null;
    email_notifications: boolean | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_users", {
    id: string;
    first_name: string | null;
    last_name: string | null;
    email: string | null;
    password: string | null;
    location: string | null; /**
     * List all users that exist in Directus.
     *
     * @param query The query parameters
     *
     * @returns An array of up to limit user objects. If no items are available, data will be an empty array.
     */
    title: string | null;
    description: string | null;
    tags: string[] | null;
    avatar: string | MergeCoreCollection<Schema, "directus_files", {
        id: string;
        storage: string;
        filename_disk: string | null;
        filename_download: string;
        title: string | null;
        type: string | null;
        folder: string | MergeCoreCollection<Schema, "directus_folders", {
            id: string;
            name: string;
            parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
        }> | null;
        uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        uploaded_on: "datetime";
        modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        modified_on: "datetime";
        charset: string | null;
        filesize: string | null;
        width: number | null;
        height: number | null;
        duration: number | null;
        embed: unknown;
        description: string | null;
        location: string | null;
        tags: string[] | null;
        metadata: Record<string, any> | null;
    }> | null;
    language: string | null;
    theme: string | null;
    tfa_secret: string | null;
    status: string;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    token: string | null;
    last_access: "datetime" | null;
    last_page: string | null;
    provider: string;
    external_identifier: string | null;
    auth_data: Record<string, any> | null;
    email_notifications: boolean | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_users", {
    id: string;
    first_name: string | null;
    last_name: string | null;
    email: string | null;
    password: string | null;
    location: string | null; /**
     * List all users that exist in Directus.
     *
     * @param query The query parameters
     *
     * @returns An array of up to limit user objects. If no items are available, data will be an empty array.
     */
    title: string | null;
    description: string | null;
    tags: string[] | null;
    avatar: string | MergeCoreCollection<Schema, "directus_files", {
        id: string;
        storage: string;
        filename_disk: string | null;
        filename_download: string;
        title: string | null;
        type: string | null;
        folder: string | MergeCoreCollection<Schema, "directus_folders", {
            id: string;
            name: string;
            parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
        }> | null;
        uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        uploaded_on: "datetime";
        modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        modified_on: "datetime";
        charset: string | null;
        filesize: string | null;
        width: number | null;
        height: number | null;
        duration: number | null;
        embed: unknown;
        description: string | null;
        location: string | null;
        tags: string[] | null;
        metadata: Record<string, any> | null;
    }> | null;
    language: string | null;
    theme: string | null;
    tfa_secret: string | null;
    status: string;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    token: string | null;
    last_access: "datetime" | null;
    last_page: string | null;
    provider: string;
    external_identifier: string | null;
    auth_data: Record<string, any> | null;
    email_notifications: boolean | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>, Schema>;

type ReadContentVersionOutput<Schema extends object, TQuery extends Query<Schema, Item>, Item extends object = DirectusVersion<Schema>> = ApplyQueryFields<Schema, Item, TQuery['fields']>;
/**
 * List all Content Versions that exist in Directus.
 * @param query The query parameters
 * @returns An array of up to limit Content Version objects. If no items are available, data will be an empty array.
 */
declare const readContentVersions: <Schema extends object, const TQuery extends Query<Schema, DirectusVersion<Schema>>>(query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_versions", {
    id: string;
    key: string;
    name: string | null;
    collection: string | DirectusCollection<Schema>;
    item: string;
    hash: string;
    date_created: "datetime" | null;
    date_updated: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    user_updated: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_versions", {
    id: string;
    key: string;
    name: string | null;
    collection: string | DirectusCollection<Schema>;
    item: string;
    hash: string;
    date_created: "datetime" | null;
    date_updated: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    user_updated: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_versions", {
    id: string;
    key: string;
    name: string | null;
    collection: string | DirectusCollection<Schema>;
    item: string;
    hash: string;
    date_created: "datetime" | null;
    date_updated: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    user_updated: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_versions", {
    id: string;
    key: string;
    name: string | null;
    collection: string | DirectusCollection<Schema>;
    item: string;
    hash: string;
    date_created: "datetime" | null;
    date_updated: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    user_updated: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_versions", {
    id: string;
    key: string;
    name: string | null;
    collection: string | DirectusCollection<Schema>;
    item: string;
    hash: string;
    date_created: "datetime" | null;
    date_updated: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    user_updated: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_versions", {
    id: string;
    key: string;
    name: string | null;
    collection: string | DirectusCollection<Schema>;
    item: string;
    hash: string;
    date_created: "datetime" | null;
    date_updated: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    user_updated: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>[], Schema>;
/**
 * List an existing COntent Version by primary key.
 * @param key The primary key of the Content Version
 * @param query The query parameters
 * @returns Returns a Content Version object if a valid primary key was provided.
 * @throws Will throw if key is empty
 */
declare const readContentVersion: <Schema extends object, const TQuery extends Query<Schema, DirectusVersion<Schema>>>(key: DirectusVersion<Schema>["id"], query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_versions", {
    id: string;
    key: string;
    name: string | null;
    collection: string | DirectusCollection<Schema>;
    item: string;
    hash: string;
    date_created: "datetime" | null;
    date_updated: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    user_updated: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_versions", {
    id: string;
    key: string;
    name: string | null;
    collection: string | DirectusCollection<Schema>;
    item: string;
    hash: string;
    date_created: "datetime" | null;
    date_updated: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    user_updated: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_versions", {
    id: string;
    key: string;
    name: string | null;
    collection: string | DirectusCollection<Schema>;
    item: string;
    hash: string;
    date_created: "datetime" | null;
    date_updated: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    user_updated: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_versions", {
    id: string;
    key: string;
    name: string | null;
    collection: string | DirectusCollection<Schema>;
    item: string;
    hash: string;
    date_created: "datetime" | null;
    date_updated: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    user_updated: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_versions", {
    id: string;
    key: string;
    name: string | null;
    collection: string | DirectusCollection<Schema>;
    item: string;
    hash: string;
    date_created: "datetime" | null;
    date_updated: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    user_updated: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_versions", {
    id: string;
    key: string;
    name: string | null;
    collection: string | DirectusCollection<Schema>;
    item: string;
    hash: string;
    date_created: "datetime" | null;
    date_updated: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    user_updated: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>, Schema>;

type ReadWebhookOutput<Schema extends object, TQuery extends Query<Schema, Item>, Item extends object = DirectusWebhook<Schema>> = ApplyQueryFields<Schema, Item, TQuery['fields']>;
/**
 * List all Webhooks that exist in Directus.
 * @param query The query parameters
 * @returns An array of up to limit Webhook objects. If no items are available, data will be an empty array.
 */
declare const readWebhooks: <Schema extends object, const TQuery extends Query<Schema, DirectusWebhook<Schema>>>(query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_webhooks", {
    id: number;
    name: string;
    method: string;
    url: string;
    status: string;
    data: boolean;
    actions: string | string[];
    collections: string | string[];
    headers: Record<string, any> | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_webhooks", {
    id: number;
    name: string;
    method: string;
    url: string;
    status: string;
    data: boolean;
    actions: string | string[];
    collections: string | string[];
    headers: Record<string, any> | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_webhooks", {
    id: number;
    name: string;
    method: string;
    url: string;
    status: string;
    data: boolean;
    actions: string | string[];
    collections: string | string[];
    headers: Record<string, any> | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_webhooks", {
    id: number;
    name: string;
    method: string;
    url: string;
    status: string;
    data: boolean;
    actions: string | string[];
    collections: string | string[];
    headers: Record<string, any> | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_webhooks", {
    id: number;
    name: string;
    method: string;
    url: string;
    status: string;
    data: boolean;
    actions: string | string[];
    collections: string | string[];
    headers: Record<string, any> | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_webhooks", {
    id: number;
    name: string;
    method: string;
    url: string;
    status: string;
    data: boolean;
    actions: string | string[];
    collections: string | string[];
    headers: Record<string, any> | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>[], Schema>;
/**
 * List an existing Webhook by primary key.
 * @param key The primary key of the dashboard
 * @param query The query parameters
 * @returns Returns a Webhook object if a valid primary key was provided.
 * @throws Will throw if key is empty
 */
declare const readWebhook: <Schema extends object, const TQuery extends Query<Schema, DirectusWebhook<Schema>>>(key: DirectusWebhook<Schema>["id"], query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_webhooks", {
    id: number;
    name: string;
    method: string;
    url: string;
    status: string;
    data: boolean;
    actions: string | string[];
    collections: string | string[];
    headers: Record<string, any> | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_webhooks", {
    id: number;
    name: string;
    method: string;
    url: string;
    status: string;
    data: boolean;
    actions: string | string[];
    collections: string | string[];
    headers: Record<string, any> | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_webhooks", {
    id: number;
    name: string;
    method: string;
    url: string;
    status: string;
    data: boolean;
    actions: string | string[];
    collections: string | string[];
    headers: Record<string, any> | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_webhooks", {
    id: number;
    name: string;
    method: string;
    url: string;
    status: string;
    data: boolean;
    actions: string | string[];
    collections: string | string[];
    headers: Record<string, any> | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_webhooks", {
    id: number;
    name: string;
    method: string;
    url: string;
    status: string;
    data: boolean;
    actions: string | string[];
    collections: string | string[];
    headers: Record<string, any> | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_webhooks", {
    id: number;
    name: string;
    method: string;
    url: string;
    status: string;
    data: boolean;
    actions: string | string[];
    collections: string | string[];
    headers: Record<string, any> | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>, Schema>;

type SchemaSnapshotOutput = {
    version: number;
    directus: string;
    vendor: string;
    collections: Record<string, any>[];
    fields: Record<string, any>[];
    relations: Record<string, any>[];
};
/**
 * Retrieve the current schema. This endpoint is only available to admin users.
 * @returns Returns the JSON object containing schema details.
 */
declare const schemaSnapshot: <Schema extends object>() => RestCommand<SchemaSnapshotOutput, Schema>;

type SchemaDiffOutput = {
    hash: string;
    diff: Record<string, any>;
};
/**
 * Compare the current instance's schema against the schema snapshot in JSON request body and retrieve the difference. This endpoint is only available to admin users.
 * @param snapshot JSON object containing collections, fields, and relations to apply.
 * @param force Bypass version and database vendor restrictions.
 * @returns Returns the differences between the current instance's schema and the schema passed in the request body.
 */
declare const schemaDiff: <Schema extends object>(snapshot: SchemaSnapshotOutput, force?: boolean) => RestCommand<SchemaDiffOutput, Schema>;

/**
 * Update the instance's schema by passing the diff previously retrieved via /schema/diff endpoint in the request body. This endpoint is only available to admin users.
 * @param diff JSON object containing hash and diffs of collections, fields, and relations to apply.
 * @returns Empty body.
 */
declare const schemaApply: <Schema extends object>(diff: SchemaDiffOutput) => RestCommand<void, Schema>;

/**
 * Retrieve the OpenAPI spec for the current project.
 * @returns Object conforming to the OpenAPI Specification
 */
declare const readGraphqlSdl: <Schema extends object>(scope?: 'item' | 'system') => RestCommand<string, Schema>;

type ServerHealthOutput = {
    status: 'ok' | 'warn' | 'error';
    releaseId?: string;
    serviceId?: string;
    checks?: {
        [name: string]: Record<string, any>[];
    };
};
/**
 * Get the current health status of the server.
 * @returns The current health status of the server.
 */
declare const serverHealth: <Schema extends object>() => RestCommand<ServerHealthOutput, Schema>;

type ServerInfoOutput = {
    project: {
        project_name: string;
        default_language: string;
    };
    rateLimit?: {
        points: number;
        duration: number;
    } | false;
    rateLimitGlobal?: {
        points: number;
        duration: number;
    } | false;
    queryLimit?: {
        default: number;
        max: number;
    };
    websocket?: {
        rest: {
            authentication: WebSocketAuthModes;
            path: string;
        } | false;
        graphql: {
            authentication: WebSocketAuthModes;
            path: string;
        } | false;
        heartbeat: number | false;
    } | false;
};
/**
 * Get information about the current installation.
 * @returns Information about the current installation.
 */
declare const serverInfo: <Schema extends object>() => RestCommand<ServerInfoOutput, Schema>;

type OpenApiSpecOutput = Record<string, any>;
/**
 * Retrieve the OpenAPI spec for the current project.
 * @returns Object conforming to the OpenAPI Specification
 */
declare const readOpenApiSpec: <Schema extends object>() => RestCommand<OpenApiSpecOutput, Schema>;

/**
 * Ping... pong! 🏓
 * @returns Pong
 */
declare const serverPing: <Schema extends object>() => RestCommand<string, Schema>;

type UpdateActivityOutput<Schema extends object, TQuery extends Query<Schema, Item>, Item extends object = DirectusActivity<Schema>> = ApplyQueryFields<Schema, Item, TQuery['fields']>;
/**
 * Updates an existing comment by activity action primary key.
 * @param key
 * @param item
 * @param query
 * @returns Returns the activity object of the created comment.
 * @throws Will throw if key is empty
 */
declare const updateComment: <Schema extends object, const TQuery extends Query<Schema, DirectusActivity<Schema>>>(key: DirectusActivity<Schema>["id"], item: Partial<DirectusActivity<Schema>>, query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_activity", {
    id: number;
    action: string;
    user: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    timestamp: "datetime";
    ip: string | null;
    user_agent: string | null;
    collection: string;
    /**
     * Updates an existing comment by activity action primary key.
     * @param key
     * @param item
     * @param query
     * @returns Returns the activity object of the created comment.
     * @throws Will throw if key is empty
     */
    item: string;
    comment: string | null;
    origin: string | null;
    revisions: number[] | MergeCoreCollection<Schema, "directus_revisions", {
        id: number;
        activity: number | MergeCoreCollection<Schema, "directus_activity", any>;
        collection: string;
        item: string;
        data: Record<string, any> | null;
        delta: Record<string, any> | null;
        parent: number | MergeCoreCollection<Schema, "directus_revisions", any> | null;
        version: string | MergeCoreCollection<Schema, "directus_versions", {
            id: string;
            key: string;
            name: string | null;
            collection: string | DirectusCollection<Schema>;
            item: string;
            hash: string;
            date_created: "datetime" | null;
            date_updated: "datetime" | null;
            user_created: string | MergeCoreCollection<Schema, "directus_users", {
                id: string;
                first_name: string | null;
                last_name: string | null;
                email: string | null;
                password: string | null;
                location: string | null;
                title: string | null;
                description: string | null;
                tags: string[] | null;
                avatar: string | MergeCoreCollection<Schema, "directus_files", {
                    id: string;
                    storage: string;
                    filename_disk: string | null;
                    filename_download: string;
                    title: string | null;
                    type: string | null;
                    folder: string | MergeCoreCollection<Schema, "directus_folders", {
                        id: string;
                        name: string;
                        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                    }> | null;
                    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    uploaded_on: "datetime";
                    modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    modified_on: "datetime";
                    charset: string | null;
                    filesize: string | null;
                    width: number | null;
                    height: number | null;
                    duration: number | null;
                    embed: unknown;
                    description: string | null;
                    location: string | null;
                    tags: string[] | null;
                    metadata: Record<string, any> | null;
                }> | null;
                language: string | null;
                theme: string | null;
                tfa_secret: string | null;
                status: string;
                role: string | MergeCoreCollection<Schema, "directus_roles", {
                    id: string;
                    name: string;
                    icon: string;
                    description: string | null;
                    ip_access: string | null;
                    enforce_tfa: boolean;
                    admin_access: boolean;
                    app_access: boolean;
                }> | null;
                token: string | null;
                last_access: "datetime" | null;
                last_page: string | null;
                provider: string;
                external_identifier: string | null;
                auth_data: Record<string, any> | null;
                email_notifications: boolean | null;
            }> | null;
            user_updated: string | MergeCoreCollection<Schema, "directus_users", {
                id: string;
                first_name: string | null;
                last_name: string | null;
                email: string | null;
                password: string | null;
                location: string | null;
                title: string | null;
                description: string | null;
                tags: string[] | null;
                avatar: string | MergeCoreCollection<Schema, "directus_files", {
                    id: string;
                    storage: string;
                    filename_disk: string | null;
                    filename_download: string;
                    title: string | null;
                    type: string | null;
                    folder: string | MergeCoreCollection<Schema, "directus_folders", {
                        id: string;
                        name: string;
                        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                    }> | null;
                    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    uploaded_on: "datetime";
                    modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    modified_on: "datetime";
                    charset: string | null;
                    filesize: string | null;
                    width: number | null;
                    height: number | null;
                    duration: number | null;
                    embed: unknown;
                    description: string | null;
                    location: string | null;
                    tags: string[] | null;
                    metadata: Record<string, any> | null;
                }> | null;
                language: string | null;
                theme: string | null;
                tfa_secret: string | null;
                status: string;
                role: string | MergeCoreCollection<Schema, "directus_roles", {
                    id: string;
                    name: string;
                    icon: string;
                    description: string | null;
                    ip_access: string | null;
                    enforce_tfa: boolean;
                    admin_access: boolean;
                    app_access: boolean;
                }> | null;
                token: string | null;
                last_access: "datetime" | null;
                last_page: string | null;
                provider: string;
                external_identifier: string | null;
                auth_data: Record<string, any> | null;
                email_notifications: boolean | null;
            }> | null;
        }> | null;
    }>[] | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_activity", {
    id: number;
    action: string;
    user: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    timestamp: "datetime";
    ip: string | null;
    user_agent: string | null;
    collection: string;
    /**
     * Updates an existing comment by activity action primary key.
     * @param key
     * @param item
     * @param query
     * @returns Returns the activity object of the created comment.
     * @throws Will throw if key is empty
     */
    item: string;
    comment: string | null;
    origin: string | null;
    revisions: number[] | MergeCoreCollection<Schema, "directus_revisions", {
        id: number;
        activity: number | MergeCoreCollection<Schema, "directus_activity", any>;
        collection: string;
        item: string;
        data: Record<string, any> | null;
        delta: Record<string, any> | null;
        parent: number | MergeCoreCollection<Schema, "directus_revisions", any> | null;
        version: string | MergeCoreCollection<Schema, "directus_versions", {
            id: string;
            key: string;
            name: string | null;
            collection: string | DirectusCollection<Schema>;
            item: string;
            hash: string;
            date_created: "datetime" | null;
            date_updated: "datetime" | null;
            user_created: string | MergeCoreCollection<Schema, "directus_users", {
                id: string;
                first_name: string | null;
                last_name: string | null;
                email: string | null;
                password: string | null;
                location: string | null;
                title: string | null;
                description: string | null;
                tags: string[] | null;
                avatar: string | MergeCoreCollection<Schema, "directus_files", {
                    id: string;
                    storage: string;
                    filename_disk: string | null;
                    filename_download: string;
                    title: string | null;
                    type: string | null;
                    folder: string | MergeCoreCollection<Schema, "directus_folders", {
                        id: string;
                        name: string;
                        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                    }> | null;
                    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    uploaded_on: "datetime";
                    modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    modified_on: "datetime";
                    charset: string | null;
                    filesize: string | null;
                    width: number | null;
                    height: number | null;
                    duration: number | null;
                    embed: unknown;
                    description: string | null;
                    location: string | null;
                    tags: string[] | null;
                    metadata: Record<string, any> | null;
                }> | null;
                language: string | null;
                theme: string | null;
                tfa_secret: string | null;
                status: string;
                role: string | MergeCoreCollection<Schema, "directus_roles", {
                    id: string;
                    name: string;
                    icon: string;
                    description: string | null;
                    ip_access: string | null;
                    enforce_tfa: boolean;
                    admin_access: boolean;
                    app_access: boolean;
                }> | null;
                token: string | null;
                last_access: "datetime" | null;
                last_page: string | null;
                provider: string;
                external_identifier: string | null;
                auth_data: Record<string, any> | null;
                email_notifications: boolean | null;
            }> | null;
            user_updated: string | MergeCoreCollection<Schema, "directus_users", {
                id: string;
                first_name: string | null;
                last_name: string | null;
                email: string | null;
                password: string | null;
                location: string | null;
                title: string | null;
                description: string | null;
                tags: string[] | null;
                avatar: string | MergeCoreCollection<Schema, "directus_files", {
                    id: string;
                    storage: string;
                    filename_disk: string | null;
                    filename_download: string;
                    title: string | null;
                    type: string | null;
                    folder: string | MergeCoreCollection<Schema, "directus_folders", {
                        id: string;
                        name: string;
                        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                    }> | null;
                    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    uploaded_on: "datetime";
                    modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    modified_on: "datetime";
                    charset: string | null;
                    filesize: string | null;
                    width: number | null;
                    height: number | null;
                    duration: number | null;
                    embed: unknown;
                    description: string | null;
                    location: string | null;
                    tags: string[] | null;
                    metadata: Record<string, any> | null;
                }> | null;
                language: string | null;
                theme: string | null;
                tfa_secret: string | null;
                status: string;
                role: string | MergeCoreCollection<Schema, "directus_roles", {
                    id: string;
                    name: string;
                    icon: string;
                    description: string | null;
                    ip_access: string | null;
                    enforce_tfa: boolean;
                    admin_access: boolean;
                    app_access: boolean;
                }> | null;
                token: string | null;
                last_access: "datetime" | null;
                last_page: string | null;
                provider: string;
                external_identifier: string | null;
                auth_data: Record<string, any> | null;
                email_notifications: boolean | null;
            }> | null;
        }> | null;
    }>[] | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_activity", {
    id: number;
    action: string;
    user: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    timestamp: "datetime";
    ip: string | null;
    user_agent: string | null;
    collection: string;
    /**
     * Updates an existing comment by activity action primary key.
     * @param key
     * @param item
     * @param query
     * @returns Returns the activity object of the created comment.
     * @throws Will throw if key is empty
     */
    item: string;
    comment: string | null;
    origin: string | null;
    revisions: number[] | MergeCoreCollection<Schema, "directus_revisions", {
        id: number;
        activity: number | MergeCoreCollection<Schema, "directus_activity", any>;
        collection: string;
        item: string;
        data: Record<string, any> | null;
        delta: Record<string, any> | null;
        parent: number | MergeCoreCollection<Schema, "directus_revisions", any> | null;
        version: string | MergeCoreCollection<Schema, "directus_versions", {
            id: string;
            key: string;
            name: string | null;
            collection: string | DirectusCollection<Schema>;
            item: string;
            hash: string;
            date_created: "datetime" | null;
            date_updated: "datetime" | null;
            user_created: string | MergeCoreCollection<Schema, "directus_users", {
                id: string;
                first_name: string | null;
                last_name: string | null;
                email: string | null;
                password: string | null;
                location: string | null;
                title: string | null;
                description: string | null;
                tags: string[] | null;
                avatar: string | MergeCoreCollection<Schema, "directus_files", {
                    id: string;
                    storage: string;
                    filename_disk: string | null;
                    filename_download: string;
                    title: string | null;
                    type: string | null;
                    folder: string | MergeCoreCollection<Schema, "directus_folders", {
                        id: string;
                        name: string;
                        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                    }> | null;
                    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    uploaded_on: "datetime";
                    modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    modified_on: "datetime";
                    charset: string | null;
                    filesize: string | null;
                    width: number | null;
                    height: number | null;
                    duration: number | null;
                    embed: unknown;
                    description: string | null;
                    location: string | null;
                    tags: string[] | null;
                    metadata: Record<string, any> | null;
                }> | null;
                language: string | null;
                theme: string | null;
                tfa_secret: string | null;
                status: string;
                role: string | MergeCoreCollection<Schema, "directus_roles", {
                    id: string;
                    name: string;
                    icon: string;
                    description: string | null;
                    ip_access: string | null;
                    enforce_tfa: boolean;
                    admin_access: boolean;
                    app_access: boolean;
                }> | null;
                token: string | null;
                last_access: "datetime" | null;
                last_page: string | null;
                provider: string;
                external_identifier: string | null;
                auth_data: Record<string, any> | null;
                email_notifications: boolean | null;
            }> | null;
            user_updated: string | MergeCoreCollection<Schema, "directus_users", {
                id: string;
                first_name: string | null;
                last_name: string | null;
                email: string | null;
                password: string | null;
                location: string | null;
                title: string | null;
                description: string | null;
                tags: string[] | null;
                avatar: string | MergeCoreCollection<Schema, "directus_files", {
                    id: string;
                    storage: string;
                    filename_disk: string | null;
                    filename_download: string;
                    title: string | null;
                    type: string | null;
                    folder: string | MergeCoreCollection<Schema, "directus_folders", {
                        id: string;
                        name: string;
                        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                    }> | null;
                    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    uploaded_on: "datetime";
                    modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    modified_on: "datetime";
                    charset: string | null;
                    filesize: string | null;
                    width: number | null;
                    height: number | null;
                    duration: number | null;
                    embed: unknown;
                    description: string | null;
                    location: string | null;
                    tags: string[] | null;
                    metadata: Record<string, any> | null;
                }> | null;
                language: string | null;
                theme: string | null;
                tfa_secret: string | null;
                status: string;
                role: string | MergeCoreCollection<Schema, "directus_roles", {
                    id: string;
                    name: string;
                    icon: string;
                    description: string | null;
                    ip_access: string | null;
                    enforce_tfa: boolean;
                    admin_access: boolean;
                    app_access: boolean;
                }> | null;
                token: string | null;
                last_access: "datetime" | null;
                last_page: string | null;
                provider: string;
                external_identifier: string | null;
                auth_data: Record<string, any> | null;
                email_notifications: boolean | null;
            }> | null;
        }> | null;
    }>[] | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_activity", {
    id: number;
    action: string;
    user: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    timestamp: "datetime";
    ip: string | null;
    user_agent: string | null;
    collection: string;
    /**
     * Updates an existing comment by activity action primary key.
     * @param key
     * @param item
     * @param query
     * @returns Returns the activity object of the created comment.
     * @throws Will throw if key is empty
     */
    item: string;
    comment: string | null;
    origin: string | null;
    revisions: number[] | MergeCoreCollection<Schema, "directus_revisions", {
        id: number;
        activity: number | MergeCoreCollection<Schema, "directus_activity", any>;
        collection: string;
        item: string;
        data: Record<string, any> | null;
        delta: Record<string, any> | null;
        parent: number | MergeCoreCollection<Schema, "directus_revisions", any> | null;
        version: string | MergeCoreCollection<Schema, "directus_versions", {
            id: string;
            key: string;
            name: string | null;
            collection: string | DirectusCollection<Schema>;
            item: string;
            hash: string;
            date_created: "datetime" | null;
            date_updated: "datetime" | null;
            user_created: string | MergeCoreCollection<Schema, "directus_users", {
                id: string;
                first_name: string | null;
                last_name: string | null;
                email: string | null;
                password: string | null;
                location: string | null;
                title: string | null;
                description: string | null;
                tags: string[] | null;
                avatar: string | MergeCoreCollection<Schema, "directus_files", {
                    id: string;
                    storage: string;
                    filename_disk: string | null;
                    filename_download: string;
                    title: string | null;
                    type: string | null;
                    folder: string | MergeCoreCollection<Schema, "directus_folders", {
                        id: string;
                        name: string;
                        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                    }> | null;
                    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    uploaded_on: "datetime";
                    modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    modified_on: "datetime";
                    charset: string | null;
                    filesize: string | null;
                    width: number | null;
                    height: number | null;
                    duration: number | null;
                    embed: unknown;
                    description: string | null;
                    location: string | null;
                    tags: string[] | null;
                    metadata: Record<string, any> | null;
                }> | null;
                language: string | null;
                theme: string | null;
                tfa_secret: string | null;
                status: string;
                role: string | MergeCoreCollection<Schema, "directus_roles", {
                    id: string;
                    name: string;
                    icon: string;
                    description: string | null;
                    ip_access: string | null;
                    enforce_tfa: boolean;
                    admin_access: boolean;
                    app_access: boolean;
                }> | null;
                token: string | null;
                last_access: "datetime" | null;
                last_page: string | null;
                provider: string;
                external_identifier: string | null;
                auth_data: Record<string, any> | null;
                email_notifications: boolean | null;
            }> | null;
            user_updated: string | MergeCoreCollection<Schema, "directus_users", {
                id: string;
                first_name: string | null;
                last_name: string | null;
                email: string | null;
                password: string | null;
                location: string | null;
                title: string | null;
                description: string | null;
                tags: string[] | null;
                avatar: string | MergeCoreCollection<Schema, "directus_files", {
                    id: string;
                    storage: string;
                    filename_disk: string | null;
                    filename_download: string;
                    title: string | null;
                    type: string | null;
                    folder: string | MergeCoreCollection<Schema, "directus_folders", {
                        id: string;
                        name: string;
                        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                    }> | null;
                    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    uploaded_on: "datetime";
                    modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    modified_on: "datetime";
                    charset: string | null;
                    filesize: string | null;
                    width: number | null;
                    height: number | null;
                    duration: number | null;
                    embed: unknown;
                    description: string | null;
                    location: string | null;
                    tags: string[] | null;
                    metadata: Record<string, any> | null;
                }> | null;
                language: string | null;
                theme: string | null;
                tfa_secret: string | null;
                status: string;
                role: string | MergeCoreCollection<Schema, "directus_roles", {
                    id: string;
                    name: string;
                    icon: string;
                    description: string | null;
                    ip_access: string | null;
                    enforce_tfa: boolean;
                    admin_access: boolean;
                    app_access: boolean;
                }> | null;
                token: string | null;
                last_access: "datetime" | null;
                last_page: string | null;
                provider: string;
                external_identifier: string | null;
                auth_data: Record<string, any> | null;
                email_notifications: boolean | null;
            }> | null;
        }> | null;
    }>[] | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_activity", {
    id: number;
    action: string;
    user: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    timestamp: "datetime";
    ip: string | null;
    user_agent: string | null;
    collection: string;
    /**
     * Updates an existing comment by activity action primary key.
     * @param key
     * @param item
     * @param query
     * @returns Returns the activity object of the created comment.
     * @throws Will throw if key is empty
     */
    item: string;
    comment: string | null;
    origin: string | null;
    revisions: number[] | MergeCoreCollection<Schema, "directus_revisions", {
        id: number;
        activity: number | MergeCoreCollection<Schema, "directus_activity", any>;
        collection: string;
        item: string;
        data: Record<string, any> | null;
        delta: Record<string, any> | null;
        parent: number | MergeCoreCollection<Schema, "directus_revisions", any> | null;
        version: string | MergeCoreCollection<Schema, "directus_versions", {
            id: string;
            key: string;
            name: string | null;
            collection: string | DirectusCollection<Schema>;
            item: string;
            hash: string;
            date_created: "datetime" | null;
            date_updated: "datetime" | null;
            user_created: string | MergeCoreCollection<Schema, "directus_users", {
                id: string;
                first_name: string | null;
                last_name: string | null;
                email: string | null;
                password: string | null;
                location: string | null;
                title: string | null;
                description: string | null;
                tags: string[] | null;
                avatar: string | MergeCoreCollection<Schema, "directus_files", {
                    id: string;
                    storage: string;
                    filename_disk: string | null;
                    filename_download: string;
                    title: string | null;
                    type: string | null;
                    folder: string | MergeCoreCollection<Schema, "directus_folders", {
                        id: string;
                        name: string;
                        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                    }> | null;
                    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    uploaded_on: "datetime";
                    modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    modified_on: "datetime";
                    charset: string | null;
                    filesize: string | null;
                    width: number | null;
                    height: number | null;
                    duration: number | null;
                    embed: unknown;
                    description: string | null;
                    location: string | null;
                    tags: string[] | null;
                    metadata: Record<string, any> | null;
                }> | null;
                language: string | null;
                theme: string | null;
                tfa_secret: string | null;
                status: string;
                role: string | MergeCoreCollection<Schema, "directus_roles", {
                    id: string;
                    name: string;
                    icon: string;
                    description: string | null;
                    ip_access: string | null;
                    enforce_tfa: boolean;
                    admin_access: boolean;
                    app_access: boolean;
                }> | null;
                token: string | null;
                last_access: "datetime" | null;
                last_page: string | null;
                provider: string;
                external_identifier: string | null;
                auth_data: Record<string, any> | null;
                email_notifications: boolean | null;
            }> | null;
            user_updated: string | MergeCoreCollection<Schema, "directus_users", {
                id: string;
                first_name: string | null;
                last_name: string | null;
                email: string | null;
                password: string | null;
                location: string | null;
                title: string | null;
                description: string | null;
                tags: string[] | null;
                avatar: string | MergeCoreCollection<Schema, "directus_files", {
                    id: string;
                    storage: string;
                    filename_disk: string | null;
                    filename_download: string;
                    title: string | null;
                    type: string | null;
                    folder: string | MergeCoreCollection<Schema, "directus_folders", {
                        id: string;
                        name: string;
                        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                    }> | null;
                    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    uploaded_on: "datetime";
                    modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    modified_on: "datetime";
                    charset: string | null;
                    filesize: string | null;
                    width: number | null;
                    height: number | null;
                    duration: number | null;
                    embed: unknown;
                    description: string | null;
                    location: string | null;
                    tags: string[] | null;
                    metadata: Record<string, any> | null;
                }> | null;
                language: string | null;
                theme: string | null;
                tfa_secret: string | null;
                status: string;
                role: string | MergeCoreCollection<Schema, "directus_roles", {
                    id: string;
                    name: string;
                    icon: string;
                    description: string | null;
                    ip_access: string | null;
                    enforce_tfa: boolean;
                    admin_access: boolean;
                    app_access: boolean;
                }> | null;
                token: string | null;
                last_access: "datetime" | null;
                last_page: string | null;
                provider: string;
                external_identifier: string | null;
                auth_data: Record<string, any> | null;
                email_notifications: boolean | null;
            }> | null;
        }> | null;
    }>[] | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_activity", {
    id: number;
    action: string;
    user: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    timestamp: "datetime";
    ip: string | null;
    user_agent: string | null;
    collection: string;
    /**
     * Updates an existing comment by activity action primary key.
     * @param key
     * @param item
     * @param query
     * @returns Returns the activity object of the created comment.
     * @throws Will throw if key is empty
     */
    item: string;
    comment: string | null;
    origin: string | null;
    revisions: number[] | MergeCoreCollection<Schema, "directus_revisions", {
        id: number;
        activity: number | MergeCoreCollection<Schema, "directus_activity", any>;
        collection: string;
        item: string;
        data: Record<string, any> | null;
        delta: Record<string, any> | null;
        parent: number | MergeCoreCollection<Schema, "directus_revisions", any> | null;
        version: string | MergeCoreCollection<Schema, "directus_versions", {
            id: string;
            key: string;
            name: string | null;
            collection: string | DirectusCollection<Schema>;
            item: string;
            hash: string;
            date_created: "datetime" | null;
            date_updated: "datetime" | null;
            user_created: string | MergeCoreCollection<Schema, "directus_users", {
                id: string;
                first_name: string | null;
                last_name: string | null;
                email: string | null;
                password: string | null;
                location: string | null;
                title: string | null;
                description: string | null;
                tags: string[] | null;
                avatar: string | MergeCoreCollection<Schema, "directus_files", {
                    id: string;
                    storage: string;
                    filename_disk: string | null;
                    filename_download: string;
                    title: string | null;
                    type: string | null;
                    folder: string | MergeCoreCollection<Schema, "directus_folders", {
                        id: string;
                        name: string;
                        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                    }> | null;
                    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    uploaded_on: "datetime";
                    modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    modified_on: "datetime";
                    charset: string | null;
                    filesize: string | null;
                    width: number | null;
                    height: number | null;
                    duration: number | null;
                    embed: unknown;
                    description: string | null;
                    location: string | null;
                    tags: string[] | null;
                    metadata: Record<string, any> | null;
                }> | null;
                language: string | null;
                theme: string | null;
                tfa_secret: string | null;
                status: string;
                role: string | MergeCoreCollection<Schema, "directus_roles", {
                    id: string;
                    name: string;
                    icon: string;
                    description: string | null;
                    ip_access: string | null;
                    enforce_tfa: boolean;
                    admin_access: boolean;
                    app_access: boolean;
                }> | null;
                token: string | null;
                last_access: "datetime" | null;
                last_page: string | null;
                provider: string;
                external_identifier: string | null;
                auth_data: Record<string, any> | null;
                email_notifications: boolean | null;
            }> | null;
            user_updated: string | MergeCoreCollection<Schema, "directus_users", {
                id: string;
                first_name: string | null;
                last_name: string | null;
                email: string | null;
                password: string | null;
                location: string | null;
                title: string | null;
                description: string | null;
                tags: string[] | null;
                avatar: string | MergeCoreCollection<Schema, "directus_files", {
                    id: string;
                    storage: string;
                    filename_disk: string | null;
                    filename_download: string;
                    title: string | null;
                    type: string | null;
                    folder: string | MergeCoreCollection<Schema, "directus_folders", {
                        id: string;
                        name: string;
                        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                    }> | null;
                    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    uploaded_on: "datetime";
                    modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                    modified_on: "datetime";
                    charset: string | null;
                    filesize: string | null;
                    width: number | null;
                    height: number | null;
                    duration: number | null;
                    embed: unknown;
                    description: string | null;
                    location: string | null;
                    tags: string[] | null;
                    metadata: Record<string, any> | null;
                }> | null;
                language: string | null;
                theme: string | null;
                tfa_secret: string | null;
                status: string;
                role: string | MergeCoreCollection<Schema, "directus_roles", {
                    id: string;
                    name: string;
                    icon: string;
                    description: string | null;
                    ip_access: string | null;
                    enforce_tfa: boolean;
                    admin_access: boolean;
                    app_access: boolean;
                }> | null;
                token: string | null;
                last_access: "datetime" | null;
                last_page: string | null;
                provider: string;
                external_identifier: string | null;
                auth_data: Record<string, any> | null;
                email_notifications: boolean | null;
            }> | null;
        }> | null;
    }>[] | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>, Schema>;

type UpdateCollectionOutput<Schema extends object, TQuery extends Query<Schema, Item>, Item extends object = DirectusCollection<Schema>> = ApplyQueryFields<Schema, Item, TQuery['fields']>;
/**
 * Update the metadata for an existing collection.
 * @param collection
 * @param item
 * @param query
 * @returns The collection object for the updated collection in this request.
 * @throws Will throw if collection is empty
 */
declare const updateCollection: <Schema extends object, const TQuery extends Query<Schema, DirectusCollection<Schema>>>(collection: string, item: NestedPartial<DirectusCollection<Schema>>, query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, DirectusCollection<Schema>> extends infer FF ? MapFlatFields<DirectusCollection<Schema>, FieldsWildcard<DirectusCollection<Schema>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof DirectusCollection<Schema> ? Extract<DirectusCollection<Schema>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<DirectusCollection<Schema>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>, Schema>;

type UpdateDashboardOutput<Schema extends object, TQuery extends Query<Schema, Item>, Item extends object = DirectusDashboard<Schema>> = ApplyQueryFields<Schema, Item, TQuery['fields']>;
/**
 * Update multiple existing dashboards.
 * @param keys
 * @param item
 * @param query
 * @returns Returns the dashboard objects for the updated dashboards.
 * @throws Will throw if keys is empty
 */
declare const updateDashboards: <Schema extends object, const TQuery extends Query<Schema, DirectusDashboard<Schema>>>(keys: DirectusDashboard<Schema>["id"][], item: Partial<DirectusDashboard<Schema>>, query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_dashboards", {
    id: string;
    name: string;
    icon: string;
    note: string | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    color: string | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_dashboards", {
    id: string;
    name: string;
    icon: string;
    note: string | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    color: string | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_dashboards", {
    id: string;
    name: string;
    icon: string;
    note: string | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    color: string | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_dashboards", {
    id: string;
    name: string;
    icon: string;
    note: string | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    color: string | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_dashboards", {
    id: string;
    name: string;
    icon: string;
    note: string | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    color: string | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_dashboards", {
    id: string;
    name: string;
    icon: string;
    note: string | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    color: string | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>[], Schema>;
/**
 * Update an existing dashboard.
 * @param key
 * @param item
 * @param query
 * @returns Returns the dashboard object for the updated dashboard.
 * @throws Will throw if key is empty
 */
declare const updateDashboard: <Schema extends object, const TQuery extends Query<Schema, DirectusDashboard<Schema>>>(key: DirectusDashboard<Schema>["id"], item: Partial<DirectusDashboard<Schema>>, query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_dashboards", {
    id: string;
    name: string;
    icon: string;
    note: string | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    color: string | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_dashboards", {
    id: string;
    name: string;
    icon: string;
    note: string | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    color: string | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_dashboards", {
    id: string;
    name: string;
    icon: string;
    note: string | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    color: string | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_dashboards", {
    id: string;
    name: string;
    icon: string;
    note: string | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    color: string | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_dashboards", {
    id: string;
    name: string;
    icon: string;
    note: string | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    color: string | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_dashboards", {
    id: string;
    name: string;
    icon: string;
    note: string | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    color: string | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>, Schema>;

type UpdateFieldOutput<Schema extends object, TQuery extends Query<Schema, Item>, Item extends object = DirectusField<Schema>> = ApplyQueryFields<Schema, Item, TQuery['fields']>;
/**
 * Updates the given field in the given collection.
 * @param collection
 * @param field
 * @param item
 * @param query
 * @returns
 * @throws Will throw if collection is empty
 * @throws Will throw if field is empty
 */
declare const updateField: <Schema extends object, const TQuery extends Query<Schema, DirectusField<Schema>>>(collection: string, field: string, item: NestedPartial<DirectusField<Schema>>, query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, DirectusField<Schema>> extends infer FF ? MapFlatFields<DirectusField<Schema>, FieldsWildcard<DirectusField<Schema>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof DirectusField<Schema> ? Extract<DirectusField<Schema>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<DirectusField<Schema>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>, Schema>;

type UpdateFileOutput<Schema extends object, TQuery extends Query<Schema, Item>, Item extends object = DirectusFile<Schema>> = ApplyQueryFields<Schema, Item, TQuery['fields']>;
/**
 * Update multiple files at the same time.
 * @param keys
 * @param item
 * @param query
 * @returns Returns the file objects for the updated files.
 * @throws Will throw if keys is empty
 */
declare const updateFiles: <Schema extends object, const TQuery extends Query<Schema, DirectusFile<Schema>>>(keys: DirectusFile<Schema>["id"][], item: Partial<DirectusFile<Schema>>, query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_files", {
    id: string;
    storage: string;
    filename_disk: string | null;
    filename_download: string;
    title: string | null;
    type: string | null;
    folder: string | MergeCoreCollection<Schema, "directus_folders", {
        id: string;
        name: string;
        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
    }> | null;
    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        /**
         * Update multiple files at the same time.
         * @param keys
         * @param item
         * @param query
         * @returns Returns the file objects for the updated files.
         * @throws Will throw if keys is empty
         */
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", any> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    uploaded_on: "datetime";
    modified_by: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        /**
         * Update multiple files at the same time.
         * @param keys
         * @param item
         * @param query
         * @returns Returns the file objects for the updated files.
         * @throws Will throw if keys is empty
         */
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", any> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    modified_on: "datetime";
    charset: string | null;
    filesize: string | null;
    width: number | null;
    height: number | null;
    duration: number | null;
    embed: unknown;
    description: string | null;
    location: string | null;
    tags: string[] | null;
    metadata: Record<string, any> | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_files", {
    id: string;
    storage: string;
    filename_disk: string | null;
    filename_download: string;
    title: string | null;
    type: string | null;
    folder: string | MergeCoreCollection<Schema, "directus_folders", {
        id: string;
        name: string;
        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
    }> | null;
    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        /**
         * Update multiple files at the same time.
         * @param keys
         * @param item
         * @param query
         * @returns Returns the file objects for the updated files.
         * @throws Will throw if keys is empty
         */
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", any> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    uploaded_on: "datetime";
    modified_by: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        /**
         * Update multiple files at the same time.
         * @param keys
         * @param item
         * @param query
         * @returns Returns the file objects for the updated files.
         * @throws Will throw if keys is empty
         */
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", any> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    modified_on: "datetime";
    charset: string | null;
    filesize: string | null;
    width: number | null;
    height: number | null;
    duration: number | null;
    embed: unknown;
    description: string | null;
    location: string | null;
    tags: string[] | null;
    metadata: Record<string, any> | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_files", {
    id: string;
    storage: string;
    filename_disk: string | null;
    filename_download: string;
    title: string | null;
    type: string | null;
    folder: string | MergeCoreCollection<Schema, "directus_folders", {
        id: string;
        name: string;
        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
    }> | null;
    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        /**
         * Update multiple files at the same time.
         * @param keys
         * @param item
         * @param query
         * @returns Returns the file objects for the updated files.
         * @throws Will throw if keys is empty
         */
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", any> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    uploaded_on: "datetime";
    modified_by: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        /**
         * Update multiple files at the same time.
         * @param keys
         * @param item
         * @param query
         * @returns Returns the file objects for the updated files.
         * @throws Will throw if keys is empty
         */
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", any> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    modified_on: "datetime";
    charset: string | null;
    filesize: string | null;
    width: number | null;
    height: number | null;
    duration: number | null;
    embed: unknown;
    description: string | null;
    location: string | null;
    tags: string[] | null;
    metadata: Record<string, any> | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_files", {
    id: string;
    storage: string;
    filename_disk: string | null;
    filename_download: string;
    title: string | null;
    type: string | null;
    folder: string | MergeCoreCollection<Schema, "directus_folders", {
        id: string;
        name: string;
        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
    }> | null;
    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        /**
         * Update multiple files at the same time.
         * @param keys
         * @param item
         * @param query
         * @returns Returns the file objects for the updated files.
         * @throws Will throw if keys is empty
         */
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", any> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    uploaded_on: "datetime";
    modified_by: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        /**
         * Update multiple files at the same time.
         * @param keys
         * @param item
         * @param query
         * @returns Returns the file objects for the updated files.
         * @throws Will throw if keys is empty
         */
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", any> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    modified_on: "datetime";
    charset: string | null;
    filesize: string | null;
    width: number | null;
    height: number | null;
    duration: number | null;
    embed: unknown;
    description: string | null;
    location: string | null;
    tags: string[] | null;
    metadata: Record<string, any> | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_files", {
    id: string;
    storage: string;
    filename_disk: string | null;
    filename_download: string;
    title: string | null;
    type: string | null;
    folder: string | MergeCoreCollection<Schema, "directus_folders", {
        id: string;
        name: string;
        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
    }> | null;
    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        /**
         * Update multiple files at the same time.
         * @param keys
         * @param item
         * @param query
         * @returns Returns the file objects for the updated files.
         * @throws Will throw if keys is empty
         */
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", any> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    uploaded_on: "datetime";
    modified_by: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        /**
         * Update multiple files at the same time.
         * @param keys
         * @param item
         * @param query
         * @returns Returns the file objects for the updated files.
         * @throws Will throw if keys is empty
         */
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", any> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    modified_on: "datetime";
    charset: string | null;
    filesize: string | null;
    width: number | null;
    height: number | null;
    duration: number | null;
    embed: unknown;
    description: string | null;
    location: string | null;
    tags: string[] | null;
    metadata: Record<string, any> | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_files", {
    id: string;
    storage: string;
    filename_disk: string | null;
    filename_download: string;
    title: string | null;
    type: string | null;
    folder: string | MergeCoreCollection<Schema, "directus_folders", {
        id: string;
        name: string;
        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
    }> | null;
    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        /**
         * Update multiple files at the same time.
         * @param keys
         * @param item
         * @param query
         * @returns Returns the file objects for the updated files.
         * @throws Will throw if keys is empty
         */
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", any> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    uploaded_on: "datetime";
    modified_by: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        /**
         * Update multiple files at the same time.
         * @param keys
         * @param item
         * @param query
         * @returns Returns the file objects for the updated files.
         * @throws Will throw if keys is empty
         */
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", any> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    modified_on: "datetime";
    charset: string | null;
    filesize: string | null;
    width: number | null;
    height: number | null;
    duration: number | null;
    embed: unknown;
    description: string | null;
    location: string | null;
    tags: string[] | null;
    metadata: Record<string, any> | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>[], Schema>;
/**
 * Update an existing file, and/or replace it's file contents.
 * @param key
 * @param item
 * @param query
 * @returns Returns the file object for the updated file.
 * @throws Will throw if key is empty
 */
declare const updateFile: <Schema extends object, const TQuery extends Query<Schema, DirectusFile<Schema>>>(key: DirectusFile<Schema>["id"], item: FormData | Partial<DirectusFile<Schema>>, query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_files", {
    id: string;
    storage: string;
    filename_disk: string | null;
    filename_download: string;
    title: string | null;
    type: string | null;
    folder: string | MergeCoreCollection<Schema, "directus_folders", {
        id: string;
        name: string;
        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
    }> | null;
    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        /**
         * Update multiple files at the same time.
         * @param keys
         * @param item
         * @param query
         * @returns Returns the file objects for the updated files.
         * @throws Will throw if keys is empty
         */
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", any> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    uploaded_on: "datetime";
    modified_by: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        /**
         * Update multiple files at the same time.
         * @param keys
         * @param item
         * @param query
         * @returns Returns the file objects for the updated files.
         * @throws Will throw if keys is empty
         */
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", any> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    modified_on: "datetime";
    charset: string | null;
    filesize: string | null;
    width: number | null;
    height: number | null;
    duration: number | null;
    embed: unknown;
    description: string | null;
    location: string | null;
    tags: string[] | null;
    metadata: Record<string, any> | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_files", {
    id: string;
    storage: string;
    filename_disk: string | null;
    filename_download: string;
    title: string | null;
    type: string | null;
    folder: string | MergeCoreCollection<Schema, "directus_folders", {
        id: string;
        name: string;
        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
    }> | null;
    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        /**
         * Update multiple files at the same time.
         * @param keys
         * @param item
         * @param query
         * @returns Returns the file objects for the updated files.
         * @throws Will throw if keys is empty
         */
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", any> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    uploaded_on: "datetime";
    modified_by: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        /**
         * Update multiple files at the same time.
         * @param keys
         * @param item
         * @param query
         * @returns Returns the file objects for the updated files.
         * @throws Will throw if keys is empty
         */
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", any> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    modified_on: "datetime";
    charset: string | null;
    filesize: string | null;
    width: number | null;
    height: number | null;
    duration: number | null;
    embed: unknown;
    description: string | null;
    location: string | null;
    tags: string[] | null;
    metadata: Record<string, any> | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_files", {
    id: string;
    storage: string;
    filename_disk: string | null;
    filename_download: string;
    title: string | null;
    type: string | null;
    folder: string | MergeCoreCollection<Schema, "directus_folders", {
        id: string;
        name: string;
        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
    }> | null;
    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        /**
         * Update multiple files at the same time.
         * @param keys
         * @param item
         * @param query
         * @returns Returns the file objects for the updated files.
         * @throws Will throw if keys is empty
         */
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", any> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    uploaded_on: "datetime";
    modified_by: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        /**
         * Update multiple files at the same time.
         * @param keys
         * @param item
         * @param query
         * @returns Returns the file objects for the updated files.
         * @throws Will throw if keys is empty
         */
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", any> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    modified_on: "datetime";
    charset: string | null;
    filesize: string | null;
    width: number | null;
    height: number | null;
    duration: number | null;
    embed: unknown;
    description: string | null;
    location: string | null;
    tags: string[] | null;
    metadata: Record<string, any> | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_files", {
    id: string;
    storage: string;
    filename_disk: string | null;
    filename_download: string;
    title: string | null;
    type: string | null;
    folder: string | MergeCoreCollection<Schema, "directus_folders", {
        id: string;
        name: string;
        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
    }> | null;
    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        /**
         * Update multiple files at the same time.
         * @param keys
         * @param item
         * @param query
         * @returns Returns the file objects for the updated files.
         * @throws Will throw if keys is empty
         */
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", any> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    uploaded_on: "datetime";
    modified_by: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        /**
         * Update multiple files at the same time.
         * @param keys
         * @param item
         * @param query
         * @returns Returns the file objects for the updated files.
         * @throws Will throw if keys is empty
         */
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", any> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    modified_on: "datetime";
    charset: string | null;
    filesize: string | null;
    width: number | null;
    height: number | null;
    duration: number | null;
    embed: unknown;
    description: string | null;
    location: string | null;
    tags: string[] | null;
    metadata: Record<string, any> | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_files", {
    id: string;
    storage: string;
    filename_disk: string | null;
    filename_download: string;
    title: string | null;
    type: string | null;
    folder: string | MergeCoreCollection<Schema, "directus_folders", {
        id: string;
        name: string;
        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
    }> | null;
    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        /**
         * Update multiple files at the same time.
         * @param keys
         * @param item
         * @param query
         * @returns Returns the file objects for the updated files.
         * @throws Will throw if keys is empty
         */
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", any> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    uploaded_on: "datetime";
    modified_by: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        /**
         * Update multiple files at the same time.
         * @param keys
         * @param item
         * @param query
         * @returns Returns the file objects for the updated files.
         * @throws Will throw if keys is empty
         */
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", any> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    modified_on: "datetime";
    charset: string | null;
    filesize: string | null;
    width: number | null;
    height: number | null;
    duration: number | null;
    embed: unknown;
    description: string | null;
    location: string | null;
    tags: string[] | null;
    metadata: Record<string, any> | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_files", {
    id: string;
    storage: string;
    filename_disk: string | null;
    filename_download: string;
    title: string | null;
    type: string | null;
    folder: string | MergeCoreCollection<Schema, "directus_folders", {
        id: string;
        name: string;
        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
    }> | null;
    uploaded_by: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        /**
         * Update multiple files at the same time.
         * @param keys
         * @param item
         * @param query
         * @returns Returns the file objects for the updated files.
         * @throws Will throw if keys is empty
         */
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", any> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    uploaded_on: "datetime";
    modified_by: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        /**
         * Update multiple files at the same time.
         * @param keys
         * @param item
         * @param query
         * @returns Returns the file objects for the updated files.
         * @throws Will throw if keys is empty
         */
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", any> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    modified_on: "datetime";
    charset: string | null;
    filesize: string | null;
    width: number | null;
    height: number | null;
    duration: number | null;
    embed: unknown;
    description: string | null;
    location: string | null;
    tags: string[] | null;
    metadata: Record<string, any> | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>, Schema>;

type UpdateFlowOutput<Schema extends object, TQuery extends Query<Schema, Item>, Item extends object = DirectusFlow<Schema>> = ApplyQueryFields<Schema, Item, TQuery['fields']>;
/**
 * Update multiple existing flows.
 * @param keys
 * @param item
 * @param query
 * @returns Returns the flow objects for the updated flows.
 * @throws Will throw if keys is empty
 */
declare const updateFlows: <Schema extends object, const TQuery extends Query<Schema, DirectusFlow<Schema>>>(keys: DirectusFlow<Schema>["id"][], item: Partial<DirectusFlow<Schema>>, query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_flows", {
    id: string;
    name: string;
    icon: string | null;
    color: string | null;
    description: string | null;
    status: string;
    trigger: string | null;
    accountability: string | null;
    options: Record<string, any> | null;
    operation: string | MergeCoreCollection<Schema, "directus_operations", {
        id: string;
        name: string | null;
        key: string;
        type: string;
        position_x: number;
        position_y: number;
        timestamp: string;
        options: Record<string, any> | null;
        resolve: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        reject: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        flow: string | MergeCoreCollection<Schema, "directus_flows", any>;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            /**
             * Update multiple existing flows.
             * @param keys
             * @param item
             * @param query
             * @returns Returns the flow objects for the updated flows.
             * @throws Will throw if keys is empty
             */
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }> | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        /**
         * Update multiple existing flows.
         * @param keys
         * @param item
         * @param query
         * @returns Returns the flow objects for the updated flows.
         * @throws Will throw if keys is empty
         */
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_flows", {
    id: string;
    name: string;
    icon: string | null;
    color: string | null;
    description: string | null;
    status: string;
    trigger: string | null;
    accountability: string | null;
    options: Record<string, any> | null;
    operation: string | MergeCoreCollection<Schema, "directus_operations", {
        id: string;
        name: string | null;
        key: string;
        type: string;
        position_x: number;
        position_y: number;
        timestamp: string;
        options: Record<string, any> | null;
        resolve: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        reject: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        flow: string | MergeCoreCollection<Schema, "directus_flows", any>;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            /**
             * Update multiple existing flows.
             * @param keys
             * @param item
             * @param query
             * @returns Returns the flow objects for the updated flows.
             * @throws Will throw if keys is empty
             */
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }> | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        /**
         * Update multiple existing flows.
         * @param keys
         * @param item
         * @param query
         * @returns Returns the flow objects for the updated flows.
         * @throws Will throw if keys is empty
         */
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_flows", {
    id: string;
    name: string;
    icon: string | null;
    color: string | null;
    description: string | null;
    status: string;
    trigger: string | null;
    accountability: string | null;
    options: Record<string, any> | null;
    operation: string | MergeCoreCollection<Schema, "directus_operations", {
        id: string;
        name: string | null;
        key: string;
        type: string;
        position_x: number;
        position_y: number;
        timestamp: string;
        options: Record<string, any> | null;
        resolve: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        reject: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        flow: string | MergeCoreCollection<Schema, "directus_flows", any>;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            /**
             * Update multiple existing flows.
             * @param keys
             * @param item
             * @param query
             * @returns Returns the flow objects for the updated flows.
             * @throws Will throw if keys is empty
             */
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }> | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        /**
         * Update multiple existing flows.
         * @param keys
         * @param item
         * @param query
         * @returns Returns the flow objects for the updated flows.
         * @throws Will throw if keys is empty
         */
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_flows", {
    id: string;
    name: string;
    icon: string | null;
    color: string | null;
    description: string | null;
    status: string;
    trigger: string | null;
    accountability: string | null;
    options: Record<string, any> | null;
    operation: string | MergeCoreCollection<Schema, "directus_operations", {
        id: string;
        name: string | null;
        key: string;
        type: string;
        position_x: number;
        position_y: number;
        timestamp: string;
        options: Record<string, any> | null;
        resolve: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        reject: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        flow: string | MergeCoreCollection<Schema, "directus_flows", any>;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            /**
             * Update multiple existing flows.
             * @param keys
             * @param item
             * @param query
             * @returns Returns the flow objects for the updated flows.
             * @throws Will throw if keys is empty
             */
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }> | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        /**
         * Update multiple existing flows.
         * @param keys
         * @param item
         * @param query
         * @returns Returns the flow objects for the updated flows.
         * @throws Will throw if keys is empty
         */
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_flows", {
    id: string;
    name: string;
    icon: string | null;
    color: string | null;
    description: string | null;
    status: string;
    trigger: string | null;
    accountability: string | null;
    options: Record<string, any> | null;
    operation: string | MergeCoreCollection<Schema, "directus_operations", {
        id: string;
        name: string | null;
        key: string;
        type: string;
        position_x: number;
        position_y: number;
        timestamp: string;
        options: Record<string, any> | null;
        resolve: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        reject: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        flow: string | MergeCoreCollection<Schema, "directus_flows", any>;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            /**
             * Update multiple existing flows.
             * @param keys
             * @param item
             * @param query
             * @returns Returns the flow objects for the updated flows.
             * @throws Will throw if keys is empty
             */
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }> | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        /**
         * Update multiple existing flows.
         * @param keys
         * @param item
         * @param query
         * @returns Returns the flow objects for the updated flows.
         * @throws Will throw if keys is empty
         */
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_flows", {
    id: string;
    name: string;
    icon: string | null;
    color: string | null;
    description: string | null;
    status: string;
    trigger: string | null;
    accountability: string | null;
    options: Record<string, any> | null;
    operation: string | MergeCoreCollection<Schema, "directus_operations", {
        id: string;
        name: string | null;
        key: string;
        type: string;
        position_x: number;
        position_y: number;
        timestamp: string;
        options: Record<string, any> | null;
        resolve: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        reject: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        flow: string | MergeCoreCollection<Schema, "directus_flows", any>;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            /**
             * Update multiple existing flows.
             * @param keys
             * @param item
             * @param query
             * @returns Returns the flow objects for the updated flows.
             * @throws Will throw if keys is empty
             */
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }> | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        /**
         * Update multiple existing flows.
         * @param keys
         * @param item
         * @param query
         * @returns Returns the flow objects for the updated flows.
         * @throws Will throw if keys is empty
         */
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>[], Schema>;
/**
 * Update an existing flow.
 * @param key
 * @param item
 * @param query
 * @returns Returns the flow object for the updated flow.
 * @throws Will throw if key is empty
 */
declare const updateFlow: <Schema extends object, const TQuery extends Query<Schema, DirectusFlow<Schema>>>(key: DirectusFlow<Schema>["id"], item: Partial<DirectusFlow<Schema>>, query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_flows", {
    id: string;
    name: string;
    icon: string | null;
    color: string | null;
    description: string | null;
    status: string;
    trigger: string | null;
    accountability: string | null;
    options: Record<string, any> | null;
    operation: string | MergeCoreCollection<Schema, "directus_operations", {
        id: string;
        name: string | null;
        key: string;
        type: string;
        position_x: number;
        position_y: number;
        timestamp: string;
        options: Record<string, any> | null;
        resolve: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        reject: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        flow: string | MergeCoreCollection<Schema, "directus_flows", any>;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            /**
             * Update multiple existing flows.
             * @param keys
             * @param item
             * @param query
             * @returns Returns the flow objects for the updated flows.
             * @throws Will throw if keys is empty
             */
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }> | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        /**
         * Update multiple existing flows.
         * @param keys
         * @param item
         * @param query
         * @returns Returns the flow objects for the updated flows.
         * @throws Will throw if keys is empty
         */
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_flows", {
    id: string;
    name: string;
    icon: string | null;
    color: string | null;
    description: string | null;
    status: string;
    trigger: string | null;
    accountability: string | null;
    options: Record<string, any> | null;
    operation: string | MergeCoreCollection<Schema, "directus_operations", {
        id: string;
        name: string | null;
        key: string;
        type: string;
        position_x: number;
        position_y: number;
        timestamp: string;
        options: Record<string, any> | null;
        resolve: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        reject: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        flow: string | MergeCoreCollection<Schema, "directus_flows", any>;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            /**
             * Update multiple existing flows.
             * @param keys
             * @param item
             * @param query
             * @returns Returns the flow objects for the updated flows.
             * @throws Will throw if keys is empty
             */
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }> | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        /**
         * Update multiple existing flows.
         * @param keys
         * @param item
         * @param query
         * @returns Returns the flow objects for the updated flows.
         * @throws Will throw if keys is empty
         */
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_flows", {
    id: string;
    name: string;
    icon: string | null;
    color: string | null;
    description: string | null;
    status: string;
    trigger: string | null;
    accountability: string | null;
    options: Record<string, any> | null;
    operation: string | MergeCoreCollection<Schema, "directus_operations", {
        id: string;
        name: string | null;
        key: string;
        type: string;
        position_x: number;
        position_y: number;
        timestamp: string;
        options: Record<string, any> | null;
        resolve: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        reject: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        flow: string | MergeCoreCollection<Schema, "directus_flows", any>;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            /**
             * Update multiple existing flows.
             * @param keys
             * @param item
             * @param query
             * @returns Returns the flow objects for the updated flows.
             * @throws Will throw if keys is empty
             */
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }> | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        /**
         * Update multiple existing flows.
         * @param keys
         * @param item
         * @param query
         * @returns Returns the flow objects for the updated flows.
         * @throws Will throw if keys is empty
         */
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_flows", {
    id: string;
    name: string;
    icon: string | null;
    color: string | null;
    description: string | null;
    status: string;
    trigger: string | null;
    accountability: string | null;
    options: Record<string, any> | null;
    operation: string | MergeCoreCollection<Schema, "directus_operations", {
        id: string;
        name: string | null;
        key: string;
        type: string;
        position_x: number;
        position_y: number;
        timestamp: string;
        options: Record<string, any> | null;
        resolve: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        reject: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        flow: string | MergeCoreCollection<Schema, "directus_flows", any>;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            /**
             * Update multiple existing flows.
             * @param keys
             * @param item
             * @param query
             * @returns Returns the flow objects for the updated flows.
             * @throws Will throw if keys is empty
             */
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }> | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        /**
         * Update multiple existing flows.
         * @param keys
         * @param item
         * @param query
         * @returns Returns the flow objects for the updated flows.
         * @throws Will throw if keys is empty
         */
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_flows", {
    id: string;
    name: string;
    icon: string | null;
    color: string | null;
    description: string | null;
    status: string;
    trigger: string | null;
    accountability: string | null;
    options: Record<string, any> | null;
    operation: string | MergeCoreCollection<Schema, "directus_operations", {
        id: string;
        name: string | null;
        key: string;
        type: string;
        position_x: number;
        position_y: number;
        timestamp: string;
        options: Record<string, any> | null;
        resolve: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        reject: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        flow: string | MergeCoreCollection<Schema, "directus_flows", any>;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            /**
             * Update multiple existing flows.
             * @param keys
             * @param item
             * @param query
             * @returns Returns the flow objects for the updated flows.
             * @throws Will throw if keys is empty
             */
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }> | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        /**
         * Update multiple existing flows.
         * @param keys
         * @param item
         * @param query
         * @returns Returns the flow objects for the updated flows.
         * @throws Will throw if keys is empty
         */
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_flows", {
    id: string;
    name: string;
    icon: string | null;
    color: string | null;
    description: string | null;
    status: string;
    trigger: string | null;
    accountability: string | null;
    options: Record<string, any> | null;
    operation: string | MergeCoreCollection<Schema, "directus_operations", {
        id: string;
        name: string | null;
        key: string;
        type: string;
        position_x: number;
        position_y: number;
        timestamp: string;
        options: Record<string, any> | null;
        resolve: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        reject: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        flow: string | MergeCoreCollection<Schema, "directus_flows", any>;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            /**
             * Update multiple existing flows.
             * @param keys
             * @param item
             * @param query
             * @returns Returns the flow objects for the updated flows.
             * @throws Will throw if keys is empty
             */
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }> | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        /**
         * Update multiple existing flows.
         * @param keys
         * @param item
         * @param query
         * @returns Returns the flow objects for the updated flows.
         * @throws Will throw if keys is empty
         */
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>, Schema>;

type UpdateFolderOutput<Schema extends object, TQuery extends Query<Schema, Item>, Item extends object = DirectusFolder<Schema>> = ApplyQueryFields<Schema, Item, TQuery['fields']>;
/**
 * Update multiple existing folders.
 * @param keys
 * @param item
 * @param query
 * @returns Returns the folder objects of the folders that were updated.
 * @throws Will throw if keys is empty
 */
declare const updateFolders: <Schema extends object, const TQuery extends Query<Schema, DirectusFolder<Schema>>>(keys: DirectusFolder<Schema>["id"][], item: Partial<DirectusFolder<Schema>>, query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_folders", {
    id: string;
    name: string;
    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_folders", {
    id: string;
    name: string;
    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_folders", {
    id: string;
    name: string;
    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_folders", {
    id: string;
    name: string;
    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_folders", {
    id: string;
    name: string;
    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_folders", {
    id: string;
    name: string;
    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>[], Schema>;
/**
 * Update an existing folder.
 * @param key
 * @param item
 * @param query
 * @returns Returns the folder object of the folder that was updated.
 * @throws Will throw if key is empty
 */
declare const updateFolder: <Schema extends object, const TQuery extends Query<Schema, DirectusFolder<Schema>>>(key: DirectusFolder<Schema>["id"], item: Partial<DirectusFolder<Schema>>, query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_folders", {
    id: string;
    name: string;
    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_folders", {
    id: string;
    name: string;
    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_folders", {
    id: string;
    name: string;
    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_folders", {
    id: string;
    name: string;
    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_folders", {
    id: string;
    name: string;
    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_folders", {
    id: string;
    name: string;
    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>, Schema>;

type UpdateItemOutput<Schema extends object, Collection extends keyof Schema, TQuery extends Query<Schema, Schema[Collection]>> = ApplyQueryFields<Schema, CollectionType<Schema, Collection>, TQuery['fields']>;
/**
 * Update multiple items at the same time.
 *
 * @param collection The collection of the items
 * @param keys The primary key of the items
 * @param item The item data to update
 * @param query Optional return data query
 *
 * @returns Returns the item objects for the updated items.
 * @throws Will throw if keys is empty
 * @throws Will throw if collection is empty
 * @throws Will throw if collection is a core collection
 */
declare const updateItems: <Schema extends object, Collection extends keyof Schema, const TQuery extends Query<Schema, Schema[Collection]>>(collection: Collection, keys: string[] | number[], item: Partial<UnpackList<Schema[Collection]>>, query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<IfAny<Schema, any, Collection extends keyof Schema ? UnpackList<Schema[Collection]> extends object ? object & UnpackList<Schema[Collection]> : never : never>>> extends infer FF ? MapFlatFields<UnpackList<IfAny<Schema, any, Collection extends keyof Schema ? UnpackList<Schema[Collection]> extends object ? object & UnpackList<Schema[Collection]> : never : never>>, FieldsWildcard<UnpackList<IfAny<Schema, any, Collection extends keyof Schema ? UnpackList<Schema[Collection]> extends object ? object & UnpackList<Schema[Collection]> : never : never>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<IfAny<Schema, any, Collection extends keyof Schema ? UnpackList<Schema[Collection]> extends object ? object & UnpackList<Schema[Collection]> : never : never>> ? Extract<UnpackList<IfAny<Schema, any, Collection extends keyof Schema ? UnpackList<Schema[Collection]> extends object ? object & UnpackList<Schema[Collection]> : never : never>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<IfAny<Schema, any, Collection extends keyof Schema ? UnpackList<Schema[Collection]> extends object ? object & UnpackList<Schema[Collection]> : never : never>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>[], Schema>;
/**
 * Update an existing item.
 *
 * @param collection The collection of the item
 * @param key The primary key of the item
 * @param item The item data to update
 * @param query Optional return data query
 *
 * @returns Returns the item object of the item that was updated.
 * @throws Will throw if key is empty
 * @throws Will throw if collection is empty
 * @throws Will throw if collection is a core collection
 */
declare const updateItem: <Schema extends object, Collection extends keyof Schema, const TQuery extends Query<Schema, Schema[Collection]>, Item = UnpackList<Schema[Collection]>>(collection: Collection, key: string | number, item: Partial<Item>, query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<IfAny<Schema, any, Collection extends keyof Schema ? UnpackList<Schema[Collection]> extends object ? object & UnpackList<Schema[Collection]> : never : never>>> extends infer FF ? MapFlatFields<UnpackList<IfAny<Schema, any, Collection extends keyof Schema ? UnpackList<Schema[Collection]> extends object ? object & UnpackList<Schema[Collection]> : never : never>>, FieldsWildcard<UnpackList<IfAny<Schema, any, Collection extends keyof Schema ? UnpackList<Schema[Collection]> extends object ? object & UnpackList<Schema[Collection]> : never : never>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<IfAny<Schema, any, Collection extends keyof Schema ? UnpackList<Schema[Collection]> extends object ? object & UnpackList<Schema[Collection]> : never : never>> ? Extract<UnpackList<IfAny<Schema, any, Collection extends keyof Schema ? UnpackList<Schema[Collection]> extends object ? object & UnpackList<Schema[Collection]> : never : never>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<IfAny<Schema, any, Collection extends keyof Schema ? UnpackList<Schema[Collection]> extends object ? object & UnpackList<Schema[Collection]> : never : never>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>, Schema>;

type UpdateNotificationOutput<Schema extends object, TQuery extends Query<Schema, Item>, Item extends object = DirectusNotification<Schema>> = ApplyQueryFields<Schema, Item, TQuery['fields']>;
/**
 * Update multiple existing notifications.
 * @param keys
 * @param item
 * @param query
 * @returns Returns the notification objects for the updated notifications.
 * @throws Will throw if keys is empty
 */
declare const updateNotifications: <Schema extends object, const TQuery extends Query<Schema, DirectusNotification<Schema>>>(keys: DirectusNotification<Schema>["id"][], item: Partial<DirectusNotification<Schema>>, query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_notifications", {
    id: string;
    timestamp: "datetime" | null;
    status: string | null;
    recipient: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }>;
    sender: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    subject: string;
    message: string | null;
    collection: string | null;
    /**
     * Update multiple existing notifications.
     * @param keys
     * @param item
     * @param query
     * @returns Returns the notification objects for the updated notifications.
     * @throws Will throw if keys is empty
     */
    item: string | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_notifications", {
    id: string;
    timestamp: "datetime" | null;
    status: string | null;
    recipient: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }>;
    sender: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    subject: string;
    message: string | null;
    collection: string | null;
    /**
     * Update multiple existing notifications.
     * @param keys
     * @param item
     * @param query
     * @returns Returns the notification objects for the updated notifications.
     * @throws Will throw if keys is empty
     */
    item: string | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_notifications", {
    id: string;
    timestamp: "datetime" | null;
    status: string | null;
    recipient: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }>;
    sender: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    subject: string;
    message: string | null;
    collection: string | null;
    /**
     * Update multiple existing notifications.
     * @param keys
     * @param item
     * @param query
     * @returns Returns the notification objects for the updated notifications.
     * @throws Will throw if keys is empty
     */
    item: string | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_notifications", {
    id: string;
    timestamp: "datetime" | null;
    status: string | null;
    recipient: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }>;
    sender: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    subject: string;
    message: string | null;
    collection: string | null;
    /**
     * Update multiple existing notifications.
     * @param keys
     * @param item
     * @param query
     * @returns Returns the notification objects for the updated notifications.
     * @throws Will throw if keys is empty
     */
    item: string | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_notifications", {
    id: string;
    timestamp: "datetime" | null;
    status: string | null;
    recipient: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }>;
    sender: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    subject: string;
    message: string | null;
    collection: string | null;
    /**
     * Update multiple existing notifications.
     * @param keys
     * @param item
     * @param query
     * @returns Returns the notification objects for the updated notifications.
     * @throws Will throw if keys is empty
     */
    item: string | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_notifications", {
    id: string;
    timestamp: "datetime" | null;
    status: string | null;
    recipient: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }>;
    sender: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    subject: string;
    message: string | null;
    collection: string | null;
    /**
     * Update multiple existing notifications.
     * @param keys
     * @param item
     * @param query
     * @returns Returns the notification objects for the updated notifications.
     * @throws Will throw if keys is empty
     */
    item: string | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>[], Schema>;
/**
 * Update an existing notification.
 * @param key
 * @param item
 * @param query
 * @returns Returns the notification object for the updated notification.
 * @throws Will throw if key is empty
 */
declare const updateNotification: <Schema extends object, const TQuery extends Query<Schema, DirectusNotification<Schema>>>(key: DirectusNotification<Schema>["id"], item: Partial<DirectusNotification<Schema>>, query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_notifications", {
    id: string;
    timestamp: "datetime" | null;
    status: string | null;
    recipient: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }>;
    sender: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    subject: string;
    message: string | null;
    collection: string | null;
    /**
     * Update multiple existing notifications.
     * @param keys
     * @param item
     * @param query
     * @returns Returns the notification objects for the updated notifications.
     * @throws Will throw if keys is empty
     */
    item: string | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_notifications", {
    id: string;
    timestamp: "datetime" | null;
    status: string | null;
    recipient: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }>;
    sender: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    subject: string;
    message: string | null;
    collection: string | null;
    /**
     * Update multiple existing notifications.
     * @param keys
     * @param item
     * @param query
     * @returns Returns the notification objects for the updated notifications.
     * @throws Will throw if keys is empty
     */
    item: string | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_notifications", {
    id: string;
    timestamp: "datetime" | null;
    status: string | null;
    recipient: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }>;
    sender: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    subject: string;
    message: string | null;
    collection: string | null;
    /**
     * Update multiple existing notifications.
     * @param keys
     * @param item
     * @param query
     * @returns Returns the notification objects for the updated notifications.
     * @throws Will throw if keys is empty
     */
    item: string | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_notifications", {
    id: string;
    timestamp: "datetime" | null;
    status: string | null;
    recipient: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }>;
    sender: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    subject: string;
    message: string | null;
    collection: string | null;
    /**
     * Update multiple existing notifications.
     * @param keys
     * @param item
     * @param query
     * @returns Returns the notification objects for the updated notifications.
     * @throws Will throw if keys is empty
     */
    item: string | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_notifications", {
    id: string;
    timestamp: "datetime" | null;
    status: string | null;
    recipient: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }>;
    sender: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    subject: string;
    message: string | null;
    collection: string | null;
    /**
     * Update multiple existing notifications.
     * @param keys
     * @param item
     * @param query
     * @returns Returns the notification objects for the updated notifications.
     * @throws Will throw if keys is empty
     */
    item: string | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_notifications", {
    id: string;
    timestamp: "datetime" | null;
    status: string | null;
    recipient: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }>;
    sender: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    subject: string;
    message: string | null;
    collection: string | null;
    /**
     * Update multiple existing notifications.
     * @param keys
     * @param item
     * @param query
     * @returns Returns the notification objects for the updated notifications.
     * @throws Will throw if keys is empty
     */
    item: string | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>, Schema>;

type UpdateOperationOutput<Schema extends object, TQuery extends Query<Schema, Item>, Item extends object = DirectusOperation<Schema>> = ApplyQueryFields<Schema, Item, TQuery['fields']>;
/**
 * Update multiple existing operations.
 * @param keys
 * @param item
 * @param query
 * @returns Returns the operation objects for the updated operations.
 * @throws Will throw if keys is empty
 */
declare const updateOperations: <Schema extends object, const TQuery extends Query<Schema, DirectusOperation<Schema>>>(keys: DirectusOperation<Schema>["id"][], item: Partial<DirectusOperation<Schema>>, query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_operations", {
    id: string;
    name: string | null;
    key: string;
    type: string;
    position_x: number;
    position_y: number;
    timestamp: string;
    options: Record<string, any> | null;
    resolve: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
    reject: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
    flow: string | MergeCoreCollection<Schema, "directus_flows", {
        id: string;
        name: string;
        icon: string | null;
        color: string | null;
        description: string | null;
        status: string;
        trigger: string | null;
        accountability: string | null;
        /**
         * Update multiple existing operations.
         * @param keys
         * @param item
         * @param query
         * @returns Returns the operation objects for the updated operations.
         * @throws Will throw if keys is empty
         */
        options: Record<string, any> | null;
        operation: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }>;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_operations", {
    id: string;
    name: string | null;
    key: string;
    type: string;
    position_x: number;
    position_y: number;
    timestamp: string;
    options: Record<string, any> | null;
    resolve: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
    reject: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
    flow: string | MergeCoreCollection<Schema, "directus_flows", {
        id: string;
        name: string;
        icon: string | null;
        color: string | null;
        description: string | null;
        status: string;
        trigger: string | null;
        accountability: string | null;
        /**
         * Update multiple existing operations.
         * @param keys
         * @param item
         * @param query
         * @returns Returns the operation objects for the updated operations.
         * @throws Will throw if keys is empty
         */
        options: Record<string, any> | null;
        operation: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }>;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_operations", {
    id: string;
    name: string | null;
    key: string;
    type: string;
    position_x: number;
    position_y: number;
    timestamp: string;
    options: Record<string, any> | null;
    resolve: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
    reject: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
    flow: string | MergeCoreCollection<Schema, "directus_flows", {
        id: string;
        name: string;
        icon: string | null;
        color: string | null;
        description: string | null;
        status: string;
        trigger: string | null;
        accountability: string | null;
        /**
         * Update multiple existing operations.
         * @param keys
         * @param item
         * @param query
         * @returns Returns the operation objects for the updated operations.
         * @throws Will throw if keys is empty
         */
        options: Record<string, any> | null;
        operation: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }>;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_operations", {
    id: string;
    name: string | null;
    key: string;
    type: string;
    position_x: number;
    position_y: number;
    timestamp: string;
    options: Record<string, any> | null;
    resolve: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
    reject: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
    flow: string | MergeCoreCollection<Schema, "directus_flows", {
        id: string;
        name: string;
        icon: string | null;
        color: string | null;
        description: string | null;
        status: string;
        trigger: string | null;
        accountability: string | null;
        /**
         * Update multiple existing operations.
         * @param keys
         * @param item
         * @param query
         * @returns Returns the operation objects for the updated operations.
         * @throws Will throw if keys is empty
         */
        options: Record<string, any> | null;
        operation: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }>;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_operations", {
    id: string;
    name: string | null;
    key: string;
    type: string;
    position_x: number;
    position_y: number;
    timestamp: string;
    options: Record<string, any> | null;
    resolve: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
    reject: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
    flow: string | MergeCoreCollection<Schema, "directus_flows", {
        id: string;
        name: string;
        icon: string | null;
        color: string | null;
        description: string | null;
        status: string;
        trigger: string | null;
        accountability: string | null;
        /**
         * Update multiple existing operations.
         * @param keys
         * @param item
         * @param query
         * @returns Returns the operation objects for the updated operations.
         * @throws Will throw if keys is empty
         */
        options: Record<string, any> | null;
        operation: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }>;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_operations", {
    id: string;
    name: string | null;
    key: string;
    type: string;
    position_x: number;
    position_y: number;
    timestamp: string;
    options: Record<string, any> | null;
    resolve: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
    reject: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
    flow: string | MergeCoreCollection<Schema, "directus_flows", {
        id: string;
        name: string;
        icon: string | null;
        color: string | null;
        description: string | null;
        status: string;
        trigger: string | null;
        accountability: string | null;
        /**
         * Update multiple existing operations.
         * @param keys
         * @param item
         * @param query
         * @returns Returns the operation objects for the updated operations.
         * @throws Will throw if keys is empty
         */
        options: Record<string, any> | null;
        operation: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }>;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>[], Schema>;
/**
 * Update an existing operation.
 * @param key
 * @param item
 * @param query
 * @returns Returns the operation object for the updated operation.
 * @throws Will throw if key is empty
 */
declare const updateOperation: <Schema extends object, const TQuery extends Query<Schema, DirectusOperation<Schema>>>(key: DirectusOperation<Schema>["id"], item: Partial<DirectusOperation<Schema>>, query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_operations", {
    id: string;
    name: string | null;
    key: string;
    type: string;
    position_x: number;
    position_y: number;
    timestamp: string;
    options: Record<string, any> | null;
    resolve: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
    reject: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
    flow: string | MergeCoreCollection<Schema, "directus_flows", {
        id: string;
        name: string;
        icon: string | null;
        color: string | null;
        description: string | null;
        status: string;
        trigger: string | null;
        accountability: string | null;
        /**
         * Update multiple existing operations.
         * @param keys
         * @param item
         * @param query
         * @returns Returns the operation objects for the updated operations.
         * @throws Will throw if keys is empty
         */
        options: Record<string, any> | null;
        operation: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }>;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_operations", {
    id: string;
    name: string | null;
    key: string;
    type: string;
    position_x: number;
    position_y: number;
    timestamp: string;
    options: Record<string, any> | null;
    resolve: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
    reject: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
    flow: string | MergeCoreCollection<Schema, "directus_flows", {
        id: string;
        name: string;
        icon: string | null;
        color: string | null;
        description: string | null;
        status: string;
        trigger: string | null;
        accountability: string | null;
        /**
         * Update multiple existing operations.
         * @param keys
         * @param item
         * @param query
         * @returns Returns the operation objects for the updated operations.
         * @throws Will throw if keys is empty
         */
        options: Record<string, any> | null;
        operation: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }>;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_operations", {
    id: string;
    name: string | null;
    key: string;
    type: string;
    position_x: number;
    position_y: number;
    timestamp: string;
    options: Record<string, any> | null;
    resolve: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
    reject: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
    flow: string | MergeCoreCollection<Schema, "directus_flows", {
        id: string;
        name: string;
        icon: string | null;
        color: string | null;
        description: string | null;
        status: string;
        trigger: string | null;
        accountability: string | null;
        /**
         * Update multiple existing operations.
         * @param keys
         * @param item
         * @param query
         * @returns Returns the operation objects for the updated operations.
         * @throws Will throw if keys is empty
         */
        options: Record<string, any> | null;
        operation: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }>;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_operations", {
    id: string;
    name: string | null;
    key: string;
    type: string;
    position_x: number;
    position_y: number;
    timestamp: string;
    options: Record<string, any> | null;
    resolve: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
    reject: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
    flow: string | MergeCoreCollection<Schema, "directus_flows", {
        id: string;
        name: string;
        icon: string | null;
        color: string | null;
        description: string | null;
        status: string;
        trigger: string | null;
        accountability: string | null;
        /**
         * Update multiple existing operations.
         * @param keys
         * @param item
         * @param query
         * @returns Returns the operation objects for the updated operations.
         * @throws Will throw if keys is empty
         */
        options: Record<string, any> | null;
        operation: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }>;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_operations", {
    id: string;
    name: string | null;
    key: string;
    type: string;
    position_x: number;
    position_y: number;
    timestamp: string;
    options: Record<string, any> | null;
    resolve: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
    reject: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
    flow: string | MergeCoreCollection<Schema, "directus_flows", {
        id: string;
        name: string;
        icon: string | null;
        color: string | null;
        description: string | null;
        status: string;
        trigger: string | null;
        accountability: string | null;
        /**
         * Update multiple existing operations.
         * @param keys
         * @param item
         * @param query
         * @returns Returns the operation objects for the updated operations.
         * @throws Will throw if keys is empty
         */
        options: Record<string, any> | null;
        operation: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }>;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_operations", {
    id: string;
    name: string | null;
    key: string;
    type: string;
    position_x: number;
    position_y: number;
    timestamp: string;
    options: Record<string, any> | null;
    resolve: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
    reject: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
    flow: string | MergeCoreCollection<Schema, "directus_flows", {
        id: string;
        name: string;
        icon: string | null;
        color: string | null;
        description: string | null;
        status: string;
        trigger: string | null;
        accountability: string | null;
        /**
         * Update multiple existing operations.
         * @param keys
         * @param item
         * @param query
         * @returns Returns the operation objects for the updated operations.
         * @throws Will throw if keys is empty
         */
        options: Record<string, any> | null;
        operation: string | MergeCoreCollection<Schema, "directus_operations", any> | null;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
    }>;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>, Schema>;

type UpdatePanelOutput<Schema extends object, TQuery extends Query<Schema, Item>, Item extends object = DirectusPanel<Schema>> = ApplyQueryFields<Schema, Item, TQuery['fields']>;
/**
 * Update multiple existing panels.
 * @param keys
 * @param item
 * @param query
 * @returns Returns the panel objects for the updated panels.
 * @throws Will throw if keys is empty
 */
declare const updatePanels: <Schema extends object, const TQuery extends Query<Schema, DirectusPanel<Schema>>>(keys: DirectusPanel<Schema>["id"][], item: Partial<DirectusPanel<Schema>>, query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_panels", {
    id: string;
    dashboard: string | MergeCoreCollection<Schema, "directus_dashboards", {
        id: string;
        name: string;
        icon: string;
        note: string | null;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
        color: string | null;
    }>;
    name: string | null;
    icon: string | null;
    color: string | null;
    show_header: boolean;
    note: string | null;
    type: string;
    position_x: number;
    position_y: number;
    width: number;
    height: number;
    options: Record<string, any> | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_panels", {
    id: string;
    dashboard: string | MergeCoreCollection<Schema, "directus_dashboards", {
        id: string;
        name: string;
        icon: string;
        note: string | null;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
        color: string | null;
    }>;
    name: string | null;
    icon: string | null;
    color: string | null;
    show_header: boolean;
    note: string | null;
    type: string;
    position_x: number;
    position_y: number;
    width: number;
    height: number;
    options: Record<string, any> | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_panels", {
    id: string;
    dashboard: string | MergeCoreCollection<Schema, "directus_dashboards", {
        id: string;
        name: string;
        icon: string;
        note: string | null;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
        color: string | null;
    }>;
    name: string | null;
    icon: string | null;
    color: string | null;
    show_header: boolean;
    note: string | null;
    type: string;
    position_x: number;
    position_y: number;
    width: number;
    height: number;
    options: Record<string, any> | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_panels", {
    id: string;
    dashboard: string | MergeCoreCollection<Schema, "directus_dashboards", {
        id: string;
        name: string;
        icon: string;
        note: string | null;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
        color: string | null;
    }>;
    name: string | null;
    icon: string | null;
    color: string | null;
    show_header: boolean;
    note: string | null;
    type: string;
    position_x: number;
    position_y: number;
    width: number;
    height: number;
    options: Record<string, any> | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_panels", {
    id: string;
    dashboard: string | MergeCoreCollection<Schema, "directus_dashboards", {
        id: string;
        name: string;
        icon: string;
        note: string | null;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
        color: string | null;
    }>;
    name: string | null;
    icon: string | null;
    color: string | null;
    show_header: boolean;
    note: string | null;
    type: string;
    position_x: number;
    position_y: number;
    width: number;
    height: number;
    options: Record<string, any> | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_panels", {
    id: string;
    dashboard: string | MergeCoreCollection<Schema, "directus_dashboards", {
        id: string;
        name: string;
        icon: string;
        note: string | null;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
        color: string | null;
    }>;
    name: string | null;
    icon: string | null;
    color: string | null;
    show_header: boolean;
    note: string | null;
    type: string;
    position_x: number;
    position_y: number;
    width: number;
    height: number;
    options: Record<string, any> | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>[], Schema>;
/**
 * Update an existing panel.
 * @param key
 * @param item
 * @param query
 * @returns Returns the panel object for the updated panel.
 * @throws Will throw if key is empty
 */
declare const updatePanel: <Schema extends object, const TQuery extends Query<Schema, DirectusPanel<Schema>>>(key: DirectusPanel<Schema>["id"], item: Partial<DirectusPanel<Schema>>, query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_panels", {
    id: string;
    dashboard: string | MergeCoreCollection<Schema, "directus_dashboards", {
        id: string;
        name: string;
        icon: string;
        note: string | null;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
        color: string | null;
    }>;
    name: string | null;
    icon: string | null;
    color: string | null;
    show_header: boolean;
    note: string | null;
    type: string;
    position_x: number;
    position_y: number;
    width: number;
    height: number;
    options: Record<string, any> | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_panels", {
    id: string;
    dashboard: string | MergeCoreCollection<Schema, "directus_dashboards", {
        id: string;
        name: string;
        icon: string;
        note: string | null;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
        color: string | null;
    }>;
    name: string | null;
    icon: string | null;
    color: string | null;
    show_header: boolean;
    note: string | null;
    type: string;
    position_x: number;
    position_y: number;
    width: number;
    height: number;
    options: Record<string, any> | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_panels", {
    id: string;
    dashboard: string | MergeCoreCollection<Schema, "directus_dashboards", {
        id: string;
        name: string;
        icon: string;
        note: string | null;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
        color: string | null;
    }>;
    name: string | null;
    icon: string | null;
    color: string | null;
    show_header: boolean;
    note: string | null;
    type: string;
    position_x: number;
    position_y: number;
    width: number;
    height: number;
    options: Record<string, any> | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_panels", {
    id: string;
    dashboard: string | MergeCoreCollection<Schema, "directus_dashboards", {
        id: string;
        name: string;
        icon: string;
        note: string | null;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
        color: string | null;
    }>;
    name: string | null;
    icon: string | null;
    color: string | null;
    show_header: boolean;
    note: string | null;
    type: string;
    position_x: number;
    position_y: number;
    width: number;
    height: number;
    options: Record<string, any> | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_panels", {
    id: string;
    dashboard: string | MergeCoreCollection<Schema, "directus_dashboards", {
        id: string;
        name: string;
        icon: string;
        note: string | null;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
        color: string | null;
    }>;
    name: string | null;
    icon: string | null;
    color: string | null;
    show_header: boolean;
    note: string | null;
    type: string;
    position_x: number;
    position_y: number;
    width: number;
    height: number;
    options: Record<string, any> | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_panels", {
    id: string;
    dashboard: string | MergeCoreCollection<Schema, "directus_dashboards", {
        id: string;
        name: string;
        icon: string;
        note: string | null;
        date_created: "datetime" | null;
        user_created: string | MergeCoreCollection<Schema, "directus_users", {
            id: string;
            first_name: string | null;
            last_name: string | null;
            email: string | null;
            password: string | null;
            location: string | null;
            title: string | null;
            description: string | null;
            tags: string[] | null;
            avatar: string | MergeCoreCollection<Schema, "directus_files", {
                id: string;
                storage: string;
                filename_disk: string | null;
                filename_download: string;
                title: string | null;
                type: string | null;
                folder: string | MergeCoreCollection<Schema, "directus_folders", {
                    id: string;
                    name: string;
                    parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
                }> | null;
                uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                uploaded_on: "datetime";
                modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
                modified_on: "datetime";
                charset: string | null;
                filesize: string | null;
                width: number | null;
                height: number | null;
                duration: number | null;
                embed: unknown;
                description: string | null;
                location: string | null;
                tags: string[] | null;
                metadata: Record<string, any> | null;
            }> | null;
            language: string | null;
            theme: string | null;
            tfa_secret: string | null;
            status: string;
            role: string | MergeCoreCollection<Schema, "directus_roles", {
                id: string;
                name: string;
                icon: string;
                description: string | null;
                ip_access: string | null;
                enforce_tfa: boolean;
                admin_access: boolean;
                app_access: boolean;
            }> | null;
            token: string | null;
            last_access: "datetime" | null;
            last_page: string | null;
            provider: string;
            external_identifier: string | null;
            auth_data: Record<string, any> | null;
            email_notifications: boolean | null;
        }> | null;
        color: string | null;
    }>;
    name: string | null;
    icon: string | null;
    color: string | null;
    show_header: boolean;
    note: string | null;
    type: string;
    position_x: number;
    position_y: number;
    width: number;
    height: number;
    options: Record<string, any> | null;
    date_created: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>, Schema>;

type UpdatePermissionOutput<Schema extends object, TQuery extends Query<Schema, Item>, Item extends object = DirectusPermission<Schema>> = ApplyQueryFields<Schema, Item, TQuery['fields']>;
/**
 * Update multiple existing permissions rules.
 * @param keys
 * @param item
 * @param query
 * @returns Returns the permission object for the updated permissions.
 * @throws Will throw if keys is empty
 */
declare const updatePermissions: <Schema extends object, const TQuery extends Query<Schema, DirectusPermission<Schema>>>(keys: DirectusPermission<Schema>["id"][], item: Partial<DirectusPermission<Schema>>, query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_permissions", {
    id: number;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    collection: string;
    action: string;
    permissions: Record<string, any> | null;
    validation: Record<string, any> | null;
    presets: Record<string, any> | null;
    fields: string[] | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_permissions", {
    id: number;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    collection: string;
    action: string;
    permissions: Record<string, any> | null;
    validation: Record<string, any> | null;
    presets: Record<string, any> | null;
    fields: string[] | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_permissions", {
    id: number;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    collection: string;
    action: string;
    permissions: Record<string, any> | null;
    validation: Record<string, any> | null;
    presets: Record<string, any> | null;
    fields: string[] | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_permissions", {
    id: number;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    collection: string;
    action: string;
    permissions: Record<string, any> | null;
    validation: Record<string, any> | null;
    presets: Record<string, any> | null;
    fields: string[] | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_permissions", {
    id: number;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    collection: string;
    action: string;
    permissions: Record<string, any> | null;
    validation: Record<string, any> | null;
    presets: Record<string, any> | null;
    fields: string[] | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_permissions", {
    id: number;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    collection: string;
    action: string;
    permissions: Record<string, any> | null;
    validation: Record<string, any> | null;
    presets: Record<string, any> | null;
    fields: string[] | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>[], Schema>;
/**
 * Update an existing permissions rule.
 * @param key
 * @param item
 * @param query
 * @returns Returns the permission object for the updated permission.
 * @throws Will throw if key is empty
 */
declare const updatePermission: <Schema extends object, const TQuery extends Query<Schema, DirectusPermission<Schema>>>(key: DirectusPermission<Schema>["id"], item: Partial<DirectusPermission<Schema>>, query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_permissions", {
    id: number;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    collection: string;
    action: string;
    permissions: Record<string, any> | null;
    validation: Record<string, any> | null;
    presets: Record<string, any> | null;
    fields: string[] | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_permissions", {
    id: number;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    collection: string;
    action: string;
    permissions: Record<string, any> | null;
    validation: Record<string, any> | null;
    presets: Record<string, any> | null;
    fields: string[] | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_permissions", {
    id: number;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    collection: string;
    action: string;
    permissions: Record<string, any> | null;
    validation: Record<string, any> | null;
    presets: Record<string, any> | null;
    fields: string[] | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_permissions", {
    id: number;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    collection: string;
    action: string;
    permissions: Record<string, any> | null;
    validation: Record<string, any> | null;
    presets: Record<string, any> | null;
    fields: string[] | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_permissions", {
    id: number;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    collection: string;
    action: string;
    permissions: Record<string, any> | null;
    validation: Record<string, any> | null;
    presets: Record<string, any> | null;
    fields: string[] | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_permissions", {
    id: number;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    collection: string;
    action: string;
    permissions: Record<string, any> | null;
    validation: Record<string, any> | null;
    presets: Record<string, any> | null;
    fields: string[] | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>, Schema>;

type UpdatePresetOutput<Schema extends object, TQuery extends Query<Schema, Item>, Item extends object = DirectusPreset<Schema>> = ApplyQueryFields<Schema, Item, TQuery['fields']>;
/**
 * Update multiple existing presets.
 * @param keys
 * @param item
 * @param query
 * @returns Returns the preset objects for the updated presets.
 * @throws Will throw if keys is empty
 */
declare const updatePresets: <Schema extends object, const TQuery extends Query<Schema, DirectusPreset<Schema>>>(keys: DirectusPreset<Schema>["id"][], item: Partial<DirectusPreset<Schema>>, query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_presets", {
    id: number;
    bookmark: string | null;
    user: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    collection: string | null;
    search: string | null;
    layout: string | null;
    layout_query: Record<string, any> | null;
    layout_options: Record<string, any> | null;
    refresh_interval: number | null;
    filter: Record<string, any> | null;
    icon: string | null;
    color: string | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_presets", {
    id: number;
    bookmark: string | null;
    user: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    collection: string | null;
    search: string | null;
    layout: string | null;
    layout_query: Record<string, any> | null;
    layout_options: Record<string, any> | null;
    refresh_interval: number | null;
    filter: Record<string, any> | null;
    icon: string | null;
    color: string | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_presets", {
    id: number;
    bookmark: string | null;
    user: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    collection: string | null;
    search: string | null;
    layout: string | null;
    layout_query: Record<string, any> | null;
    layout_options: Record<string, any> | null;
    refresh_interval: number | null;
    filter: Record<string, any> | null;
    icon: string | null;
    color: string | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_presets", {
    id: number;
    bookmark: string | null;
    user: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    collection: string | null;
    search: string | null;
    layout: string | null;
    layout_query: Record<string, any> | null;
    layout_options: Record<string, any> | null;
    refresh_interval: number | null;
    filter: Record<string, any> | null;
    icon: string | null;
    color: string | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_presets", {
    id: number;
    bookmark: string | null;
    user: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    collection: string | null;
    search: string | null;
    layout: string | null;
    layout_query: Record<string, any> | null;
    layout_options: Record<string, any> | null;
    refresh_interval: number | null;
    filter: Record<string, any> | null;
    icon: string | null;
    color: string | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_presets", {
    id: number;
    bookmark: string | null;
    user: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    collection: string | null;
    search: string | null;
    layout: string | null;
    layout_query: Record<string, any> | null;
    layout_options: Record<string, any> | null;
    refresh_interval: number | null;
    filter: Record<string, any> | null;
    icon: string | null;
    color: string | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>[], Schema>;
/**
 * Update an existing preset.
 * @param key
 * @param item
 * @param query
 * @returns Returns the preset object for the updated preset.
 * @throws Will throw if key is empty
 */
declare const updatePreset: <Schema extends object, const TQuery extends Query<Schema, DirectusPreset<Schema>>>(key: DirectusPreset<Schema>["id"], item: Partial<DirectusPreset<Schema>>, query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_presets", {
    id: number;
    bookmark: string | null;
    user: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    collection: string | null;
    search: string | null;
    layout: string | null;
    layout_query: Record<string, any> | null;
    layout_options: Record<string, any> | null;
    refresh_interval: number | null;
    filter: Record<string, any> | null;
    icon: string | null;
    color: string | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_presets", {
    id: number;
    bookmark: string | null;
    user: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    collection: string | null;
    search: string | null;
    layout: string | null;
    layout_query: Record<string, any> | null;
    layout_options: Record<string, any> | null;
    refresh_interval: number | null;
    filter: Record<string, any> | null;
    icon: string | null;
    color: string | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_presets", {
    id: number;
    bookmark: string | null;
    user: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    collection: string | null;
    search: string | null;
    layout: string | null;
    layout_query: Record<string, any> | null;
    layout_options: Record<string, any> | null;
    refresh_interval: number | null;
    filter: Record<string, any> | null;
    icon: string | null;
    color: string | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_presets", {
    id: number;
    bookmark: string | null;
    user: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    collection: string | null;
    search: string | null;
    layout: string | null;
    layout_query: Record<string, any> | null;
    layout_options: Record<string, any> | null;
    refresh_interval: number | null;
    filter: Record<string, any> | null;
    icon: string | null;
    color: string | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_presets", {
    id: number;
    bookmark: string | null;
    user: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    collection: string | null;
    search: string | null;
    layout: string | null;
    layout_query: Record<string, any> | null;
    layout_options: Record<string, any> | null;
    refresh_interval: number | null;
    filter: Record<string, any> | null;
    icon: string | null;
    color: string | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_presets", {
    id: number;
    bookmark: string | null;
    user: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    collection: string | null;
    search: string | null;
    layout: string | null;
    layout_query: Record<string, any> | null;
    layout_options: Record<string, any> | null;
    refresh_interval: number | null;
    filter: Record<string, any> | null;
    icon: string | null;
    color: string | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>, Schema>;

type UpdateRelationOutput<Schema extends object, TQuery extends Query<Schema, Item>, Item extends object = DirectusRelation<Schema>> = ApplyQueryFields<Schema, Item, TQuery['fields']>;
/**
 * Update an existing relation.
 * @param collection
 * @param field
 * @param item
 * @param query
 * @returns Returns the relation object for the created relation.
 */
declare const updateRelation: <Schema extends object, const TQuery extends Query<Schema, DirectusRelation<Schema>>>(collection: string, field: string, item: NestedPartial<DirectusRelation<Schema>>, query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, DirectusRelation<Schema>> extends infer FF ? MapFlatFields<DirectusRelation<Schema>, FieldsWildcard<DirectusRelation<Schema>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof DirectusRelation<Schema> ? Extract<DirectusRelation<Schema>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<DirectusRelation<Schema>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>, Schema>;

type UpdateRoleOutput<Schema extends object, TQuery extends Query<Schema, Item>, Item extends object = DirectusRole<Schema>> = ApplyQueryFields<Schema, Item, TQuery['fields']>;
/**
 * Update multiple existing roles.
 * @param keys
 * @param item
 * @param query
 * @returns Returns the role objects for the updated roles.
 * @throws Will throw if keys is empty
 */
declare const updateRoles: <Schema extends object, const TQuery extends Query<Schema, DirectusRole<Schema>>>(keys: DirectusRole<Schema>["id"][], item: Partial<DirectusRole<Schema>>, query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_roles", {
    id: string;
    name: string;
    icon: string;
    description: string | null;
    ip_access: string | null;
    enforce_tfa: boolean;
    admin_access: boolean;
    app_access: boolean;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_roles", {
    id: string;
    name: string;
    icon: string;
    description: string | null;
    ip_access: string | null;
    enforce_tfa: boolean;
    admin_access: boolean;
    app_access: boolean;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_roles", {
    id: string;
    name: string;
    icon: string;
    description: string | null;
    ip_access: string | null;
    enforce_tfa: boolean;
    admin_access: boolean;
    app_access: boolean;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_roles", {
    id: string;
    name: string;
    icon: string;
    description: string | null;
    ip_access: string | null;
    enforce_tfa: boolean;
    admin_access: boolean;
    app_access: boolean;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_roles", {
    id: string;
    name: string;
    icon: string;
    description: string | null;
    ip_access: string | null;
    enforce_tfa: boolean;
    admin_access: boolean;
    app_access: boolean;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_roles", {
    id: string;
    name: string;
    icon: string;
    description: string | null;
    ip_access: string | null;
    enforce_tfa: boolean;
    admin_access: boolean;
    app_access: boolean;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>[], Schema>;
/**
 * Update an existing role.
 * @param key
 * @param item
 * @param query
 * @returns Returns the role object for the updated role.
 * @throws Will throw if key is empty
 */
declare const updateRole: <Schema extends object, const TQuery extends Query<Schema, DirectusRole<Schema>>>(key: DirectusRole<Schema>["id"], item: Partial<DirectusRole<Schema>>, query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_roles", {
    id: string;
    name: string;
    icon: string;
    description: string | null;
    ip_access: string | null;
    enforce_tfa: boolean;
    admin_access: boolean;
    app_access: boolean;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_roles", {
    id: string;
    name: string;
    icon: string;
    description: string | null;
    ip_access: string | null;
    enforce_tfa: boolean;
    admin_access: boolean;
    app_access: boolean;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_roles", {
    id: string;
    name: string;
    icon: string;
    description: string | null;
    ip_access: string | null;
    enforce_tfa: boolean;
    admin_access: boolean;
    app_access: boolean;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_roles", {
    id: string;
    name: string;
    icon: string;
    description: string | null;
    ip_access: string | null;
    enforce_tfa: boolean;
    admin_access: boolean;
    app_access: boolean;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_roles", {
    id: string;
    name: string;
    icon: string;
    description: string | null;
    ip_access: string | null;
    enforce_tfa: boolean;
    admin_access: boolean;
    app_access: boolean;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_roles", {
    id: string;
    name: string;
    icon: string;
    description: string | null;
    ip_access: string | null;
    enforce_tfa: boolean;
    admin_access: boolean;
    app_access: boolean;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>, Schema>;

type UpdateSettingOutput<Schema extends object, TQuery extends Query<Schema, Item>, Item extends object = DirectusSettings<Schema>> = ApplyQueryFields<Schema, Item, TQuery['fields']>;
/**
 * Update Settings
 * @param item
 * @param query
 * @returns Returns the settings object.
 */
declare const updateSettings: <Schema extends object, const TQuery extends Query<Schema, DirectusSettings<Schema>>>(item: Partial<DirectusSettings<Schema>>, query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_settings", {
    id: 1;
    project_name: string;
    project_url: string;
    project_color: string | null;
    project_logo: string | null;
    public_foreground: string | null;
    public_background: string | null;
    public_note: string | null;
    auth_login_attempts: number;
    auth_password_policy: string | null;
    storage_asset_transform: "all" | "none" | "presets";
    storage_asset_presets: {
        fit: string;
        height: number;
        width: number;
        quality: number;
        key: string;
        withoutEnlargement: boolean;
    }[] | null;
    custom_css: string | null;
    storage_default_folder: string | MergeCoreCollection<Schema, "directus_folders", {
        id: string;
        name: string;
        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
    }> | null;
    basemaps: Record<string, any> | null;
    mapbox_key: string | null;
    module_bar: "json" | null;
    project_descriptor: string | null;
    default_language: string;
    custom_aspect_ratios: Record<string, any> | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_settings", {
    id: 1;
    project_name: string;
    project_url: string;
    project_color: string | null;
    project_logo: string | null;
    public_foreground: string | null;
    public_background: string | null;
    public_note: string | null;
    auth_login_attempts: number;
    auth_password_policy: string | null;
    storage_asset_transform: "all" | "none" | "presets";
    storage_asset_presets: {
        fit: string;
        height: number;
        width: number;
        quality: number;
        key: string;
        withoutEnlargement: boolean;
    }[] | null;
    custom_css: string | null;
    storage_default_folder: string | MergeCoreCollection<Schema, "directus_folders", {
        id: string;
        name: string;
        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
    }> | null;
    basemaps: Record<string, any> | null;
    mapbox_key: string | null;
    module_bar: "json" | null;
    project_descriptor: string | null;
    default_language: string;
    custom_aspect_ratios: Record<string, any> | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_settings", {
    id: 1;
    project_name: string;
    project_url: string;
    project_color: string | null;
    project_logo: string | null;
    public_foreground: string | null;
    public_background: string | null;
    public_note: string | null;
    auth_login_attempts: number;
    auth_password_policy: string | null;
    storage_asset_transform: "all" | "none" | "presets";
    storage_asset_presets: {
        fit: string;
        height: number;
        width: number;
        quality: number;
        key: string;
        withoutEnlargement: boolean;
    }[] | null;
    custom_css: string | null;
    storage_default_folder: string | MergeCoreCollection<Schema, "directus_folders", {
        id: string;
        name: string;
        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
    }> | null;
    basemaps: Record<string, any> | null;
    mapbox_key: string | null;
    module_bar: "json" | null;
    project_descriptor: string | null;
    default_language: string;
    custom_aspect_ratios: Record<string, any> | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_settings", {
    id: 1;
    project_name: string;
    project_url: string;
    project_color: string | null;
    project_logo: string | null;
    public_foreground: string | null;
    public_background: string | null;
    public_note: string | null;
    auth_login_attempts: number;
    auth_password_policy: string | null;
    storage_asset_transform: "all" | "none" | "presets";
    storage_asset_presets: {
        fit: string;
        height: number;
        width: number;
        quality: number;
        key: string;
        withoutEnlargement: boolean;
    }[] | null;
    custom_css: string | null;
    storage_default_folder: string | MergeCoreCollection<Schema, "directus_folders", {
        id: string;
        name: string;
        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
    }> | null;
    basemaps: Record<string, any> | null;
    mapbox_key: string | null;
    module_bar: "json" | null;
    project_descriptor: string | null;
    default_language: string;
    custom_aspect_ratios: Record<string, any> | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_settings", {
    id: 1;
    project_name: string;
    project_url: string;
    project_color: string | null;
    project_logo: string | null;
    public_foreground: string | null;
    public_background: string | null;
    public_note: string | null;
    auth_login_attempts: number;
    auth_password_policy: string | null;
    storage_asset_transform: "all" | "none" | "presets";
    storage_asset_presets: {
        fit: string;
        height: number;
        width: number;
        quality: number;
        key: string;
        withoutEnlargement: boolean;
    }[] | null;
    custom_css: string | null;
    storage_default_folder: string | MergeCoreCollection<Schema, "directus_folders", {
        id: string;
        name: string;
        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
    }> | null;
    basemaps: Record<string, any> | null;
    mapbox_key: string | null;
    module_bar: "json" | null;
    project_descriptor: string | null;
    default_language: string;
    custom_aspect_ratios: Record<string, any> | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_settings", {
    id: 1;
    project_name: string;
    project_url: string;
    project_color: string | null;
    project_logo: string | null;
    public_foreground: string | null;
    public_background: string | null;
    public_note: string | null;
    auth_login_attempts: number;
    auth_password_policy: string | null;
    storage_asset_transform: "all" | "none" | "presets";
    storage_asset_presets: {
        fit: string;
        height: number;
        width: number;
        quality: number;
        key: string;
        withoutEnlargement: boolean;
    }[] | null;
    custom_css: string | null;
    storage_default_folder: string | MergeCoreCollection<Schema, "directus_folders", {
        id: string;
        name: string;
        parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
    }> | null;
    basemaps: Record<string, any> | null;
    mapbox_key: string | null;
    module_bar: "json" | null;
    project_descriptor: string | null;
    default_language: string;
    custom_aspect_ratios: Record<string, any> | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>[], Schema>;

type UpdateShareOutput<Schema extends object, TQuery extends Query<Schema, Item>, Item extends object = DirectusShare<Schema>> = ApplyQueryFields<Schema, Item, TQuery['fields']>;
/**
 * Update multiple existing shares.
 * @param keys
 * @param item
 * @param query
 * @returns Returns the share objects for the updated shares.
 * @throws Will throw if keys is empty
 */
declare const updateShares: <Schema extends object, const TQuery extends Query<Schema, DirectusShare<Schema>>>(keys: DirectusShare<Schema>["id"][], item: Partial<DirectusShare<Schema>>, query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_shares", {
    id: string;
    name: string | null;
    collection: string | null;
    item: string | null;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    password: string | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    date_created: "datetime" | null;
    date_start: "datetime" | null;
    date_end: "datetime" | null;
    times_used: number | null;
    max_uses: number | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_shares", {
    id: string;
    name: string | null;
    collection: string | null;
    item: string | null;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    password: string | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    date_created: "datetime" | null;
    date_start: "datetime" | null;
    date_end: "datetime" | null;
    times_used: number | null;
    max_uses: number | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_shares", {
    id: string;
    name: string | null;
    collection: string | null;
    item: string | null;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    password: string | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    date_created: "datetime" | null;
    date_start: "datetime" | null;
    date_end: "datetime" | null;
    times_used: number | null;
    max_uses: number | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_shares", {
    id: string;
    name: string | null;
    collection: string | null;
    item: string | null;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    password: string | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    date_created: "datetime" | null;
    date_start: "datetime" | null;
    date_end: "datetime" | null;
    times_used: number | null;
    max_uses: number | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_shares", {
    id: string;
    name: string | null;
    collection: string | null;
    item: string | null;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    password: string | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    date_created: "datetime" | null;
    date_start: "datetime" | null;
    date_end: "datetime" | null;
    times_used: number | null;
    max_uses: number | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_shares", {
    id: string;
    name: string | null;
    collection: string | null;
    item: string | null;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    password: string | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    date_created: "datetime" | null;
    date_start: "datetime" | null;
    date_end: "datetime" | null;
    times_used: number | null;
    max_uses: number | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>[], Schema>;
/**
 * Update an existing share.
 * @param key
 * @param item
 * @param query
 * @returns Returns the share object for the updated share.
 * @throws Will throw if key is empty
 */
declare const updateShare: <Schema extends object, const TQuery extends Query<Schema, DirectusShare<Schema>>>(key: DirectusShare<Schema>["id"], item: Partial<DirectusShare<Schema>>, query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_shares", {
    id: string;
    name: string | null;
    collection: string | null;
    item: string | null;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    password: string | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    date_created: "datetime" | null;
    date_start: "datetime" | null;
    date_end: "datetime" | null;
    times_used: number | null;
    max_uses: number | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_shares", {
    id: string;
    name: string | null;
    collection: string | null;
    item: string | null;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    password: string | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    date_created: "datetime" | null;
    date_start: "datetime" | null;
    date_end: "datetime" | null;
    times_used: number | null;
    max_uses: number | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_shares", {
    id: string;
    name: string | null;
    collection: string | null;
    item: string | null;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    password: string | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    date_created: "datetime" | null;
    date_start: "datetime" | null;
    date_end: "datetime" | null;
    times_used: number | null;
    max_uses: number | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_shares", {
    id: string;
    name: string | null;
    collection: string | null;
    item: string | null;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    password: string | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    date_created: "datetime" | null;
    date_start: "datetime" | null;
    date_end: "datetime" | null;
    times_used: number | null;
    max_uses: number | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_shares", {
    id: string;
    name: string | null;
    collection: string | null;
    item: string | null;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    password: string | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    date_created: "datetime" | null;
    date_start: "datetime" | null;
    date_end: "datetime" | null;
    times_used: number | null;
    max_uses: number | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_shares", {
    id: string;
    name: string | null;
    collection: string | null;
    item: string | null;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    password: string | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    date_created: "datetime" | null;
    date_start: "datetime" | null;
    date_end: "datetime" | null;
    times_used: number | null;
    max_uses: number | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>, Schema>;

type UpdateSingletonOutput<Schema extends object, Collection extends SingletonCollections<Schema>, TQuery extends Query<Schema, Schema[Collection]>> = ApplyQueryFields<Schema, CollectionType<Schema, Collection>, TQuery['fields']>;
/**
 * Update a singleton item
 *
 * @param collection The collection of the items
 * @param query The query parameters
 *
 * @returns An array of up to limit item objects. If no items are available, data will be an empty array.
 * @throws Will throw if collection is a core collection
 * @throws Will throw if collection is empty
 */
declare const updateSingleton: <Schema extends object, Collection extends SingletonCollections<Schema>, const TQuery extends Query<Schema, Schema[Collection]>, Item = Schema[Collection]>(collection: Collection, item: Partial<Item>, query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<IfAny<Schema, any, Collection extends keyof Schema ? UnpackList<Schema[Collection]> extends object ? object & UnpackList<Schema[Collection]> : never : never>>> extends infer FF ? MapFlatFields<UnpackList<IfAny<Schema, any, Collection extends keyof Schema ? UnpackList<Schema[Collection]> extends object ? object & UnpackList<Schema[Collection]> : never : never>>, FieldsWildcard<UnpackList<IfAny<Schema, any, Collection extends keyof Schema ? UnpackList<Schema[Collection]> extends object ? object & UnpackList<Schema[Collection]> : never : never>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<IfAny<Schema, any, Collection extends keyof Schema ? UnpackList<Schema[Collection]> extends object ? object & UnpackList<Schema[Collection]> : never : never>> ? Extract<UnpackList<IfAny<Schema, any, Collection extends keyof Schema ? UnpackList<Schema[Collection]> extends object ? object & UnpackList<Schema[Collection]> : never : never>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<IfAny<Schema, any, Collection extends keyof Schema ? UnpackList<Schema[Collection]> extends object ? object & UnpackList<Schema[Collection]> : never : never>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>, Schema>;

type UpdateTranslationOutput<Schema extends object, TQuery extends Query<Schema, Item>, Item extends object = DirectusTranslation<Schema>> = ApplyQueryFields<Schema, Item, TQuery['fields']>;
/**
 * Update multiple existing translations.
 * @param keys
 * @param item
 * @param query
 * @returns Returns the translation objects for the updated translations.
 * @throws Will throw if keys is empty
 */
declare const updateTranslations: <Schema extends object, const TQuery extends Query<Schema, DirectusTranslation<Schema>>>(keys: DirectusTranslation<Schema>["id"][], item: Partial<DirectusTranslation<Schema>>, query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_translations", {
    id: string;
    language: string;
    key: string;
    value: string;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_translations", {
    id: string;
    language: string;
    key: string;
    value: string;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_translations", {
    id: string;
    language: string;
    key: string;
    value: string;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_translations", {
    id: string;
    language: string;
    key: string;
    value: string;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_translations", {
    id: string;
    language: string;
    key: string;
    value: string;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_translations", {
    id: string;
    language: string;
    key: string;
    value: string;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>[], Schema>;
/**
 * Update an existing translation.
 * @param key
 * @param item
 * @param query
 * @returns Returns the translation object for the updated translation.
 * @throws Will throw if key is empty
 */
declare const updateTranslation: <Schema extends object, const TQuery extends Query<Schema, DirectusTranslation<Schema>>>(key: DirectusTranslation<Schema>["id"], item: Partial<DirectusTranslation<Schema>>, query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_translations", {
    id: string;
    language: string;
    key: string;
    value: string;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_translations", {
    id: string;
    language: string;
    key: string;
    value: string;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_translations", {
    id: string;
    language: string;
    key: string;
    value: string;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_translations", {
    id: string;
    language: string;
    key: string;
    value: string;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_translations", {
    id: string;
    language: string;
    key: string;
    value: string;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_translations", {
    id: string;
    language: string;
    key: string;
    value: string;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>, Schema>;

type UpdateUserOutput<Schema extends object, TQuery extends Query<Schema, Item>, Item extends object = DirectusUser<Schema>> = ApplyQueryFields<Schema, Item, TQuery['fields']>;
/**
 * Update multiple existing users.
 *
 * @param keys The primary key of the users
 * @param item The user data to update
 * @param query Optional return data query
 *
 * @returns Returns the user objects for the updated users.
 * @throws Will throw if keys is empty
 */
declare const updateUsers: <Schema extends object, const TQuery extends Query<Schema, DirectusUser<Schema>>>(keys: DirectusUser<Schema>["id"][], item: Partial<DirectusUser<Schema>>, query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_users", {
    id: string;
    first_name: string | null;
    last_name: string | null;
    email: string | null;
    password: string | null;
    location: string | null;
    /**
     * Update multiple existing users.
     *
     * @param keys The primary key of the users
     * @param item The user data to update
     * @param query Optional return data query
     *
     * @returns Returns the user objects for the updated users.
     * @throws Will throw if keys is empty
     */
    title: string | null;
    description: string | null;
    tags: string[] | null;
    avatar: string | MergeCoreCollection<Schema, "directus_files", {
        id: string;
        storage: string;
        filename_disk: string | null;
        filename_download: string;
        title: string | null;
        type: string | null;
        folder: string | MergeCoreCollection<Schema, "directus_folders", {
            id: string;
            name: string;
            parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
        }> | null;
        uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        uploaded_on: "datetime";
        modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        modified_on: "datetime";
        charset: string | null;
        filesize: string | null;
        width: number | null;
        height: number | null;
        duration: number | null;
        embed: unknown;
        description: string | null;
        location: string | null;
        tags: string[] | null;
        metadata: Record<string, any> | null;
    }> | null;
    language: string | null;
    theme: string | null;
    tfa_secret: string | null;
    status: string;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    token: string | null;
    last_access: "datetime" | null;
    last_page: string | null;
    provider: string;
    external_identifier: string | null;
    auth_data: Record<string, any> | null;
    email_notifications: boolean | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_users", {
    id: string;
    first_name: string | null;
    last_name: string | null;
    email: string | null;
    password: string | null;
    location: string | null;
    /**
     * Update multiple existing users.
     *
     * @param keys The primary key of the users
     * @param item The user data to update
     * @param query Optional return data query
     *
     * @returns Returns the user objects for the updated users.
     * @throws Will throw if keys is empty
     */
    title: string | null;
    description: string | null;
    tags: string[] | null;
    avatar: string | MergeCoreCollection<Schema, "directus_files", {
        id: string;
        storage: string;
        filename_disk: string | null;
        filename_download: string;
        title: string | null;
        type: string | null;
        folder: string | MergeCoreCollection<Schema, "directus_folders", {
            id: string;
            name: string;
            parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
        }> | null;
        uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        uploaded_on: "datetime";
        modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        modified_on: "datetime";
        charset: string | null;
        filesize: string | null;
        width: number | null;
        height: number | null;
        duration: number | null;
        embed: unknown;
        description: string | null;
        location: string | null;
        tags: string[] | null;
        metadata: Record<string, any> | null;
    }> | null;
    language: string | null;
    theme: string | null;
    tfa_secret: string | null;
    status: string;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    token: string | null;
    last_access: "datetime" | null;
    last_page: string | null;
    provider: string;
    external_identifier: string | null;
    auth_data: Record<string, any> | null;
    email_notifications: boolean | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_users", {
    id: string;
    first_name: string | null;
    last_name: string | null;
    email: string | null;
    password: string | null;
    location: string | null;
    /**
     * Update multiple existing users.
     *
     * @param keys The primary key of the users
     * @param item The user data to update
     * @param query Optional return data query
     *
     * @returns Returns the user objects for the updated users.
     * @throws Will throw if keys is empty
     */
    title: string | null;
    description: string | null;
    tags: string[] | null;
    avatar: string | MergeCoreCollection<Schema, "directus_files", {
        id: string;
        storage: string;
        filename_disk: string | null;
        filename_download: string;
        title: string | null;
        type: string | null;
        folder: string | MergeCoreCollection<Schema, "directus_folders", {
            id: string;
            name: string;
            parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
        }> | null;
        uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        uploaded_on: "datetime";
        modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        modified_on: "datetime";
        charset: string | null;
        filesize: string | null;
        width: number | null;
        height: number | null;
        duration: number | null;
        embed: unknown;
        description: string | null;
        location: string | null;
        tags: string[] | null;
        metadata: Record<string, any> | null;
    }> | null;
    language: string | null;
    theme: string | null;
    tfa_secret: string | null;
    status: string;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    token: string | null;
    last_access: "datetime" | null;
    last_page: string | null;
    provider: string;
    external_identifier: string | null;
    auth_data: Record<string, any> | null;
    email_notifications: boolean | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_users", {
    id: string;
    first_name: string | null;
    last_name: string | null;
    email: string | null;
    password: string | null;
    location: string | null;
    /**
     * Update multiple existing users.
     *
     * @param keys The primary key of the users
     * @param item The user data to update
     * @param query Optional return data query
     *
     * @returns Returns the user objects for the updated users.
     * @throws Will throw if keys is empty
     */
    title: string | null;
    description: string | null;
    tags: string[] | null;
    avatar: string | MergeCoreCollection<Schema, "directus_files", {
        id: string;
        storage: string;
        filename_disk: string | null;
        filename_download: string;
        title: string | null;
        type: string | null;
        folder: string | MergeCoreCollection<Schema, "directus_folders", {
            id: string;
            name: string;
            parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
        }> | null;
        uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        uploaded_on: "datetime";
        modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        modified_on: "datetime";
        charset: string | null;
        filesize: string | null;
        width: number | null;
        height: number | null;
        duration: number | null;
        embed: unknown;
        description: string | null;
        location: string | null;
        tags: string[] | null;
        metadata: Record<string, any> | null;
    }> | null;
    language: string | null;
    theme: string | null;
    tfa_secret: string | null;
    status: string;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    token: string | null;
    last_access: "datetime" | null;
    last_page: string | null;
    provider: string;
    external_identifier: string | null;
    auth_data: Record<string, any> | null;
    email_notifications: boolean | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_users", {
    id: string;
    first_name: string | null;
    last_name: string | null;
    email: string | null;
    password: string | null;
    location: string | null;
    /**
     * Update multiple existing users.
     *
     * @param keys The primary key of the users
     * @param item The user data to update
     * @param query Optional return data query
     *
     * @returns Returns the user objects for the updated users.
     * @throws Will throw if keys is empty
     */
    title: string | null;
    description: string | null;
    tags: string[] | null;
    avatar: string | MergeCoreCollection<Schema, "directus_files", {
        id: string;
        storage: string;
        filename_disk: string | null;
        filename_download: string;
        title: string | null;
        type: string | null;
        folder: string | MergeCoreCollection<Schema, "directus_folders", {
            id: string;
            name: string;
            parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
        }> | null;
        uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        uploaded_on: "datetime";
        modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        modified_on: "datetime";
        charset: string | null;
        filesize: string | null;
        width: number | null;
        height: number | null;
        duration: number | null;
        embed: unknown;
        description: string | null;
        location: string | null;
        tags: string[] | null;
        metadata: Record<string, any> | null;
    }> | null;
    language: string | null;
    theme: string | null;
    tfa_secret: string | null;
    status: string;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    token: string | null;
    last_access: "datetime" | null;
    last_page: string | null;
    provider: string;
    external_identifier: string | null;
    auth_data: Record<string, any> | null;
    email_notifications: boolean | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_users", {
    id: string;
    first_name: string | null;
    last_name: string | null;
    email: string | null;
    password: string | null;
    location: string | null;
    /**
     * Update multiple existing users.
     *
     * @param keys The primary key of the users
     * @param item The user data to update
     * @param query Optional return data query
     *
     * @returns Returns the user objects for the updated users.
     * @throws Will throw if keys is empty
     */
    title: string | null;
    description: string | null;
    tags: string[] | null;
    avatar: string | MergeCoreCollection<Schema, "directus_files", {
        id: string;
        storage: string;
        filename_disk: string | null;
        filename_download: string;
        title: string | null;
        type: string | null;
        folder: string | MergeCoreCollection<Schema, "directus_folders", {
            id: string;
            name: string;
            parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
        }> | null;
        uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        uploaded_on: "datetime";
        modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        modified_on: "datetime";
        charset: string | null;
        filesize: string | null;
        width: number | null;
        height: number | null;
        duration: number | null;
        embed: unknown;
        description: string | null;
        location: string | null;
        tags: string[] | null;
        metadata: Record<string, any> | null;
    }> | null;
    language: string | null;
    theme: string | null;
    tfa_secret: string | null;
    status: string;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    token: string | null;
    last_access: "datetime" | null;
    last_page: string | null;
    provider: string;
    external_identifier: string | null;
    auth_data: Record<string, any> | null;
    email_notifications: boolean | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>[], Schema>;
/**
 * Update an existing user.
 *
 * @param key The primary key of the user
 * @param item The user data to update
 * @param query Optional return data query
 *
 * @returns Returns the user object for the updated user.
 * @throws Will throw if key is empty
 */
declare const updateUser: <Schema extends object, const TQuery extends Query<Schema, DirectusUser<Schema>>>(key: DirectusUser<Schema>["id"], item: Partial<DirectusUser<Schema>>, query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_users", {
    id: string;
    first_name: string | null;
    last_name: string | null;
    email: string | null;
    password: string | null;
    location: string | null;
    /**
     * Update multiple existing users.
     *
     * @param keys The primary key of the users
     * @param item The user data to update
     * @param query Optional return data query
     *
     * @returns Returns the user objects for the updated users.
     * @throws Will throw if keys is empty
     */
    title: string | null;
    description: string | null;
    tags: string[] | null;
    avatar: string | MergeCoreCollection<Schema, "directus_files", {
        id: string;
        storage: string;
        filename_disk: string | null;
        filename_download: string;
        title: string | null;
        type: string | null;
        folder: string | MergeCoreCollection<Schema, "directus_folders", {
            id: string;
            name: string;
            parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
        }> | null;
        uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        uploaded_on: "datetime";
        modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        modified_on: "datetime";
        charset: string | null;
        filesize: string | null;
        width: number | null;
        height: number | null;
        duration: number | null;
        embed: unknown;
        description: string | null;
        location: string | null;
        tags: string[] | null;
        metadata: Record<string, any> | null;
    }> | null;
    language: string | null;
    theme: string | null;
    tfa_secret: string | null;
    status: string;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    token: string | null;
    last_access: "datetime" | null;
    last_page: string | null;
    provider: string;
    external_identifier: string | null;
    auth_data: Record<string, any> | null;
    email_notifications: boolean | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_users", {
    id: string;
    first_name: string | null;
    last_name: string | null;
    email: string | null;
    password: string | null;
    location: string | null;
    /**
     * Update multiple existing users.
     *
     * @param keys The primary key of the users
     * @param item The user data to update
     * @param query Optional return data query
     *
     * @returns Returns the user objects for the updated users.
     * @throws Will throw if keys is empty
     */
    title: string | null;
    description: string | null;
    tags: string[] | null;
    avatar: string | MergeCoreCollection<Schema, "directus_files", {
        id: string;
        storage: string;
        filename_disk: string | null;
        filename_download: string;
        title: string | null;
        type: string | null;
        folder: string | MergeCoreCollection<Schema, "directus_folders", {
            id: string;
            name: string;
            parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
        }> | null;
        uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        uploaded_on: "datetime";
        modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        modified_on: "datetime";
        charset: string | null;
        filesize: string | null;
        width: number | null;
        height: number | null;
        duration: number | null;
        embed: unknown;
        description: string | null;
        location: string | null;
        tags: string[] | null;
        metadata: Record<string, any> | null;
    }> | null;
    language: string | null;
    theme: string | null;
    tfa_secret: string | null;
    status: string;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    token: string | null;
    last_access: "datetime" | null;
    last_page: string | null;
    provider: string;
    external_identifier: string | null;
    auth_data: Record<string, any> | null;
    email_notifications: boolean | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_users", {
    id: string;
    first_name: string | null;
    last_name: string | null;
    email: string | null;
    password: string | null;
    location: string | null;
    /**
     * Update multiple existing users.
     *
     * @param keys The primary key of the users
     * @param item The user data to update
     * @param query Optional return data query
     *
     * @returns Returns the user objects for the updated users.
     * @throws Will throw if keys is empty
     */
    title: string | null;
    description: string | null;
    tags: string[] | null;
    avatar: string | MergeCoreCollection<Schema, "directus_files", {
        id: string;
        storage: string;
        filename_disk: string | null;
        filename_download: string;
        title: string | null;
        type: string | null;
        folder: string | MergeCoreCollection<Schema, "directus_folders", {
            id: string;
            name: string;
            parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
        }> | null;
        uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        uploaded_on: "datetime";
        modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        modified_on: "datetime";
        charset: string | null;
        filesize: string | null;
        width: number | null;
        height: number | null;
        duration: number | null;
        embed: unknown;
        description: string | null;
        location: string | null;
        tags: string[] | null;
        metadata: Record<string, any> | null;
    }> | null;
    language: string | null;
    theme: string | null;
    tfa_secret: string | null;
    status: string;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    token: string | null;
    last_access: "datetime" | null;
    last_page: string | null;
    provider: string;
    external_identifier: string | null;
    auth_data: Record<string, any> | null;
    email_notifications: boolean | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_users", {
    id: string;
    first_name: string | null;
    last_name: string | null;
    email: string | null;
    password: string | null;
    location: string | null;
    /**
     * Update multiple existing users.
     *
     * @param keys The primary key of the users
     * @param item The user data to update
     * @param query Optional return data query
     *
     * @returns Returns the user objects for the updated users.
     * @throws Will throw if keys is empty
     */
    title: string | null;
    description: string | null;
    tags: string[] | null;
    avatar: string | MergeCoreCollection<Schema, "directus_files", {
        id: string;
        storage: string;
        filename_disk: string | null;
        filename_download: string;
        title: string | null;
        type: string | null;
        folder: string | MergeCoreCollection<Schema, "directus_folders", {
            id: string;
            name: string;
            parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
        }> | null;
        uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        uploaded_on: "datetime";
        modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        modified_on: "datetime";
        charset: string | null;
        filesize: string | null;
        width: number | null;
        height: number | null;
        duration: number | null;
        embed: unknown;
        description: string | null;
        location: string | null;
        tags: string[] | null;
        metadata: Record<string, any> | null;
    }> | null;
    language: string | null;
    theme: string | null;
    tfa_secret: string | null;
    status: string;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    token: string | null;
    last_access: "datetime" | null;
    last_page: string | null;
    provider: string;
    external_identifier: string | null;
    auth_data: Record<string, any> | null;
    email_notifications: boolean | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_users", {
    id: string;
    first_name: string | null;
    last_name: string | null;
    email: string | null;
    password: string | null;
    location: string | null;
    /**
     * Update multiple existing users.
     *
     * @param keys The primary key of the users
     * @param item The user data to update
     * @param query Optional return data query
     *
     * @returns Returns the user objects for the updated users.
     * @throws Will throw if keys is empty
     */
    title: string | null;
    description: string | null;
    tags: string[] | null;
    avatar: string | MergeCoreCollection<Schema, "directus_files", {
        id: string;
        storage: string;
        filename_disk: string | null;
        filename_download: string;
        title: string | null;
        type: string | null;
        folder: string | MergeCoreCollection<Schema, "directus_folders", {
            id: string;
            name: string;
            parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
        }> | null;
        uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        uploaded_on: "datetime";
        modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        modified_on: "datetime";
        charset: string | null;
        filesize: string | null;
        width: number | null;
        height: number | null;
        duration: number | null;
        embed: unknown;
        description: string | null;
        location: string | null;
        tags: string[] | null;
        metadata: Record<string, any> | null;
    }> | null;
    language: string | null;
    theme: string | null;
    tfa_secret: string | null;
    status: string;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    token: string | null;
    last_access: "datetime" | null;
    last_page: string | null;
    provider: string;
    external_identifier: string | null;
    auth_data: Record<string, any> | null;
    email_notifications: boolean | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_users", {
    id: string;
    first_name: string | null;
    last_name: string | null;
    email: string | null;
    password: string | null;
    location: string | null;
    /**
     * Update multiple existing users.
     *
     * @param keys The primary key of the users
     * @param item The user data to update
     * @param query Optional return data query
     *
     * @returns Returns the user objects for the updated users.
     * @throws Will throw if keys is empty
     */
    title: string | null;
    description: string | null;
    tags: string[] | null;
    avatar: string | MergeCoreCollection<Schema, "directus_files", {
        id: string;
        storage: string;
        filename_disk: string | null;
        filename_download: string;
        title: string | null;
        type: string | null;
        folder: string | MergeCoreCollection<Schema, "directus_folders", {
            id: string;
            name: string;
            parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
        }> | null;
        uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        uploaded_on: "datetime";
        modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        modified_on: "datetime";
        charset: string | null;
        filesize: string | null;
        width: number | null;
        height: number | null;
        duration: number | null;
        embed: unknown;
        description: string | null;
        location: string | null;
        tags: string[] | null;
        metadata: Record<string, any> | null;
    }> | null;
    language: string | null;
    theme: string | null;
    tfa_secret: string | null;
    status: string;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    token: string | null;
    last_access: "datetime" | null;
    last_page: string | null;
    provider: string;
    external_identifier: string | null;
    auth_data: Record<string, any> | null;
    email_notifications: boolean | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>, Schema>;
/**
 * Update the authenticated user.
 *
 * @param item The user data to update
 * @param query Optional return data query
 *
 * @returns Returns the updated user object for the authenticated user.
 */
declare const updateMe: <Schema extends object, const TQuery extends Query<Schema, DirectusUser<Schema>>>(item: Partial<DirectusUser<Schema>>, query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_users", {
    id: string;
    first_name: string | null;
    last_name: string | null;
    email: string | null;
    password: string | null;
    location: string | null;
    /**
     * Update multiple existing users.
     *
     * @param keys The primary key of the users
     * @param item The user data to update
     * @param query Optional return data query
     *
     * @returns Returns the user objects for the updated users.
     * @throws Will throw if keys is empty
     */
    title: string | null;
    description: string | null;
    tags: string[] | null;
    avatar: string | MergeCoreCollection<Schema, "directus_files", {
        id: string;
        storage: string;
        filename_disk: string | null;
        filename_download: string;
        title: string | null;
        type: string | null;
        folder: string | MergeCoreCollection<Schema, "directus_folders", {
            id: string;
            name: string;
            parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
        }> | null;
        uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        uploaded_on: "datetime";
        modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        modified_on: "datetime";
        charset: string | null;
        filesize: string | null;
        width: number | null;
        height: number | null;
        duration: number | null;
        embed: unknown;
        description: string | null;
        location: string | null;
        tags: string[] | null;
        metadata: Record<string, any> | null;
    }> | null;
    language: string | null;
    theme: string | null;
    tfa_secret: string | null;
    status: string;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    token: string | null;
    last_access: "datetime" | null;
    last_page: string | null;
    provider: string;
    external_identifier: string | null;
    auth_data: Record<string, any> | null;
    email_notifications: boolean | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_users", {
    id: string;
    first_name: string | null;
    last_name: string | null;
    email: string | null;
    password: string | null;
    location: string | null;
    /**
     * Update multiple existing users.
     *
     * @param keys The primary key of the users
     * @param item The user data to update
     * @param query Optional return data query
     *
     * @returns Returns the user objects for the updated users.
     * @throws Will throw if keys is empty
     */
    title: string | null;
    description: string | null;
    tags: string[] | null;
    avatar: string | MergeCoreCollection<Schema, "directus_files", {
        id: string;
        storage: string;
        filename_disk: string | null;
        filename_download: string;
        title: string | null;
        type: string | null;
        folder: string | MergeCoreCollection<Schema, "directus_folders", {
            id: string;
            name: string;
            parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
        }> | null;
        uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        uploaded_on: "datetime";
        modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        modified_on: "datetime";
        charset: string | null;
        filesize: string | null;
        width: number | null;
        height: number | null;
        duration: number | null;
        embed: unknown;
        description: string | null;
        location: string | null;
        tags: string[] | null;
        metadata: Record<string, any> | null;
    }> | null;
    language: string | null;
    theme: string | null;
    tfa_secret: string | null;
    status: string;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    token: string | null;
    last_access: "datetime" | null;
    last_page: string | null;
    provider: string;
    external_identifier: string | null;
    auth_data: Record<string, any> | null;
    email_notifications: boolean | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_users", {
    id: string;
    first_name: string | null;
    last_name: string | null;
    email: string | null;
    password: string | null;
    location: string | null;
    /**
     * Update multiple existing users.
     *
     * @param keys The primary key of the users
     * @param item The user data to update
     * @param query Optional return data query
     *
     * @returns Returns the user objects for the updated users.
     * @throws Will throw if keys is empty
     */
    title: string | null;
    description: string | null;
    tags: string[] | null;
    avatar: string | MergeCoreCollection<Schema, "directus_files", {
        id: string;
        storage: string;
        filename_disk: string | null;
        filename_download: string;
        title: string | null;
        type: string | null;
        folder: string | MergeCoreCollection<Schema, "directus_folders", {
            id: string;
            name: string;
            parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
        }> | null;
        uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        uploaded_on: "datetime";
        modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        modified_on: "datetime";
        charset: string | null;
        filesize: string | null;
        width: number | null;
        height: number | null;
        duration: number | null;
        embed: unknown;
        description: string | null;
        location: string | null;
        tags: string[] | null;
        metadata: Record<string, any> | null;
    }> | null;
    language: string | null;
    theme: string | null;
    tfa_secret: string | null;
    status: string;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    token: string | null;
    last_access: "datetime" | null;
    last_page: string | null;
    provider: string;
    external_identifier: string | null;
    auth_data: Record<string, any> | null;
    email_notifications: boolean | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_users", {
    id: string;
    first_name: string | null;
    last_name: string | null;
    email: string | null;
    password: string | null;
    location: string | null;
    /**
     * Update multiple existing users.
     *
     * @param keys The primary key of the users
     * @param item The user data to update
     * @param query Optional return data query
     *
     * @returns Returns the user objects for the updated users.
     * @throws Will throw if keys is empty
     */
    title: string | null;
    description: string | null;
    tags: string[] | null;
    avatar: string | MergeCoreCollection<Schema, "directus_files", {
        id: string;
        storage: string;
        filename_disk: string | null;
        filename_download: string;
        title: string | null;
        type: string | null;
        folder: string | MergeCoreCollection<Schema, "directus_folders", {
            id: string;
            name: string;
            parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
        }> | null;
        uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        uploaded_on: "datetime";
        modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        modified_on: "datetime";
        charset: string | null;
        filesize: string | null;
        width: number | null;
        height: number | null;
        duration: number | null;
        embed: unknown;
        description: string | null;
        location: string | null;
        tags: string[] | null;
        metadata: Record<string, any> | null;
    }> | null;
    language: string | null;
    theme: string | null;
    tfa_secret: string | null;
    status: string;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    token: string | null;
    last_access: "datetime" | null;
    last_page: string | null;
    provider: string;
    external_identifier: string | null;
    auth_data: Record<string, any> | null;
    email_notifications: boolean | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_users", {
    id: string;
    first_name: string | null;
    last_name: string | null;
    email: string | null;
    password: string | null;
    location: string | null;
    /**
     * Update multiple existing users.
     *
     * @param keys The primary key of the users
     * @param item The user data to update
     * @param query Optional return data query
     *
     * @returns Returns the user objects for the updated users.
     * @throws Will throw if keys is empty
     */
    title: string | null;
    description: string | null;
    tags: string[] | null;
    avatar: string | MergeCoreCollection<Schema, "directus_files", {
        id: string;
        storage: string;
        filename_disk: string | null;
        filename_download: string;
        title: string | null;
        type: string | null;
        folder: string | MergeCoreCollection<Schema, "directus_folders", {
            id: string;
            name: string;
            parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
        }> | null;
        uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        uploaded_on: "datetime";
        modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        modified_on: "datetime";
        charset: string | null;
        filesize: string | null;
        width: number | null;
        height: number | null;
        duration: number | null;
        embed: unknown;
        description: string | null;
        location: string | null;
        tags: string[] | null;
        metadata: Record<string, any> | null;
    }> | null;
    language: string | null;
    theme: string | null;
    tfa_secret: string | null;
    status: string;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    token: string | null;
    last_access: "datetime" | null;
    last_page: string | null;
    provider: string;
    external_identifier: string | null;
    auth_data: Record<string, any> | null;
    email_notifications: boolean | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_users", {
    id: string;
    first_name: string | null;
    last_name: string | null;
    email: string | null;
    password: string | null;
    location: string | null;
    /**
     * Update multiple existing users.
     *
     * @param keys The primary key of the users
     * @param item The user data to update
     * @param query Optional return data query
     *
     * @returns Returns the user objects for the updated users.
     * @throws Will throw if keys is empty
     */
    title: string | null;
    description: string | null;
    tags: string[] | null;
    avatar: string | MergeCoreCollection<Schema, "directus_files", {
        id: string;
        storage: string;
        filename_disk: string | null;
        filename_download: string;
        title: string | null;
        type: string | null;
        folder: string | MergeCoreCollection<Schema, "directus_folders", {
            id: string;
            name: string;
            parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
        }> | null;
        uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        uploaded_on: "datetime";
        modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
        modified_on: "datetime";
        charset: string | null;
        filesize: string | null;
        width: number | null;
        height: number | null;
        duration: number | null;
        embed: unknown;
        description: string | null;
        location: string | null;
        tags: string[] | null;
        metadata: Record<string, any> | null;
    }> | null;
    language: string | null;
    theme: string | null;
    tfa_secret: string | null;
    status: string;
    role: string | MergeCoreCollection<Schema, "directus_roles", {
        id: string;
        name: string;
        icon: string;
        description: string | null;
        ip_access: string | null;
        enforce_tfa: boolean;
        admin_access: boolean;
        app_access: boolean;
    }> | null;
    token: string | null;
    last_access: "datetime" | null;
    last_page: string | null;
    provider: string;
    external_identifier: string | null;
    auth_data: Record<string, any> | null;
    email_notifications: boolean | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>, Schema>;

type UpdateContentVersionOutput<Schema extends object, TQuery extends Query<Schema, Item>, Item extends object = DirectusVersion<Schema>> = ApplyQueryFields<Schema, Item, TQuery['fields']>;
/**
 * Update multiple existing Content Versions.
 * @param keys
 * @param item
 * @param query
 * @returns Returns the Content Version objects for the updated Content Versions.
 * @throws Will throw if keys is empty
 */
declare const updateContentVersions: <Schema extends object, const TQuery extends Query<Schema, DirectusVersion<Schema>>>(keys: DirectusVersion<Schema>["id"][], item: Partial<DirectusVersion<Schema>>, query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_versions", {
    id: string;
    key: string;
    name: string | null;
    collection: string | DirectusCollection<Schema>;
    item: string;
    hash: string;
    date_created: "datetime" | null;
    date_updated: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    user_updated: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_versions", {
    id: string;
    key: string;
    name: string | null;
    collection: string | DirectusCollection<Schema>;
    item: string;
    hash: string;
    date_created: "datetime" | null;
    date_updated: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    user_updated: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_versions", {
    id: string;
    key: string;
    name: string | null;
    collection: string | DirectusCollection<Schema>;
    item: string;
    hash: string;
    date_created: "datetime" | null;
    date_updated: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    user_updated: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_versions", {
    id: string;
    key: string;
    name: string | null;
    collection: string | DirectusCollection<Schema>;
    item: string;
    hash: string;
    date_created: "datetime" | null;
    date_updated: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    user_updated: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_versions", {
    id: string;
    key: string;
    name: string | null;
    collection: string | DirectusCollection<Schema>;
    item: string;
    hash: string;
    date_created: "datetime" | null;
    date_updated: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    user_updated: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_versions", {
    id: string;
    key: string;
    name: string | null;
    collection: string | DirectusCollection<Schema>;
    item: string;
    hash: string;
    date_created: "datetime" | null;
    date_updated: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    user_updated: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>[], Schema>;
/**
 * Update an existing Content Version.
 * @param key
 * @param item
 * @param query
 * @returns Returns the Content Version object for the updated Content Version.
 * @throws Will throw if key is empty
 */
declare const updateContentVersion: <Schema extends object, const TQuery extends Query<Schema, DirectusVersion<Schema>>>(key: DirectusVersion<Schema>["id"], item: Partial<DirectusVersion<Schema>>, query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_versions", {
    id: string;
    key: string;
    name: string | null;
    collection: string | DirectusCollection<Schema>;
    item: string;
    hash: string;
    date_created: "datetime" | null;
    date_updated: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    user_updated: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_versions", {
    id: string;
    key: string;
    name: string | null;
    collection: string | DirectusCollection<Schema>;
    item: string;
    hash: string;
    date_created: "datetime" | null;
    date_updated: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    user_updated: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_versions", {
    id: string;
    key: string;
    name: string | null;
    collection: string | DirectusCollection<Schema>;
    item: string;
    hash: string;
    date_created: "datetime" | null;
    date_updated: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    user_updated: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_versions", {
    id: string;
    key: string;
    name: string | null;
    collection: string | DirectusCollection<Schema>;
    item: string;
    hash: string;
    date_created: "datetime" | null;
    date_updated: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    user_updated: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_versions", {
    id: string;
    key: string;
    name: string | null;
    collection: string | DirectusCollection<Schema>;
    item: string;
    hash: string;
    date_created: "datetime" | null;
    date_updated: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    user_updated: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_versions", {
    id: string;
    key: string;
    name: string | null;
    collection: string | DirectusCollection<Schema>;
    item: string;
    hash: string;
    date_created: "datetime" | null;
    date_updated: "datetime" | null;
    user_created: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
    user_updated: string | MergeCoreCollection<Schema, "directus_users", {
        id: string;
        first_name: string | null;
        last_name: string | null;
        email: string | null;
        password: string | null;
        location: string | null;
        title: string | null;
        description: string | null;
        tags: string[] | null;
        avatar: string | MergeCoreCollection<Schema, "directus_files", {
            id: string;
            storage: string;
            filename_disk: string | null;
            filename_download: string;
            title: string | null;
            type: string | null;
            folder: string | MergeCoreCollection<Schema, "directus_folders", {
                id: string;
                name: string;
                parent: string | MergeCoreCollection<Schema, "directus_folders", any> | null;
            }> | null;
            uploaded_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            uploaded_on: "datetime";
            modified_by: string | MergeCoreCollection<Schema, "directus_users", any> | null;
            modified_on: "datetime";
            charset: string | null;
            filesize: string | null;
            width: number | null;
            height: number | null;
            duration: number | null;
            embed: unknown;
            description: string | null;
            location: string | null;
            tags: string[] | null;
            metadata: Record<string, any> | null;
        }> | null;
        language: string | null;
        theme: string | null;
        tfa_secret: string | null;
        status: string;
        role: string | MergeCoreCollection<Schema, "directus_roles", {
            id: string;
            name: string;
            icon: string;
            description: string | null;
            ip_access: string | null;
            enforce_tfa: boolean;
            admin_access: boolean;
            app_access: boolean;
        }> | null;
        token: string | null;
        last_access: "datetime" | null;
        last_page: string | null;
        provider: string;
        external_identifier: string | null;
        auth_data: Record<string, any> | null;
        email_notifications: boolean | null;
    }> | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>, Schema>;

type UpdateWebhookOutput<Schema extends object, TQuery extends Query<Schema, Item>, Item extends object = DirectusWebhook<Schema>> = ApplyQueryFields<Schema, Item, TQuery['fields']>;
/**
 * Update multiple existing webhooks.
 * @param keys
 * @param item
 * @param query
 * @returns Returns the webhook objects for the updated webhooks.
 * @throws Will throw if keys is empty
 */
declare const updateWebhooks: <Schema extends object, const TQuery extends Query<Schema, DirectusWebhook<Schema>>>(keys: DirectusWebhook<Schema>["id"][], item: Partial<DirectusWebhook<Schema>>, query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_webhooks", {
    id: number;
    name: string;
    method: string;
    url: string;
    status: string;
    data: boolean;
    actions: string | string[];
    collections: string | string[];
    headers: Record<string, any> | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_webhooks", {
    id: number;
    name: string;
    method: string;
    url: string;
    status: string;
    data: boolean;
    actions: string | string[];
    collections: string | string[];
    headers: Record<string, any> | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_webhooks", {
    id: number;
    name: string;
    method: string;
    url: string;
    status: string;
    data: boolean;
    actions: string | string[];
    collections: string | string[];
    headers: Record<string, any> | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_webhooks", {
    id: number;
    name: string;
    method: string;
    url: string;
    status: string;
    data: boolean;
    actions: string | string[];
    collections: string | string[];
    headers: Record<string, any> | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_webhooks", {
    id: number;
    name: string;
    method: string;
    url: string;
    status: string;
    data: boolean;
    actions: string | string[];
    collections: string | string[];
    headers: Record<string, any> | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_webhooks", {
    id: number;
    name: string;
    method: string;
    url: string;
    status: string;
    data: boolean;
    actions: string | string[];
    collections: string | string[];
    headers: Record<string, any> | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>[], Schema>;
/**
 * Update an existing webhook.
 * @param key
 * @param item
 * @param query
 * @returns Returns the webhook object for the updated webhook.
 * @throws Will throw if key is empty
 */
declare const updateWebhook: <Schema extends object, const TQuery extends Query<Schema, DirectusWebhook<Schema>>>(key: DirectusWebhook<Schema>["id"], item: Partial<DirectusWebhook<Schema>>, query?: TQuery | undefined) => RestCommand<IfAny<Schema, Record<string, any>, Merge<MappedFunctionFields<Schema, UnpackList<MergeCoreCollection<Schema, "directus_webhooks", {
    id: number;
    name: string;
    method: string;
    url: string;
    status: string;
    data: boolean;
    actions: string | string[];
    collections: string | string[];
    headers: Record<string, any> | null;
}>>> extends infer FF ? MapFlatFields<UnpackList<MergeCoreCollection<Schema, "directus_webhooks", {
    id: number;
    name: string;
    method: string;
    url: string;
    status: string;
    data: boolean;
    actions: string | string[];
    collections: string | string[];
    headers: Record<string, any> | null;
}>>, FieldsWildcard<UnpackList<MergeCoreCollection<Schema, "directus_webhooks", {
    id: number;
    name: string;
    method: string;
    url: string;
    status: string;
    data: boolean;
    actions: string | string[];
    collections: string | string[];
    headers: Record<string, any> | null;
}>>, Exclude<UnpackList<Mutable<TQuery["fields"]>>, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T ? T extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T extends never ? never : keyof T : never : never>>, FF extends Record<string, string> ? FF : Record<string, string>> : never, PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> extends infer T_1 ? T_1 extends PickRelationalFields<UnpackList<Mutable<TQuery["fields"]>>> ? T_1 extends never ? never : { [Field in keyof T_1]: Field extends keyof UnpackList<MergeCoreCollection<Schema, "directus_webhooks", {
    id: number;
    name: string;
    method: string;
    url: string;
    status: string;
    data: boolean;
    actions: string | string[];
    collections: string | string[];
    headers: Record<string, any> | null;
}>> ? Extract<UnpackList<MergeCoreCollection<Schema, "directus_webhooks", {
    id: number;
    name: string;
    method: string;
    url: string;
    status: string;
    data: boolean;
    actions: string | string[];
    collections: string | string[];
    headers: Record<string, any> | null;
}>>[Field], ItemType<Schema>> extends infer RelatedCollection ? IsNullable<UnpackList<MergeCoreCollection<Schema, "directus_webhooks", {
    id: number;
    name: string;
    method: string;
    url: string;
    status: string;
    data: boolean;
    actions: string | string[];
    collections: string | string[];
    headers: Record<string, any> | null;
}>>[Field], (RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>) | null, RelatedCollection extends any[] ? HasManyToAnyRelation<RelatedCollection> extends never ? ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>[] | null : ApplyManyToAnyFields<Schema, RelatedCollection, T_1[Field], UnpackList<RelatedCollection>>[] : ApplyNestedQueryFields<Schema, RelatedCollection, T_1[Field]>> : never : never; } : never : never>>, Schema>;

/**
 * Resets both the data and schema cache of Directus. This endpoint is only available to admin users.
 * @returns Nothing
 */
declare const clearCache: <Schema extends object>() => RestCommand<void, Schema>;

type FileFormat = 'csv' | 'json' | 'xml' | 'yaml';
/**
 * Export a larger data set to a file in the File Library
 * @returns Nothing
 */
declare const utilsExport: <Schema extends object, TQuery extends Query<Schema, Schema[Collection]>, Collection extends keyof Schema>(collection: Collection, format: FileFormat, query: TQuery, file: Partial<DirectusFile<Schema>>) => RestCommand<void, Schema>;

/**
 * Trigger a flow
 * @param method
 * @param id
 * @param data
 * @returns Result of the flow, if any.
 */
declare const triggerFlow: <Schema extends object>(method: 'GET' | 'POST', id: string, data?: Record<string, string>) => RestCommand<unknown, Schema>;

/**
 * Generate a hash for a given string.
 * @param string String to hash.
 * @returns Hashed string.
 */
declare const generateHash: <Schema extends object>(string: string) => RestCommand<string, Schema>;
/**
 * Verify a string with a hash.
 * @param string Source string.
 * @param hash Hash you want to verify against.
 * @returns Boolean.
 */
declare const verifyHash: <Schema extends object>(string: string, hash: string) => RestCommand<boolean, Schema>;

/**
 * Import multiple records from a JSON or CSV file into a collection.
 * @returns Nothing
 */
declare const utilsImport: <Schema extends object>(collection: keyof Schema, data: FormData) => RestCommand<void, Schema>;

/**
 * Trigger an operation
 * @param id
 * @param data
 * @returns Result of the flow, if any.
 */
declare const triggerOperation: <Schema extends object>(id: string, data?: any) => RestCommand<unknown, Schema>;

/**
 * Shares work by publicly giving you an access/refresh token combination (as you would get with the regular /auth/login endpoints). These tokens are limited to a permissions set that only allows access to the item that was shared, and any relationally linked items that that associated role has access to. This means that all regular endpoints can be used with the credentials set returned by this endpoint.
 *
 * @param share Shares work by publicly giving you an access/refresh token combination (as you would get with the regular /auth/login endpoints). These tokens are limited to a permissions set that only allows access to the item that was shared, and any relationally linked items that that associated role has access to. This means that all regular endpoints can be used with the credentials set returned by this endpoint.
 * @param password Password for the share, if one is configured.
 *
 * @returns Authentication Credentials
 */
declare const authenticateShare: <Schema extends object>(share: string, password: string) => RestCommand<{
    access_token: string;
    refresh_token: string;
    expires: number;
}, Schema>;
/**
 * Sends an email to the provided email addresses with a link to the share.
 *
 * @param share Primary key of the share you're inviting people to.
 * @param emails Array of email strings to send the share link to.
 *
 * @returns Nothing
 */
declare const inviteShare: <Schema extends object>(share: string, emails: string[]) => RestCommand<void, Schema>;
/**
 * Allows unauthenticated users to retrieve information about the share.
 *
 * @param id Primary key of the share you're viewing.
 *
 * @returns The share objects for the given UUID, if it's still valid.
 */
declare const readShareInfo: <Schema extends object>(id: string) => RestCommand<{
    id: string;
    collection: string;
    item: string;
    password: string | null;
    date_start: string | null;
    date_end: string | null;
    times_used: number | null;
    max_uses: number | null;
}, Schema>;

/**
 * If a collection has a sort field, this util can be used to move items in that manual order.
 * @returns Nothing
 */
declare const utilitySort: <Schema extends object>(collection: keyof Schema, item: string, to: number) => RestCommand<void, Schema>;

/**
 * Invite a new user by email.
 *
 * @param email User email to invite.
 * @param role Role of the new user.
 * @param invite_url Provide a custom invite url which the link in the email will lead to. The invite token will be passed as a parameter.
 *
 * @returns Nothing
 */
declare const inviteUser: <Schema extends object>(email: string, role: string, invite_url?: string) => RestCommand<void, Schema>;
/**
 * Accept your invite. The invite user endpoint sends the email a link to the Admin App.
 *
 * @param token Accept invite token.
 * @param password Password for the user.
 *
 * @returns Nothing
 */
declare const acceptUserInvite: <Schema extends object>(token: string, password: string) => RestCommand<void, Schema>;
/**
 * Generates a secret and returns the URL to be used in an authenticator app.
 *
 * @param password The user's password.
 *
 * @returns A two-factor secret
 */
declare const generateTwoFactorSecret: <Schema extends object>(password: string) => RestCommand<{
    secret: string;
    otpauth_url: string;
}, Schema>;
/**
 * Adds a TFA secret to the user account.
 *
 * @param secret The TFA secret from tfa/generate.
 * @param otp OTP generated with the secret, to recheck if the user has a correct TFA setup
 *
 * @returns Nothing
 */
declare const enableTwoFactor: <Schema extends object>(secret: string, otp: string) => RestCommand<void, Schema>;
/**
 * Disables two-factor authentication by removing the OTP secret from the user.
 *
 * @param otp One-time password generated by the authenticator app.
 *
 * @returns Nothing
 */
declare const disableTwoFactor: <Schema extends object>(otp: string) => RestCommand<void, Schema>;

/**
 * Save item changes to an existing Content Version.
 *
 * @param id Primary key of the Content Version.
 * @param item The item changes to save to the specified Content Version.
 *
 * @returns State of the item after save.
 */
declare const saveToContentVersion: <Schema extends object, Collection extends keyof Schema, Item = UnpackList<Schema[Collection]>>(id: DirectusVersion<Schema>["id"], item: Partial<Item>) => RestCommand<Item, Schema>;
/**
 * Compare an existing Content Version with the main version of the item.
 *
 * @param id Primary key of the Content Version.
 *
 * @returns All fields with different values, along with the hash of the main version of the item and the information
whether the Content Version is outdated (i.e. main version of the item has been updated since the creation of the
Content Version)
 */
declare const compareContentVersion: <Schema extends object, Collection extends keyof Schema, Item = UnpackList<Schema[Collection]>>(id: DirectusVersion<Schema>["id"]) => RestCommand<{
    outdated: boolean;
    mainHash: string;
    current: Partial<Item>;
    main: Item;
}, Schema>;
/**
 * Promote an existing Content Version to become the new main version of the item.
 *
 * @param id Primary key of the version.
 * @param mainHash The current hash of the main version of the item (obtained from the `compare` endpoint).
 * @param fields Optional array of field names of which the values are to be promoted. By default, all fields are selected.
 *
 * @returns The primary key of the promoted item.
 */
declare const promoteContentVersion: <Schema extends object, Collection extends keyof Schema, Item = UnpackList<Schema[Collection]>>(id: DirectusVersion<Schema>["id"], mainHash: string, fields?: (keyof UnpackList<Item>)[] | undefined) => RestCommand<string | number, Schema>;

/**
 * Creates a client to communicate with the Directus REST API.
 *
 * @returns A Directus REST client.
 */
declare const rest: (config?: Partial<RestConfig>) => <Schema extends object>(client: DirectusClient<Schema>) => RestClient<Schema>;

/**
 * Add arbitrary options to a fetch request
 *
 * @param getOptions
 * @param onRequest
 *
 * @returns
 */
declare function withOptions<Schema extends object, Output>(getOptions: RestCommand<Output, Schema>, extraOptions: RequestTransformer | Partial<RequestInit>): RestCommand<Output, Schema>;

declare function withSearch<Schema extends object, Output>(getOptions: RestCommand<Output, Schema>): RestCommand<Output, Schema>;

declare function withToken<Schema extends object, Output>(token: string, getOptions: RestCommand<Output, Schema>): RestCommand<Output, Schema>;

type ExtendedQuery<Schema extends object, Item> = Query<Schema, Item> & {
    aggregate?: Record<keyof AggregationTypes, string>;
    groupBy?: (string | GroupByFields<Schema, Item>)[];
};
/**
 * Transform nested query object to an url compatible format
 *
 * @param query The nested query object
 *
 * @returns Flat query parameters
 */
declare const queryToParams: <Schema extends object, Item>(query: ExtendedQuery<Schema, Item>) => Record<string, string>;

/**
 *
 * @param value
 * @param message
 * @throws Throws an error if an empty array or string is provided
 */
declare const throwIfEmpty: (value: string | (string | number)[], message: string) => void;

/**
 *
 * @param value
 * @param message
 * @throws Throws an error if the collection starts with the `directus_` prefix
 */
declare const throwIfCoreCollection: (value: string | number | symbol, message: string) => void;

export { CreateUserOutput as $, createNotifications as A, createNotification as B, CreateActivityOutput as C, CreateOperationOutput as D, createOperations as E, createOperation as F, CreatePanelOutput as G, createPanels as H, createPanel as I, CreatePermissionOutput as J, createPermissions as K, createPermission as L, CreatePresetOutput as M, createPresets as N, createPreset as O, CreateRelationOutput as P, createRelation as Q, ReadProviderOutput as R, CreateRoleOutput as S, createRoles as T, createRole as U, CreateShareOutput as V, createShares as W, createShare as X, CreateTranslationOutput as Y, createTranslations as Z, createTranslation as _, passwordReset as a, readFiles as a$, createUsers as a0, createUser as a1, CreateContentVersionOutput as a2, createContentVersions as a3, createContentVersion as a4, CreateWebhookOutput as a5, createWebhooks as a6, createWebhook as a7, deleteComment as a8, deleteCollection as a9, deleteTranslations as aA, deleteTranslation as aB, deleteUsers as aC, deleteUser as aD, deleteContentVersions as aE, deleteContentVersion as aF, deleteWebhooks as aG, deleteWebhook as aH, ReadActivityOutput as aI, readActivities as aJ, readActivity as aK, aggregate as aL, readAssetRaw as aM, readAssetBlob as aN, readAssetArrayBuffer as aO, ReadCollectionOutput as aP, readCollections as aQ, readCollection as aR, ReadDashboardOutput as aS, readDashboards as aT, readDashboard as aU, readExtensions as aV, ReadFieldOutput as aW, readFields as aX, readFieldsByCollection as aY, readField as aZ, ReadFileOutput as a_, deleteDashboards as aa, deleteDashboard as ab, deleteField as ac, deleteFiles as ad, deleteFile as ae, deleteFlows as af, deleteFlow as ag, deleteFolders as ah, deleteFolder as ai, deleteItems as aj, deleteItem as ak, deleteNotifications as al, deleteNotification as am, deleteOperations as an, deleteOperation as ao, deletePanels as ap, deletePanel as aq, deletePermissions as ar, deletePermission as as, deletePresets as at, deletePreset as au, deleteRelation as av, deleteRoles as aw, deleteRole as ax, deleteShares as ay, deleteShare as az, refresh as b, ServerInfoOutput as b$, readFile as b0, ReadFlowOutput as b1, readFlows as b2, readFlow as b3, ReadFolderOutput as b4, readFolders as b5, readFolder as b6, ReadItemOutput as b7, readItems as b8, readItem as b9, readSettings as bA, ReadShareOutput as bB, readShares as bC, readShare as bD, ReadSingletonOutput as bE, readSingleton as bF, ReadTranslationOutput as bG, readTranslations as bH, readTranslation as bI, ReadUserOutput as bJ, readUsers as bK, readUser as bL, readMe as bM, ReadContentVersionOutput as bN, readContentVersions as bO, readContentVersion as bP, ReadWebhookOutput as bQ, readWebhooks as bR, readWebhook as bS, schemaApply as bT, SchemaDiffOutput as bU, schemaDiff as bV, SchemaSnapshotOutput as bW, schemaSnapshot as bX, readGraphqlSdl as bY, ServerHealthOutput as bZ, serverHealth as b_, ReadNotificationOutput as ba, readNotifications as bb, readNotification as bc, ReadOperationOutput as bd, readOperations as be, readOperation as bf, ReadPanelOutput as bg, readPanels as bh, readPanel as bi, ReadPermissionOutput as bj, readPermissions as bk, readPermission as bl, ReadPresetOutput as bm, readPresets as bn, readPreset as bo, ReadRelationOutput as bp, readRelations as bq, readRelationByCollection as br, readRelation as bs, ReadRevisionOutput as bt, readRevisions as bu, readRevision as bv, ReadRoleOutput as bw, readRoles as bx, readRole as by, ReadSettingOutput as bz, createComment as c, updateWebhooks as c$, serverInfo as c0, OpenApiSpecOutput as c1, readOpenApiSpec as c2, serverPing as c3, UpdateActivityOutput as c4, updateComment as c5, UpdateCollectionOutput as c6, updateCollection as c7, UpdateDashboardOutput as c8, updateDashboards as c9, updatePermission as cA, UpdatePresetOutput as cB, updatePresets as cC, updatePreset as cD, UpdateRelationOutput as cE, updateRelation as cF, UpdateRoleOutput as cG, updateRoles as cH, updateRole as cI, UpdateSettingOutput as cJ, updateSettings as cK, UpdateShareOutput as cL, updateShares as cM, updateShare as cN, UpdateSingletonOutput as cO, updateSingleton as cP, UpdateTranslationOutput as cQ, updateTranslations as cR, updateTranslation as cS, UpdateUserOutput as cT, updateUsers as cU, updateUser as cV, updateMe as cW, UpdateContentVersionOutput as cX, updateContentVersions as cY, updateContentVersion as cZ, UpdateWebhookOutput as c_, updateDashboard as ca, UpdateFieldOutput as cb, updateField as cc, UpdateFileOutput as cd, updateFiles as ce, updateFile as cf, UpdateFlowOutput as cg, updateFlows as ch, updateFlow as ci, UpdateFolderOutput as cj, updateFolders as ck, updateFolder as cl, UpdateItemOutput as cm, updateItems as cn, updateItem as co, UpdateNotificationOutput as cp, updateNotifications as cq, updateNotification as cr, UpdateOperationOutput as cs, updateOperations as ct, updateOperation as cu, UpdatePanelOutput as cv, updatePanels as cw, updatePanel as cx, UpdatePermissionOutput as cy, updatePermissions as cz, CreateCollectionOutput as d, updateWebhook as d0, clearCache as d1, FileFormat as d2, utilsExport as d3, triggerFlow as d4, generateHash as d5, verifyHash as d6, utilsImport as d7, triggerOperation as d8, authenticateShare as d9, AssetsQuery as dA, ExtensionTypes as dB, ExtensionItem as dC, inviteShare as da, readShareInfo as db, utilitySort as dc, inviteUser as dd, acceptUserInvite as de, generateTwoFactorSecret as df, enableTwoFactor as dg, disableTwoFactor as dh, saveToContentVersion as di, compareContentVersion as dj, promoteContentVersion as dk, rest as dl, withOptions as dm, withSearch as dn, withToken as dp, queryToParams as dq, throwIfEmpty as dr, throwIfCoreCollection as ds, DirectusTranslation as dt, GroupingFunctions as du, AggregationTypes as dv, AggregateRecord as dw, GroupByFields as dx, AggregationOptions as dy, AggregationOutput as dz, createCollection as e, CreateDashboardOutput as f, createDashboards as g, createDashboard as h, CreateFieldOutput as i, createField as j, CreateFileOutput as k, logout as l, importFile as m, CreateFlowOutput as n, createFlows as o, passwordRequest as p, createFlow as q, readProviders as r, CreateFolderOutput as s, createFolders as t, uploadFiles as u, createFolder as v, CreateItemOutput as w, createItems as x, createItem as y, CreateNotificationOutput as z };
